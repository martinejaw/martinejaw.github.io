{"version":3,"sources":["components/NoLinealProgramming/logo.svg","components/ModeloRedes/Functions/ArbolMinimaExpansion.js","components/ModeloRedes/Functions/RutaMasCorta.js","components/ModeloStock/Functions/modelo1.js","components/ModeloStock/Functions/modelo2.js","components/ModeloStock/Functions/ModeloTriangular.js","components/ModeloStock/Functions/ModeloSimpleConAgotamiento.js","components/ModeloStock/Functions/ModeloSimpleSinAgotamientoPorLote.js","components/Inicio/index.js","components/LinealProgramming/index.js","components/Models/Firebase.js","components/Models/index.js","components/LinealProgramming/Configuration/Restrictions/Restriction.js","components/LinealProgramming/Configuration/Restrictions/index.js","components/LinealProgramming/Configuration/Variables/Variable.js","components/LinealProgramming/Configuration/Variables/index.js","components/LinealProgramming/Configuration/index.js","components/LinealProgramming/Processing/Restriccion.js","components/LinealProgramming/Processing/FuncionObj.js","components/LinealProgramming/ReferencesList/index.js","components/LinealProgramming/Processing/index.js","components/LinealProgramming/Presentation/SimplexPresentation.js","components/LinealProgramming/Presentation/GraphicPresentation.js","components/LinealProgramming/Presentation/index.js","components/LinealProgramming/InSteps/index.js","components/LinealProgramming/SinglePage/index.js","components/NoLinealProgramming/indexNoImplementado.js","components/NoLinealProgramming/Configuration/Restrictions/Restriction.js","components/NoLinealProgramming/Configuration/Restrictions/index.js","components/NoLinealProgramming/Configuration/Variables/Variable.js","components/NoLinealProgramming/Configuration/Variables/index.js","components/NoLinealProgramming/Configuration/index.js","components/NoLinealProgramming/Processing/Restriccion.js","components/NoLinealProgramming/Processing/FuncionObj.js","components/NoLinealProgramming/Processing/index.js","components/NoLinealProgramming/KuhnyTucker/index.js","components/ModeloRedes/index.js","components/ModeloRedes/Processing/Aristas/Arista.js","components/ModeloRedes/Processing/Aristas/index.js","components/ModeloRedes/Processing/CantidadNodos.js","components/ModeloRedes/Processing/NodoInicial.js","components/ModeloRedes/Processing/index.js","components/ModeloRedes/ArbolMinimaExpansion/presentacion.js","components/ModeloRedes/ArbolMinimaExpansion/index.js","components/ModeloRedes/RutaMasCorta/presentacion.js","components/ModeloRedes/RutaMasCorta/index.js","components/ModeloStock/index.js","components/ModeloStock/Configuration/Ds/d.js","components/ModeloStock/Configuration/Ds/index.js","components/ModeloStock/Configuration/Qs/q.js","components/ModeloStock/Configuration/Qs/index.js","components/ModeloStock/Configuration/CampoUnitarioBase.js","components/ModeloStock/Configuration/TiempoTotal.js","components/ModeloStock/Configuration/index.js","components/ModeloStock/Functions/Validar.js","components/ModeloStock/ModeloWilson/presentacion.js","components/ModeloStock/ModeloWilson/index.js","components/ModeloStock/Modelo2/presentacion.js","components/ModeloStock/Modelo2/index.js","components/ModeloStock/ModeloTriangular/presentacion.js","components/ModeloStock/ModeloTriangular/index.js","components/ModeloStock/ModeloAgotamientoSimple/presentacion.js","components/ModeloStock/ModeloAgotamientoSimple/index.js","components/ModeloStock/ModeloSimpleSinAgotamientoPorLote/presentacion.js","components/ModeloStock/ModeloSimpleSinAgotamientoPorLote/index.js","components/ModeloStock/Teoria/index.js","App.js","serviceWorker.js","index.js","components/ModeloStock/logo.svg","components/ModeloStock/Functions/FuncionesComunes.js","components/LinealProgramming/logo.svg","components/ModeloRedes/logo.svg"],"names":["module","exports","jsgraphs","require","cantidadNodos","aristas","console","log","g","WeightedGraph","forEach","arista","addEdge","Edge","KruskalMST","mst","nodoInicialDeCaminos","dijkstra","WeightedDiGraph","Dijkstra","CalcularqoComun","CalcularN","CalcularToComun","CalcularCTEoComun","CostoTotalPreparacionComun","CostoTotalProductoComun","D","K","C1","T","b","qo","Math","ceil","n","To","CTPre","CTProd","CTAlm","q","CostoTotalAlmacenamiento","CTE","CTEo","sp","ctprep","ctprod","ctalm","casp","CostoAdquisicionSp","cmsp","CostoMantenimientoSp","cte","cteo","CalcularCTEo","math","p","d","sqrt","Calcularqo","Tp","CalcularTp","sm","CalcularSm","C2","so","CalcularSo","s","ca","CostoAgotamiento","CalcularTo","T1","CalcularT1","T2","mode","CostoDineroInmovilizado","P","CalcularC1","cdi","Ci","CalcularCi","PorcCostoProd","bi","Cientrada","xoptimo","x","limsup","Number","MAX_VALUE","flag","length","array","Array","cprod","model","Object","liminf","push","modelmin","ctemin","i","Inicio","useEffect","document","title","Container","fluid","className","Row","Col","xs","md","Jumbotron","to","Button","size","outline","color","ButtonGroup","UncontrolledTooltip","target","id","tag","href","height","src","alt","LinealProgramming","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FirebaseOptimizer","pushTest","dbUsers","doc","set","then","ok","catch","err","getUserName","user","displayName","getModelsReference","uid","collection","deleteModel","modelId","delete","doSignInWithGoogle","auth","signInWithPopup","googleProvider","doSignOut","signOut","app","apps","initializeApp","this","logged","firestore","onAuthStateChanged","GoogleAuthProvider","ModalModels","props","saveNewModel","descModel","state","firebase","setState","saveMenu","signIn","logOut","info","toggle","handleClose","loadModel","setModel","openSaveModel","handleDesc","e","value","loadExampleModel","variables","xi","descripcion","coeficiente","restricciones","ri","coeficientes","eq","derecha","integer","method","objective","loading","models","loadig","authSubscription","dbSubscribe","onSnapshot","snapshot","data","description","openSaveModelMenu","Input","required","valid","onChange","placeholder","onClick","closeSaveModelMenu","loadExample","loginButton","tableModels","Table","responsive","striped","map","key","saveModel","modelTableWSpinner","Spinner","type","modalBody","modalFooter","Modal","isOpen","open","ModalHeader","ModalBody","ModalFooter","React","Component","Restriction","restriccion","InputGroup","InputGroupAddon","addonType","InputGroupText","name","aria-label","aria-describedby","handleChange","UncontrolledPopover","flip","trigger","placement","PopoverBody","Restrictions","handleChangeRes","desc","splice","restri","index","deleteRes","handleRestrictions","handleNewRes","filter","element","Variable","variable","handleChanges","Variables","handleChangesVar","vari","deleteVar","handleVariables","Configuration","handleRestricciones","showModels","faltaDescrip","status","variablesDescriptionsMin","va","restriccionesDescriptionsMin","re","lastStep","buttonsMethods","handleMethod","active","buttonsOptType","handleObjective","Card","CardHeader","CardBody","toggleInteger","PopoverHeader","CardTitle","Alert","Restriccion","cantVariables","diferencia","thisEq","botoneraMaxMin","handleCoefRes","disabled","inputsRestriccions","indx","Fragment","FuncionObj","variablesToFunction","handleCoefVar","toUpperCase","ReferencesList","listDescriptionsVarItems","item","ListGroupItem","Badge","listDescriptionsResItems","co","references","Collapse","ListGroup","Processing","event","parseInt","faltaCoe","verifQty","every","veriResQty","varsOperativas","restriccionesInput","SimplexPresentation","tablaDeRecursosFoot","cantUsoVar","variableId","tableBody","mapperAnalisisTable","result","tableResult","resultSetArray","entries","solutionSet","matrix","_tableau","indexByCol","varIndexByCol","variablesList","variablesPerIndex","evaluation","slice","col","indCol","isSlack","abs","cardsVariablesRender","CardText","CardFooter","details","elementosTabAnalisis","resultAnalisisCard","resultDetalleCard","randomColor","GraphicPresentation","updateState","elem","coefToValueZ","getCoeficientesToEv","referencias","getColorList","getLinesAndExpressions","lines","expresiones","highestValueX","highestValueY","getPoints","points","convexPoints","optimMark","getOptimPoint","lineFunctional","getObjectiveFunctionLine","getTableResult","concat","coef","y","getFrac","real","Fraction","pow","toFixed","toString","arrayDeRestriccionesConLosDosCoef","el","max","apply","xNum","isInteger","yNum","Expression","multiply","expressRestri","add","restriEquation","Equation","tipo","yEqu","solveFor","xEqu","y0","relation","valY","valX","hue","luminosity","solSet","optimPoint","xMax","yMax","xPoint","yPoint","xExp","subtract","yExp","expFunObj","xVal","error","verifyPoint","point","verifyPointInPoints","verifyPointInRestrictions","some","pointL","calIzq","getPointFromExpXExpY","expX","expY","xRes","yRes","getPointFromExpCExpY","expC","expResultY","expResultX","getPointFromExpCExpX","getPointFromTwoExp","exp1","exp2","getPointFromTwoExpC","exp","pointX","getPointAxFromExpCenX","pointY","getPointAxFromExpCenY","getPointAxFromExpX","getPointAxFromExpY","calcAng","atan2","PI","possiblePoints","pointsList","sort","a","orderedPoints","minAngle","reduce","min","indNewPoint","findIndex","getAreaPointsForConvex","shift","slacksTitles","calcResult","calcSlacksValue","hidePoint","showPoint","mapperAreaSeries","opacity","mapperLinesSeries","areaGraph","graph","prevProps","onMouseLeave","pointer","width","fill","stroke","style","strokeWidth","strokeStyle","onValueMouseOver","onValueMouseOut","orientation","items","Presentation","validateCoeficientes","varsOperatives","restOperatives","calculateResults","datosApp","optimize","opType","constraints","ints","newVari","res","convertAppToModelForSolverPrimal","solver","Solve","futureProps","printResults","feasible","bounded","InSteps","handleResult","step","barProg","finishButtonClick","modelsOpen","steps","stepName","component","stepProps","logo","Progress","animated","progressbar","headerTextCenter","validate","previousButtonText","nextButtonText","nextButtonClasses","finishButtonText","SinglePage","changes","NoLinealProgramming","handleObjectiveFunction","objetivo","ModeloRedes","Arista","Aristas","handleChangesArista","split","values","handleAristas","aristasSinValores","nodoInicial","nodoFinal","peso","handleNewsVar","CantidadNodos","handleCantidadNodos","NodoInicial","handleNodoInicial","rutaMasCorta","mostrarResultados","errorDatos","numeroArista","resultados","aristasConverted","isNaN","aristaConverted","arbolExpansionMinima","mostrar","v","either","w","other","weight","resultado","ArbolMinimaExpansion","flagNoHayCamino","V","hasPathTo","path","pathTo","from","distanceTo","RutaMasCorta","ModelosStock","offset","numero","ds","handleChangesD","handleDs","dsSinValores","currentValue","Q","qs","handleChangesQ","handleQs","qsSinValores","CampoUnitario","nombre","TiempoTotal","FormGroup","handleChangeUnit","handleDemanda","handleGeneral","handleTiempoTotal","handleCostoAlm","handleCostoPrep","handleCostoProd","handleStockProteccion","handleDemandaUnitaria","handleVelocidadProduccion","handleCostoAgotamiento","handlePorcAplicaCostoProd","handlePorcInteres","handleCostoPropioMercaderia","handleUnidadTiempoTotal","atributo","titulo","handle","modelo2","columnaGenerica","modeloTriangular","agotamientoSimple","simpleSinAgot","selected","unidadTiempo","costoAlm","costoDeProducto","demandaUnit","velocidadProd","costoAgotamiento","porcInteres","porcAplicaCostoProd","costoPropioMercaderia","qsyds","validar","prop","useCanvas","plotearGrafico","unidad","FlexibleGraph","makeVisFlexible","XYPlot","Line","LineSeriesCanvas","LineSeries","tiempoTotal","incremento","topey","iniciox","finx","finy","delta","margin","bottom","left","right","top","strokeLinejoin","strokeDasharray","sizeRange","animation","allowOffsetToBeReversed","label","position","demanda","costoPrep","costoProd","valido","modelo1","ModeloWilson","modeloTransformado","stockProt","Modelo2","middlex","labelAnchorX","bottomy","modeloSconAgotamiento","ModeloAgotamientoSimple","plotearGraficoCostoPorLimite","bTransformado","qi","qTransformado","modelo5","StockTeoria","NoLinealProgrammingPage","Index","App","exact","KuhnyTucker","ModeloStock","ModeloTriangular","ModeloSimpleConAgotamiento","ModeloSimpleSinAgotamientoPorLote","ModeloStockTeoria","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0be24d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var jsgraphs = require('js-graph-algorithms');\n\n\n/*\nconst cantNodos = 5;\nconst aristas = [[0, 1, 0.5], [1, 2, 0.3], [2, 0, 0.4]];\narbolExpansionMinima(cantNodos, aristas);*/\n\nfunction arbolExpansionMinima(cantidadNodos, aristas) {\n  console.log('AQUIIIIIIIIIIIIII');\n  console.log(cantidadNodos, aristas);\n  const g = new jsgraphs.WeightedGraph(cantidadNodos);\n\n  aristas.forEach(arista => {\n    g.addEdge(new jsgraphs.Edge(arista[0], arista[1], arista[2]));\n  });\n\n  const kruskal = new jsgraphs.KruskalMST(g);\n  const mst = kruskal.mst;\n\n  /*\n  for (var i = 0; i < mst.length; ++i) {\n    const e = mst[i];\n    const v = e.either();\n    const w = e.other(v);\n    console.log('(' + v + ', ' + w + '): ' + e.weight);\n  }*/\n\n  return mst;\n}\n/*\n    var json = [];\n\n    var edges = [];\n    mst.forEach(arista => {\n        const nuevaArista = {\n            id: \"e0\",\n            source: \"n0\",\n            target: \"n1\"\n        }\n    });\n\n    {\n        \"nodes\": [\n          {\n            \"id\": \"n0\",\n            \"label\": \"A node\",\n            \"x\": 0,\n            \"y\": 0,\n            \"size\": 3\n          },\n          {\n            \"id\": \"n1\",\n            \"label\": \"Another node\",\n            \"x\": 3,\n            \"y\": 1,\n            \"size\": 2\n          },\n          {\n            \"id\": \"n2\",\n            \"label\": \"And a last one\",\n            \"x\": 1,\n            \"y\": 3,\n            \"size\": 1\n          }\n        ],\n        \"edges\": [\n          {\n            \"id\": \"e0\",\n            \"source\": \"n0\",\n            \"target\": \"n1\"\n          },\n          {\n            \"id\": \"e1\",\n            \"source\": \"n1\",\n            \"target\": \"n2\"\n          },\n          {\n            \"id\": \"e2\",\n            \"source\": \"n2\",\n            \"target\": \"n0\"\n          }\n        ]\n      }\n\n*/\n\n\n/*\nvar prim = new jsgraphs.LazyPrimMST(g);\nvar mst = prim.mst;\nfor(var i=0; i < mst.length; ++i) {\n   var e = mst[i];\n   var v = e.either();\n   var w = e.other(v);\n   console.log('(' + v + ', ' + w + '): ' + e.weight);\n}*/\n\n/*\nvar g = new jsgraphs.WeightedGraph(6);\ng.addEdge(new jsgraphs.Edge(0, 1, 1));\ng.addEdge(new jsgraphs.Edge(0, 2, 5));\ng.addEdge(new jsgraphs.Edge(0, 3, 7));\ng.addEdge(new jsgraphs.Edge(0, 4, 9));\ng.addEdge(new jsgraphs.Edge(1, 2, 6));\ng.addEdge(new jsgraphs.Edge(1, 3, 4));\ng.addEdge(new jsgraphs.Edge(1, 4, 3));\ng.addEdge(new jsgraphs.Edge(2, 3, 5));\ng.addEdge(new jsgraphs.Edge(2, 5, 10));\ng.addEdge(new jsgraphs.Edge(3, 4, 8));\ng.addEdge(new jsgraphs.Edge(3, 5, 3));\n\ng.node(0).label = '1';\ng.node(1).label = '2';\ng.node(2).label = '3';\ng.node(3).label = '4';\ng.node(4).label = '5';\ng.node(5).label = '6';\n*/\n\nmodule.exports = arbolExpansionMinima;\n","const jsgraphs = require('js-graph-algorithms');\n\n// const cantNodos = 2;\n//const aristas = [[0, 1, 4000], [0, 2, 5400], [0, 3, 9800], [1, 2, 4300], [1, 3, 6200], [1, 4, 8700], [2, 3, 4800], [2, 4, 7100], [3, 4, 4900]];\n// const aristas = [[0, 1, 1], [1, 0, 2]];\n// rutaMasCorta(cantNodos, aristas);\n\nfunction rutaMasCorta(cantidadNodos, aristas, nodoInicialDeCaminos) {\n\n    const g = new jsgraphs.WeightedDiGraph(cantidadNodos);\n\n    aristas.forEach(arista => {\n        g.addEdge(new jsgraphs.Edge(arista[0], arista[1], arista[2]));\n    });\n\n    let dijkstra;\n\n    if(!nodoInicialDeCaminos){\n        dijkstra = new jsgraphs.Dijkstra(g, 0);\n    } else {\n        dijkstra = new jsgraphs.Dijkstra(g, nodoInicialDeCaminos);\n    }\n\n    /*\n    for (var v = 1; v < g.V; ++v) {\n        if (dijkstra.hasPathTo(v)) {\n            const path = dijkstra.pathTo(v);\n            console.log('=====path from 0 to ' + v + ' start==========');\n            for (var i = 0; i < path.length; ++i) {\n                const e = path[i];\n                console.log(e.from() + ' => ' + e.to() + ': ' + e.weight);\n            }\n            console.log('=====path from 0 to ' + v + ' end==========');\n            console.log('=====distance: ' + dijkstra.distanceTo(v) + '=========');\n            console.log('');\n        }\n    }*/\n\n    return {g, dijkstra};\n}\n\n// const hola = rutaMasCorta(cantNodos, aristas, 1);\n\nmodule.exports = rutaMasCorta;","const { CalcularqoComun, CalcularN, CalcularToComun, CalcularCTEoComun, CostoTotalPreparacionComun, CostoTotalProductoComun } = require('./FuncionesComunes');\n\n/* \nModelo 1 - Modelo de Wilson\nDemanda deterministica y constante\nModelo simple sin Agotamiento\nd \t= demanda unitaria\nK \t= costo de preparacion, lanzamiento o emision de la odern de adquisicion o produccion\nC1 \t= costo de almacenamiento\nT \t= Tiempo total\nD \t= demanda total en un tiempo total T\nb \t= costo del producto, de adquisicion o produccion\nn \t= veces que se solicita un reaprovisionamiento\nto \t= tiempo optimo de realizar reaprovisionamiento\n*/\nfunction CostoTotalAlmacenamiento(q, T, C1) {\n    let ctalm = 0.5 * T * q * C1;\n    return ctalm;\n}\nfunction ModeloWilson(D,K,C1,T,b){\n\tlet qo = Math.ceil(CalcularqoComun(K,D,T,C1)); \n\tif (qo > D) {\n        qo = D;\n    }\n    const n = CalcularN(qo,D);\n    const To = CalcularToComun(K,T,D,C1);\n    const CTPre = CostoTotalPreparacionComun(D,qo,K);\n    const CTProd = CostoTotalProductoComun(b, D);\n    const CTAlm = CostoTotalAlmacenamiento(qo, T, C1);\n    const CTEo = CalcularCTEoComun(CTProd,T,D,K,C1);\n    const CTE = CTPre + CTProd + CTAlm;\n\t//Calculamos CTEo\n\t//CTEo = Costo total esperado optimo\n\treturn {qo, n, CTPre, CTProd, CTAlm, CTE, To, CTEo};\n}\n\nmodule.exports = ModeloWilson;","const { CalcularqoComun, CalcularN, CalcularToComun, CalcularCTEoComun, CostoTotalPreparacionComun, CostoTotalProductoComun } = require('./FuncionesComunes');\n\nfunction CostoTotalAlmacenamiento(q, T, C1) {\n    let ctalm = 0.5 * T * q * C1;\n    return ctalm;\n}\n\nfunction CostoAdquisicionSp(sp, b) {\n    let casp = sp * b;\n    return casp;\n}\n\nfunction CostoMantenimientoSp(sp, T, C1) {\n    let cmsp = sp * T * C1;\n    return cmsp;\n}\n\nfunction CalcularCTEo(ctprod, T, D, K, C1, casp, cmsp) {\n    let CTEo = CalcularCTEoComun(ctprod, T, D, K, C1) + casp + cmsp;\n    return CTEo;\n}\n\nfunction ModeloSimpleSinAgotamientoConStockDeProteccion(D, K, b, C1, T, sp) {\n    let qo = Math.ceil(CalcularqoComun(K, D, T, C1));\n    if (qo > D) {\n        qo = D;\n    }\n    const n = CalcularN(qo,D);\n    const ctprep = CostoTotalPreparacionComun(D, qo, K);\n    const ctprod = CostoTotalProductoComun(b, D);\n    const ctalm = CostoTotalAlmacenamiento(qo, T, C1);\n    const casp = CostoAdquisicionSp(sp, b);\n    const cmsp = CostoMantenimientoSp(sp, T, C1);\n    const cte = ctprep + ctprod + ctalm + casp + cmsp;\n    const To = CalcularToComun(K, T, D, C1);\n    const cteo = CalcularCTEo(ctprod, T, D, K, C1, casp, cmsp);\n\n    return {qo, n, ctprep, ctprod, ctalm, casp, cmsp, cte, To, cteo};\n}\n\nmodule.exports = ModeloSimpleSinAgotamientoConStockDeProteccion;","const math = require('mathjs');\nconst { CalcularN, CalcularToComun, CostoTotalPreparacionComun, CostoTotalProductoComun } = require('./FuncionesComunes');\n\nfunction CostoTotalAlmacenamiento(q, p, T, C1, d) {\n    let ctalm = 0.5 * T * q * C1 * (1 - d / p);\n    return ctalm;\n}\n\nfunction CalcularSm(Tp, p, d) {\n    let sm = Tp * (p - d);\n    return sm;\n}\n\nfunction Calcularqo(K, d, C1, p, D, T) {\n    let qo = math.sqrt((2 * K * D) / (C1 * T * (1 - d / p)));\n    return qo;\n}\n\nfunction CalcularTp(qo, p) {\n    let Tp = qo / p;\n    return Tp;\n}\n\nfunction ModeloTriangular(D, K, b, p, T, C1, d) {\n    const qo = Math.ceil(Calcularqo(K, d, C1, p, D, T));\n    const n = CalcularN(qo, D);\n    const ctprep = CostoTotalPreparacionComun(D, qo, K);\n    const ctprod = CostoTotalProductoComun(b, D);\n    const ctalm = CostoTotalAlmacenamiento(qo, p, T, C1, d);\n    const cte = ctprep + ctprod + ctalm;\n    const To = CalcularToComun(K, T, D, C1);\n    const Tp = CalcularTp(qo, p);\n    const sm = CalcularSm(Tp, p, d);\n    return { qo, n, ctprep, ctprod, ctalm, cte, To, Tp, sm };\n}\n\nmodule.exports = ModeloTriangular;","const math = require('mathjs');\nconst {CalcularqoComun, CalcularN, CalcularToComun, CalcularCTEoComun,CostoTotalPreparacionComun,CostoTotalProductoComun} = require('./FuncionesComunes');\n\nfunction CostoTotalAlmacenamiento(q,s,T,C1){\n    let ctalm = 0.5 * T/q * C1 * s * s;\n    return ctalm;\n}\n\nfunction CostoAgotamiento(T,q,s,C2){\n    let ca = 0.5 + T/q * C2 * (q - s) * (q - s);\n    return ca;\n}\n\nfunction CalcularSo(C1,C2,qo){\n    let so = qo * C2/(C1 + C2);\n    return so;\n}\n\nfunction Calcularqo(K,D,T,C1,C2){\n    let qo = CalcularqoComun(K,D,T,C1) * math.sqrt((C1 + C2)/C2);\n    return qo;\n}\n\nfunction CalcularTo(K,D,T,C1,C2){\n    let To = CalcularToComun(K,T,D,C1) * math.sqrt((C1 + C2)/C2);\n    return To;\n}\n\nfunction CalcularT1(q,s,To){\n    let T1 = (s*To)/q;\n    return T1;\n}\n\nfunction CalcularCTEo(ctprod,T,D,K,C1,C2){\n    let CTEo = CalcularCTEoComun(ctprod,T,D,K,C1) * math.sqrt(C2/(C1 + C2));\n    return CTEo;\n}\n\nfunction ModeloSimpleConAgotamiento(D,K,b,T,C1,C2){\n    const qo = Math.ceil(Calcularqo(K,D,T,C1,C2));\n    const so = CalcularSo(C1,C2,qo);\n    const n = CalcularN(qo,D);\n    const ctprep = CostoTotalPreparacionComun(D,qo,K);\n    const ctprod = CostoTotalProductoComun(b, D);\n    const ctalm = CostoTotalAlmacenamiento(qo,so,T,C1);\n    const ca = CostoAgotamiento(T,qo,so,C2);\n    const cte = ctprep + ctprod + ctalm + ca;\n    const To = CalcularTo(K,D,T,C1,C2);\n    const T1 = CalcularT1(qo,so,To);\n    const T2 = To-T1;\n    const cteo = CalcularCTEo(ctprod,T,D,K,C1,C2);\n    return {qo, n, ctprep, ctprod, ctalm, ca, cte, so, To, T1, T2, cteo};\n}\n\nmodule.exports = ModeloSimpleConAgotamiento;","const {CalcularN,CalcularToComun,CostoTotalPreparacionComun,CostoTotalProductoComun,CalcularqoComun } = require(\"./FuncionesComunes\");\nconst { mode } = require(\"mathjs\");\n\nfunction CostoTotalAlmacenamiento(q,T,C1){\n    let ctalm = 0.5 * T * q * C1;\n    return ctalm;\n}\n\nfunction CostoDineroInmovilizado(P,b){\n    let cdi = P * b;\n    return cdi;\n}\n\nfunction CalcularC1(cdi,Ci){\n    let C1 = cdi + Ci;\n    return C1;\n}\n\n\n//Esto se aplica cuando se trata de costo sobre el precio del producto.\n//Ej: es el 45% del precio del producto.\nfunction CalcularCi(b,PorcCostoProd){\n    let Ci = b * PorcCostoProd;\n    return Ci;\n}\n\nfunction ModeloSimpleSinAgotamientoPorLote(D,q,K,PorcCostoProd,T,P,bi,Cientrada){\n    let cdi, C1, Ci, qo;\n    let x = 0;\n    let limsup = Number.MAX_VALUE;\n    let flag = true;\n    let xoptimo;\n    while (flag && x < bi.length){\n        cdi = CostoDineroInmovilizado(P,bi[x]);\n        Ci = CalcularCi(bi[x],PorcCostoProd)+Cientrada;\n        C1 = CalcularC1(cdi,Ci);\n        qo = Math.ceil(CalcularqoComun(K,D,T,C1));\n        if (qo >= q[x] && qo < limsup){\n            flag = false;\n        }\n        limsup = q[x];\n        x++;\n    }\n    let ctprep, ctprod, ctalm, cte;\n    xoptimo = x-1;\n    let array = new Array();\n    let cprod = bi[xoptimo];\n    ctprep = CostoTotalPreparacionComun(D,qo,K);\n    ctprod = CostoTotalProductoComun(cprod, D);\n    ctalm = CostoTotalAlmacenamiento(qo,T,C1);\n    cte = ctprep + ctprod + ctalm;\n    let model = new Object();\n    model.cte = cte;\n    model.qo = qo;\n    model.bi = cprod;\n    model.liminf = q[xoptimo];\n    model.ctprep = ctprep;\n    model.ctprod = ctprod;\n    model.ctalm = ctalm;\n    array.push(model);\n    let modelmin = new Object();\n    modelmin = model;\n    if (xoptimo !== 0) {\n        for (x=xoptimo-1; x>=0; x--){\n            let liminf = q[x];\n            qo = liminf;\n            cdi = CostoDineroInmovilizado(P,bi[x]);\n            Ci = CalcularCi(bi[x],PorcCostoProd)+Cientrada;\n            C1 = CalcularC1(cdi,Ci);\n            cprod = bi[x];\n            ctprep = CostoTotalPreparacionComun(D,qo,K);\n            ctprod = CostoTotalProductoComun(cprod, D);\n            ctalm = CostoTotalAlmacenamiento(qo,T,C1);\n            cte = ctprep + ctprod + ctalm;\n            model.cte = cte;\n            model.qo = qo;\n            model.bi = bi[x];\n            model.liminf = liminf;\n            model.ctprep = ctprep;\n            model.ctprod = ctprod;\n            model.ctalm = ctalm;\n            array.push(model);\n        }\n        let ctemin =Number.MAX_VALUE;\n        for (let i=0; i<array.length; i++) {\n            if (array[i].cte < ctemin) {\n                modelmin = array[i];\n                ctemin = array[i].cte;\n            }\n        }\n    }\n    const n = CalcularN(qo,D);\n    const To = CalcularToComun(K,T,D,C1);\n    ctprep = modelmin.ctprep;\n    ctalm = modelmin.ctalm;\n    ctprod = modelmin.ctprod;\n    cte = modelmin.cte;\n    qo = modelmin.qo;\n    let liminf = modelmin.liminf;\n    cprod = modelmin.bi;\n    return {n,To,ctprep,ctprod,ctalm,cte,qo,liminf,cprod}\n    //q[x-1] = limite inferior que se tomo el qo\n    //bi[x-1] = el precio que tomo el qo\n}\n\nmodule.exports = ModeloSimpleSinAgotamientoPorLote;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Jumbotron, Container, Row, Col, ButtonGroup, UncontrolledTooltip } from \"reactstrap\";\n\nconst Inicio = () => {\n    useEffect(() => {\n        document.title = \"Inicio\"\n    }, []);\n    return (\n        <Container fluid className=\"App\">\n            <Row className=\"\">\n                <Col xs={12} md={6} className=\"mx-auto my-5\">\n                    <Jumbotron>\n                        <Row>\n                            <h2 className=\"mx-auto\">¡Bienvenido! Seleccione una opción.</h2>\n                        </Row>\n                        <Row className=\"mt-3 mx-auto\">\n                            <Col>\n                                <Link to={\"/LinealProgramming\"}>\n                                    <Button size='lg' outline color=\"success\">Programación Lineal </Button>\n                                </Link>\n                            </Col>\n                        </Row>\n\n                        <Row className=\"mt-3 mx-auto\">\n                            <Col>\n                                <Link to={\"/NoLinealProgramming\"}>\n                                    <Button size='lg' outline color=\"success\">Programación No Lineal </Button>\n                                </Link>\n                            </Col>\n                        </Row>\n\n                        <Row className=\"mt-3 mx-auto\">\n                            <Col>\n                                <Link to={\"/ModeloRedes\"}>\n                                    <Button size='lg' outline color=\"success\">Modelos de Redes </Button>\n                                </Link>\n                            </Col>\n                        </Row>\n\n                        <Row className=\"mt-3 mx-auto\">\n                            <Col>\n                                <Link to={\"/ModeloStock\"}>\n                                    <Button size='lg' outline color=\"success\">Modelos de Stock </Button>\n                                </Link>\n                            </Col>\n                        </Row>\n\n                        <Row className=\"mt-5\">\n                            <h5>Colaboradores: Programación Lineal</h5>\n                        </Row>\n                        <Row>\n                            <ButtonGroup className=\"mx-auto\">\n                                <UncontrolledTooltip target='btnce'>Cardozo, Edgar</UncontrolledTooltip>\n                                <Button id='btnce' outline tag=\"a\" href=\"https://github.com/EdgarCardozo\">\n                                    CE\n                            </Button>\n                                <UncontrolledTooltip target='btndj'>Diaz, Julian</UncontrolledTooltip>\n                                <Button id='btndj' outline tag=\"a\" href=\"https://github.com/juliandiazok\">\n                                    DJ\n                            </Button>\n                                <UncontrolledTooltip target='btnge'>Garcia, Emmanuel</UncontrolledTooltip>\n                                <Button id='btnge' outline tag=\"a\" href=\"https://github.com/egarcia1997\">\n                                    GE\n                            </Button>\n                                <UncontrolledTooltip target='btnss'>Solis, Santiago</UncontrolledTooltip>\n                                <Button id='btnss' outline tag=\"a\" href=\"https://github.com/santisolis97\">\n                                    SS\n                            </Button>\n                                <UncontrolledTooltip target='btnvi'>Vaernet, Ian</UncontrolledTooltip>\n                                <Button id='btnvi' outline tag=\"a\" href=\"https://github.com/ianv97\">\n                                    VI\n                            </Button>\n                                <UncontrolledTooltip target='btnzs'>Zaracho Simonetto, Carlos Santino</UncontrolledTooltip>\n                                <Button id='btnzs' outline tag=\"a\" href=\"https://github.com/santinozaracho\">\n                                    ZS\n                            </Button>\n                            </ButtonGroup>\n                        </Row>\n\n                        <Row className=\"mt-5\">\n                            <h5>Colaboradores: Modelos de Stock</h5>\n                        </Row>\n                        <Row>\n                            <ButtonGroup className=\"mx-auto\">\n                                <UncontrolledTooltip target='btnbj'>Bravin, Juan</UncontrolledTooltip>\n                                <Button id='btnbj' outline tag=\"a\" href=\"https://github.com/bravinjuan\">\n                                    BJ\n                            </Button>\n                                <UncontrolledTooltip target='btnjm'>Jaworski, Martin Ezequiel</UncontrolledTooltip>\n                                <Button id='btnjm' outline tag=\"a\" href=\"https://github.com/martinejaw\">\n                                    JM\n                            </Button>\n                                <UncontrolledTooltip target='btntj'>Teng, Jazmin</UncontrolledTooltip>\n                                <Button id='btntj' outline tag=\"a\" href=\"https://github.com/jazminteng\">\n                                    TJ\n                            </Button>\n                                <UncontrolledTooltip target='btnth'>Thouzeau, Edgardo Hernan</UncontrolledTooltip>\n                                <Button id='btnth' outline tag=\"a\" href=\"https://github.com/thouzeauhernan\">\n                                    TH\n                            </Button>\n                            </ButtonGroup>\n                        </Row>\n\n                        <Row className=\"mt-3\">\n                            <Col>\n                                <Button href=\"https://github.com/santinozaracho/optimizer-pl-io/issues\"\n                                    outline>\n                                    <img height='25px' src=\"https://img.icons8.com/ios-filled/50/000000/github.png\" alt=\"\" />\n                                Report Issues\n                            </Button>\n                            </Col>\n                            <Col>\n                                <Button href=\"mailto:carlosszaracho@gmail.com\" outline>Contact Us</Button>\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    )\n};\n\nexport default Inicio;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Jumbotron, Container, Row, Col } from \"reactstrap\";\n\nconst LinealProgramming = () => {\n    useEffect(() => {\n        document.title = \"Optimizer PL IO\"\n    }, []);\n    return (\n        <Container fluid className=\"App\">\n            <Row className=\"\">\n                <Col xs={12} md={6} className=\"mx-auto my-5\">\n                    <Jumbotron>\n                        <Row>\n                            <h2 className=\"mx-auto\">¡Bien!, Ahora Seleccione una Modalidad de Trabajo.</h2>\n                        </Row>\n                        <Row className=\"mt-3 mx-auto\">\n                            <Col>\n                                <Link to={\"/LinealProgramming/InSteps\"}>\n                                    <Button size='lg' outline color=\"success\">Guiado por Pasos</Button>\n                                </Link>\n\n                            </Col>\n                        </Row>\n                        <Row className=\"mt-3 mx-auto\">\n                            <Col>\n                                <Link to={\"/LinealProgramming/SinglePage\"} >\n                                    <Button size='lg' outline color=\"success\">En Unica Pagina</Button>\n\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    )\n};\n\nexport default LinealProgramming;","import app  from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyABNWz15l41jDB9CgrceCS-E7tJvI4qETQ\",\n    authDomain: \"optimizer-pl-io.firebaseapp.com\",\n    databaseURL: \"https://optimizer-pl-io.firebaseio.com\",\n    projectId: \"optimizer-pl-io\",\n    storageBucket: \"optimizer-pl-io.appspot.com\",\n    messagingSenderId: \"9328532745\",\n    appId: \"1:9328532745:web:a0869d1580b25836\"\n  };\n\n  // Initialize Firebase\n  export default class FirebaseOptimizer {\n    constructor() {\n      if (!app.apps.length ) {app.initializeApp(firebaseConfig)}\n      console.log('Initializando')\n      this.auth = app.auth();\n      this.logged = false;\n      this.user = {};\n      this.dbUsers = app.firestore().collection('users'); \n      this.auth.onAuthStateChanged( user => { if (user) {this.user=user; this.logged = true}else{this.user={}; this.logged=false}})\n      this.googleProvider = new app.auth.GoogleAuthProvider();\n    }\n\n    \n  \n    // *** Auth API ***\n  \n    // doCreateUserWithEmailAndPassword = (email, password) =>\n    //   this.auth.createUserWithEmailAndPassword(email, password);\n  \n    // doSignInWithEmailAndPassword = (email, password) =>\n    //   this.auth.signInWithEmailAndPassword(email, password);\n    \n    pushTest = () => this.dbUsers.doc('test').set({'setTest':'Es un Test' }).then(ok=>ok).catch(err=>err)\n\n    getUserName = () => this.user.displayName;\n\n    getModelsReference = () => this.dbUsers.doc(this.user.uid).collection('models');\n\n    deleteModel = modelId => this.dbUsers.doc(this.user.uid).collection('models').doc(modelId).delete().then(ok=>ok).catch(err=>err)\n    \n    doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider)\n  \n    doSignOut = () => this.auth.signOut()\n\n  \n  }\n","import React from \"react\";\nimport FirebaseOptimizer from './Firebase';\nimport { Input, Button, Row, Col, Modal, ModalBody, ModalHeader, ModalFooter, Table, Spinner } from \"reactstrap\";\n  \n\nexport default class ModalModels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.firebase = new FirebaseOptimizer();\n    this.state = { loading:false,logged:false, user:'', descModel:'',saveMenu:false , models:[]};\n  }\n\n  componentDidMount() {\n    this.setState({loadig:true})\n    this.authSubscription = this.firebase.auth.onAuthStateChanged( user => {\n      if( user ){\n        console.log('Logged');\n        this.setState({ logged: true, user:user.displayName });\n        this.dbSubscribe = this.firebase.getModelsReference().onSnapshot(snapshot => {\n          let models = [];\n    \n          snapshot.forEach(doc =>\n            models.push({ model:doc.data().model, description: doc.id }),\n          );\n          console.log(models);\n          this.setState({\n            models,\n            loading: false,\n          });\n        });\n        \n      }else{\n        this.dbSubscribe && this.dbSubscribe();\n        console.log('No Logged');\n        this.setState({ logged: false, user:'', models:[] });\n      }\n      \n    });\n      \n    \n   \n  }\n\n  componentWillUnmount() {\n    this.authSubscription();\n    this.dbSubscribe && this.dbSubscribe();\n    this.setState({ logged:false, user:'', models:[] });\n  }\n\n  saveNewModel = () => {\n    let { descModel } = this.state;\n    if (descModel) {\n      this.firebase.getModelsReference().doc(descModel).set({'model':this.props.model})\n      .then(ok => this.setState({ descModel:'', saveMenu:false}))\n      .catch(err=> console.log(err));\n    }\n  }\n\n  signIn = () => this.firebase.doSignInWithGoogle().then( user => console.log('Signin'))\n\n  logOut = () => this.firebase.doSignOut().then( info => console.log('SignOut'))\n\n  toggle = () => this.props.handleClose()\n\n  loadModel = model => { this.props.setModel(model); this.toggle(); }\n\n  deleteModel = id => this.firebase.deleteModel(id)\n \n  openSaveModel = () => this.setState({saveMenu:!this.state.saveMenu})\n\n  handleDesc = (e) => this.setState({descModel:e.target.value})\n\n  loadExampleModel = () => {\n    let variables = [\n      { xi: 0, descripcion: \"Pantalones (u/día)\", coeficiente: 3 },\n      { xi: 1, descripcion: \"Camisas (u/día)\", coeficiente: 1 }\n    ];\n    let restricciones = [\n      { ri: 0, descripcion: \"Mano de obra (hs/día)\", coeficientes: [1, 1], eq: \"<=\", derecha: 8 },\n      { ri: 1, descripcion: \"Minimo de Produccion (u/día)\", coeficientes: [1, 6], eq: \">=\", derecha: 14 }\n    ];\n    let model = {\n      variables,\n      restricciones, \n      integer: false, \n      method: \"graph\", \n      objective: \"max\"\n    }\n    this.loadModel(model)\n  };\n  \n\n  render() {\n    let { logged ,user, descModel, saveMenu, models} = this.state;\n    \n    let openSaveModelMenu =  \n      <Col>\n        <Row><Input required valid={descModel.length!==0} onChange={this.handleDesc} value={descModel} placeholder='Descripcion del Modelo'/></Row>\n        <Row className='mt-2'><Col sm={8} className='text-center'><Button color=\"success\" outline onClick={this.saveNewModel}>Guardar Modelo Actual</Button></Col>\n      <Col sm={4} className='text-center'><Button color=\"danger\" outline onClick={this.openSaveModel}>Cancelar</Button></Col></Row></Col>\n    \n    let closeSaveModelMenu =\n      <Col>\n        <Row>\n          <Col sm={6} className='text-center'><Button color=\"success\" outline onClick={this.openSaveModel}>Nuevo Modelo</Button></Col>\n          <Col sm={6} className='text-center'><Button color=\"primary\" outline onClick={this.logOut}>Cerrar Session</Button></Col>\n        </Row>\n      </Col>    \n    \n    let loadExample = <Col sm={12} className='text-center'><Button color=\"warning\" outline onClick={this.loadExampleModel}>Cargar Modelo de Ejemplo</Button></Col>\n    \n    let loginButton = <Col sm={12} className='text-center'><Button color=\"primary\" outline onClick={this.signIn}>Iniciar Session Con Google</Button></Col>\n  \n    let tableModels = \n      <Col sm={12}>\n        <Table responsive striped>\n          <thead><tr><th>Descripcion</th><th></th><th></th></tr></thead>\n          <tbody>{models.map( model => <tr key={'M-M-'+model.description}><td>{model.description}</td><td className='btnSize'><Button size='sm' onClick={e => this.loadModel(model.model)}color='success'>Cargar</Button></td><td className='btnSize'><Button size='sm' onClick={e => this.deleteModel(model.description)} color='danger'>Eliminar</Button></td></tr>)}</tbody>\n        </Table>\n      </Col>\n\n    let saveModel = saveMenu ? openSaveModelMenu : closeSaveModelMenu;\n\n    let modelTableWSpinner = models.length ? tableModels : <Col className='text-center' sm={12}><Spinner type='grow' color='black'/></Col>\n    \n    let modalBody = logged ? modelTableWSpinner : loadExample \n    \n    let modalFooter = logged ? saveModel : loginButton\n    \n    return (\n      <div>\n        <Modal isOpen={this.props.open} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Modelos {logged && ' de '+user}</ModalHeader>\n          <ModalBody><Row className='mx-auto w-100'>{ modalBody }</Row></ModalBody>\n          <ModalFooter><Row className='mx-auto w-100'>{ modalFooter }</Row></ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport {InputGroupText,InputGroup, Input,InputGroupAddon,UncontrolledPopover,PopoverBody} from 'reactstrap';\n\nconst Restriction = props => {\n    let {ri,descripcion} = props.restriccion\n    \n    const handleChange = e => props.handleChange(ri,e.target.value)\n    return(\n        <InputGroup className=\"mt-1\" id={\"TTR\" + ri} key={\"RTD\" + ri}>\n\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText name=\"ri\" id=\"restriccion\">{\"R\" + ri}</InputGroupText>\n        </InputGroupAddon>\n\n        <Input\n          name={ri}\n          placeholder=\"Descripcion de la Restriccion\"\n          aria-label=\"Descripcion\"\n          aria-describedby=\"restriccion\"\n          onChange={handleChange}\n          value={descripcion}/>\n\n        <UncontrolledPopover flip={false} trigger=\"focus hover\" placement=\"auto\" target={\"TTR\" + ri}>\n          <PopoverBody>Aquí debes ingresar qué representa la restricción en el modelo.</PopoverBody>\n        </UncontrolledPopover>\n\n      </InputGroup>)\n    \n}\n\nexport default Restriction;","import React from 'react';\nimport Restriction from './Restriction';\n\nconst Restrictions = props => {\n    \n    let {restricciones} = props;\n    \n    const deleteRes = ri => {\n        restricciones.splice(ri, 1)\n        restricciones.forEach( (restri,index) => restri.ri = index )\n    }\n    //Función que se encarga de manejar las modificaciones de restricciones.\n    const handleChangeRes = (ri,desc) => {\n        //Si el cambio es dejarla vacia entonces eliminamos la restriccion Sino, Almacenamos el valor\n        if (desc === '') { deleteRes(ri) }else{ restricciones[ri].descripcion = desc }\n        //pedimos al padre que almacene los cambios\n        props.handleRestrictions(restricciones);\n        //Llamamos a generar si corresponde nueva restriccion\n        handleNewRes();\n    };\n    //Función que se encarga de Añadir una restriccion si es necesario.\n    const handleNewRes = () => {\n        //Agregamos Tope de Restricciones\n        if(restricciones.length < 30 ){\n        //Contador de Rescciones sin descripciones.\n        let counterWitheRes = restricciones.filter(element => element.descripcion.length === 0).length;\n        //Si el contador de restricciones vacias es igual a 0 entonces agregamos una restriccion mas.\n            if (counterWitheRes === 0) {\n            restricciones.push({\n                ri: restricciones.length,\n                descripcion: \"\",\n                coeficientes: [],\n                eq: \">=\",\n                derecha: \"\"\n            });\n            props.handleRestrictions(restricciones);\n            }\n        }\n        };\n    handleNewRes();\n    return restricciones.map( restri => <Restriction key={'RES-'+restri.ri} handleChange={handleChangeRes} restriccion={restri}/>)\n}\n\nexport default Restrictions;","import React from 'react';\nimport {InputGroupText,InputGroup, Input,InputGroupAddon,UncontrolledPopover,PopoverBody} from 'reactstrap';\n\nconst Variable = props => {\n    let {xi,descripcion} = props.variable\n    const handleChange = e => props.handleChanges(xi,e.target.value) \n    return(\n        <InputGroup className=\"mt-1\" id={\"XTT\" + xi} key={\"VTD\" + xi}>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText name=\"xi\" id=\"variable\">\n            {\"X\" + xi}\n          </InputGroupText>\n        </InputGroupAddon>\n        <Input\n          name={xi}\n          placeholder=\"Descripcion de la Variable\"\n          aria-label=\"Descripcion\"\n          aria-describedby=\"variable\"\n          onChange={handleChange}\n          value={descripcion}\n        />\n        <UncontrolledPopover flip={false} trigger=\"focus hover\" placement=\"auto\" target={\"XTT\" + xi}>\n          <PopoverBody>Aquí debes ingresar qué representa la variable en el modelo.</PopoverBody>\n        </UncontrolledPopover>\n      </InputGroup>)\n    \n}\n\nexport default Variable;","import React from 'react';\nimport Variable from './Variable';\n\nconst Variables = props => {\n    let { variables,method } = props\n        //Función que se encarga de manejar las modificaciones en las variables.\n        const deleteVar = xi => {\n            if (variables.length > 2){\n                variables.splice(xi, 1)\n                variables.forEach( (vari,index) => vari.xi = index )\n            }else{\n                variables[xi].descripcion = ''\n            }\n        }\n        //Función que se encarga de manejar las modificaciones de restricciones.\n        const handleChangesVar = (xi,desc) => {\n            //Si el cambio es dejarla vacia entonces eliminamos la restriccion Sino, Almacenamos el valor\n            if (desc === '') { deleteVar(xi) }else{ variables[xi].descripcion = desc }\n            //pedimos al padre que almacene los cambios\n            props.handleVariables(variables);\n        };\n        //Función que se encarga de Añadir una Variable si es necesario.\n    const handleNewsVar = () => {\n        if (method === \"simplex\") {\n            if( variables.length < 20 ){\n                //Si el metodo es Simplex, se permite agregar más de dos variables.\n                let counterWitheVar = variables.filter(element => element.descripcion.length === 0).length;\n                //Si la cantidad de Variables Libres es igual a 0 se agrega una más.\n                if (counterWitheVar === 0) {\n                variables.push({ xi: variables.length, descripcion: \"\", coeficiente: \"\" });\n                props.handleVariables(variables);\n                }\n            }\n        } else {\n        //Si no lo es, aseguramos que existan solo dos, entonces eliminamos lo que está de más.\n            if (variables.length > 2) {\n                variables.splice(2);\n                props.handleVariables(variables);\n            }\n        }\n    };\n    handleNewsVar();\n    return variables.map( variable => <Variable key={'VAR-'+variable.xi} handleChanges={handleChangesVar} variable={variable}/> )\n}\n\nexport default Variables;","import React from \"react\";\nimport { ButtonGroup, Button, Container, Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\nimport { Alert, UncontrolledPopover, PopoverBody, PopoverHeader } from \"reactstrap\";\nimport Restrictions from \"./Restrictions\";\nimport Variables from \"./Variables\";\n\nclass Configuration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { faltaDescrip: \"\" };\n  }\n\n  //Función que permite validar si se ingresaron todos los cambios correspondientes en la etapa\n  isValidated() {\n    let { variables, restricciones } = this.props.status;\n    let variablesDescriptionsMin = variables.filter(va => va.descripcion !== \"\");\n    let restriccionesDescriptionsMin = restricciones.filter(re => re.descripcion !== \"\");\n    if ((variablesDescriptionsMin.length > 1) & (restriccionesDescriptionsMin.length > 0)) {\n      this.props.lastStep(1);\n      this.setState({ faltaDescrip: \"\" });\n      return true;\n    } else if (variablesDescriptionsMin.length < 2) {\n      this.setState({ faltaDescrip: \"Se necesitan como mínimo dos variables\" });\n    } else if (restriccionesDescriptionsMin.length < 1) {\n      this.setState({ faltaDescrip: \"Se necesita como mínimo una restricción\" });\n    }\n    return false;\n  }\n  \n  //Funcion que se encarga de traspasar los cambios al padre\n  handleRestrictions = restricciones => this.props.handleRestricciones(restricciones)\n  \n  //Funcion que se encarga de traspasar los cambios al padre\n  handleVariables = variables => this.props.handleVariables(variables)\n  \n  //Modelos\n  showModels = () => this.props.showModels()\n\n  render() {\n    //Obtenemos de las props, las varaibles y restricciones.\n    let {variables,restricciones,method } = this.props.status;\n\n    let buttonsMethods = (\n      <ButtonGroup id=\"ButtUtil\">\n        <Button\n          outline\n          onClick={ () => this.props.handleMethod(\"graph\")}\n          active={this.props.status.method === \"graph\"}\n          color=\"primary\">\n          Gráfico\n        </Button>\n        <Button\n          outline\n          onClick={ () => this.props.handleMethod(\"simplex\")}\n          active={this.props.status.method === \"simplex\"}\n          color=\"primary\">\n          Simplex\n        </Button>\n      </ButtonGroup>\n    );\n    let buttonsOptType = (\n      <ButtonGroup>\n        <Button\n          outline\n          onClick={() => this.props.handleObjective(\"max\")}\n          active={this.props.status.objective === \"max\"}\n          color=\"primary\"\n        >\n          Maximizar\n        </Button>\n        <Button\n          outline\n          onClick={() => this.props.handleObjective(\"min\")}\n          active={this.props.status.objective === \"min\"}\n          color=\"primary\"\n        >\n          Minimizar\n        </Button>\n      </ButtonGroup>\n    );\n\n    return (\n      <>\n        <h3>Comenzamos configurando nuestro modelo</h3>\n        <Container>\n          <Row>\n            <Col>\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardInteger\">\n                <PopoverBody>Esta función activa o desactiva la Programacion Lineal Entera.</PopoverBody>\n              </UncontrolledPopover>\n              <Card outline color=\"secondary\" id=\"CardInteger\" className=\"mt-2 mx-auto\">\n                <CardHeader>Programación entera</CardHeader>\n                <CardBody>\n                  <Button\n                    outline\n                    color={this.props.status.integer ? \"success\" : \"danger\"}\n                    onClick={() => this.props.toggleInteger()}\n                  >\n                    {this.props.status.integer ? \"Activa\" : \"Inactiva\"}\n                  </Button>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col>\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardModel\">\n                <PopoverBody>\n                  En esta seccion usted podra almacenar en la base de datos los modelos deseados, realizando el registro con su cuenta de Google.\n                </PopoverBody>\n              </UncontrolledPopover>\n              <Card outline color=\"secondary\" id=\"CardModel\" className=\"mt-2 mx-auto\">\n                <CardHeader>Gestion de Modelos</CardHeader>\n                <CardBody>\n                  <Button color=\"warning\" outline onClick={this.showModels}>\n                    Modelos\n                  </Button>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardUtil\">\n                <PopoverBody>\n                  Aquí debes seleccionar el método de cálculo y visualización de los resultados.\n                </PopoverBody>\n              </UncontrolledPopover>\n              <Card outline color=\"secondary\" id=\"CardUtil\" className=\"mt-3 mx-auto\">\n                <CardHeader>Método a utilizar</CardHeader>\n                <CardBody>{buttonsMethods}</CardBody>\n              </Card>\n            </Col>\n\n            <Col>\n              <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardOpt\">\n                <PopoverBody>\n                  Y aquí el tipo de optimizacion que deseas realizar: si deseas maximizar o minimizar la\n                  función.\n                </PopoverBody>\n              </UncontrolledPopover>\n              <Card outline color=\"secondary\" id=\"CardOpt\" className=\"mt-3 mx-auto\">\n                <CardHeader>Tipo de optimización</CardHeader>\n                <CardBody>{buttonsOptType}</CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardVariables\">\n              <PopoverHeader>Variables</PopoverHeader>\n              <PopoverBody>\n                Aquí debes ingresar las variables que formarán parte del modelo, las mismas son de carga\n                dinámica.\n              </PopoverBody>\n            </UncontrolledPopover>\n            <Card outline color=\"secondary\" id=\"CardVariables\" className=\"w-100 mt-3 mx-auto\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Variables</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody><Variables method={method} handleVariables={this.handleVariables} variables={variables}/></CardBody>\n            </Card>\n          </Row>\n          <Row>\n            <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardRestri\">\n              <PopoverHeader>Restricciones</PopoverHeader>\n              <PopoverBody>\n                Aquí debes ingresar las restricciones que formarán parte del modelo, éstas también son de\n                carga dinámica.\n              </PopoverBody>\n            </UncontrolledPopover>\n            <Card outline color=\"secondary\" id=\"CardRestri\" className=\"w-100 mt-3 mx-auto\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Restricciones</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody><Restrictions handleRestrictions={this.handleRestrictions} restricciones={restricciones}/></CardBody>\n            </Card>\n          </Row>\n          {this.state.faltaDescrip !== \"\" && (\n            <Row className=\"mt-3\">\n              <Alert className=\"mx-auto\" color=\"danger\">\n                {this.state.faltaDescrip}\n              </Alert>\n            </Row>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Configuration;\n","import React from 'react';\nimport {Button,InputGroupText,Card,CardBody,CardHeader,CardTitle ,InputGroup, Input,InputGroupAddon, ButtonGroup,UncontrolledTooltip} from 'reactstrap';\n\nconst Restriccion = props => {\n    let {coeficientes} = props.restriccion;\n    //Verificamos la cantidad de coeficientes dependiendo de la cantidad de variables.\n    if (coeficientes.length !== props.cantVariables) {\n        //Diferencia de entre las variables y los coeficientes de las restricciones. \n        let diferencia = props.cantVariables - coeficientes.length;\n        if ( diferencia > 0 ) {\n            for (let index = 0; index < diferencia; index++) {\n                coeficientes.push('')       \n            }\n        }else {\n            coeficientes.splice(props.cantVariables)\n        }\n    }\n\n    let thisEq = props.restriccion.eq;\n    let botoneraMaxMin = (<ButtonGroup className='mx-1' key={'Eq'+props.restriccion.ri}>\n                                    <Button key={'B<s'+props.restriccion.ri} name='eq' \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='<='}} \n                                        color={thisEq === '<=' ? \"primary\":\"secondary\" } \n                                        value='<='>{'<='}</Button>\n                                    <Button key={'B='+props.restriccion.ri} name='eq' \n                                        disabled \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='='}} \n                                        color={thisEq === '=' ? \"primary\":\"secondary\"} \n                                        value='='>{'='}</Button>\n                                    <Button key={'B>'+props.restriccion.ri} name='eq' \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='>='}} \n                                        color={thisEq === '>=' ? \"primary\":\"secondary\"} \n                                        value='>='>{'>='}</Button>\n                                </ButtonGroup>);\n    let inputsRestriccions = coeficientes\n    .map((coeficiente,indx) => \n        <React.Fragment key={'divCi'+indx}>\n            <Input key={'Ci'+props.restriccion.ri+'r'+indx}\n                type=\"number\"\n                name={indx}\n                placeholder=\"Coefiente\"\n                className=\"InputCoeficiente\"\n                onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\n                value={coeficiente}\n                />\n            <InputGroupAddon key={'IADD'+props.restriccion.ri+'r'+indx} addonType='append'>\n                <InputGroupText key={'r'+props.restriccion.ri+'r'+indx}>{'X'+indx}</InputGroupText>\n            </InputGroupAddon>\n            {indx < coeficientes.length-1 && <InputGroupText key={'+'+props.restriccion.ri+'r'+indx}>+</InputGroupText>}\n        </React.Fragment>\n            \n    )\n\n    return(\n        <Card key={'CR'+props.restriccion.ri} id={'CR'+props.restriccion.ri}>\n            <UncontrolledTooltip flip={false} key={'TTCR'+props.restriccion.ri} placement='auto' target={'CR'+props.restriccion.ri}>\n            {'Aqui debes ingresar los coeficiente de '+props.restriccion.descripcion}\n            </UncontrolledTooltip>\n            <CardHeader className=\"p-0 m-0\"><CardTitle>{'R'+props.restriccion.ri+':'+props.restriccion.descripcion}</CardTitle></CardHeader>\n            <CardBody className=\"p-0 my-1 mx-auto\">\n                <InputGroup key={'RT'+props.restriccion.ri}>\n                    {inputsRestriccions}\n                    {botoneraMaxMin}\n                    <Input key={'C'+props.restriccion.ri+'r'+coeficientes.length}\n                            type=\"number\"\n                            name={'derecha'}\n                            placeholder=\"Coe\"\n                            className=\"InputCoeficiente\"\n                            aria-label=\"Coe\"\n                            aria-describedby=\"restriccion\"\n                            onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\n                            value={props.restriccion.derecha}/>\n                </InputGroup>\n            </CardBody>\n        </Card>)\n    \n}\n\nexport default Restriccion;","import React from 'react';\nimport {InputGroup, InputGroupAddon, InputGroupText, Input, UncontrolledTooltip } from 'reactstrap'\n\n\nconst FuncionObj = props => {\n    let {variables} = props\n    let variablesToFunction = variables\n    .filter(vari => vari.descripcion !== '')\n    .map( (vari,index) => \n        <React.Fragment key={'divIF'+index}>\n            <UncontrolledTooltip flip={false} key={'TTV'+index} placement='auto' target={'IF'+index}>\n            {'Aqui debes ingresar el coeficiente de '+vari.descripcion}\n            </UncontrolledTooltip>\n            <Input key={'IF'+index}\n                    id={'IF'+index}\n                        type='number'\n                        name={vari.xi}\n                        placeholder=\"Coef\"\n                        className=\"InputCoeficiente\"\n                        aria-label=\"Coeficiente\"\n                        aria-describedby=\"coe\"\n                        onChange={ e => props.handleCoefVar(e)}\n                        value={vari.coeficiente}\n                        />\n            <InputGroupAddon key={'ADDIF'+index} addonType=\"append\">\n                <InputGroupText key={'IFD'+index}>{\"X\"+vari.xi}</InputGroupText>\n            </InputGroupAddon>\n            {index < variables.filter(vari => vari.descripcion !== '').length-1 && <InputGroupText key={'+IF'+index}>+</InputGroupText>}\n        </React.Fragment>) \n\n    return(\n            <InputGroup key={'INPUTFUNCIONAL'}>\n                {variablesToFunction}\n                <InputGroupText className='mx-1' key='IFOPT'>{' => '+props.objective.toUpperCase()}</InputGroupText>\n            </InputGroup>\n    \n    ) \n}\n\nexport default FuncionObj;","import React from \"react\";\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Button,\n  Col,\n  Collapse,\n  ListGroup,\n  ListGroupItem,\n  Badge\n} from \"reactstrap\";\n\nclass ReferencesList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { references: false };\n  }\n\n  listDescriptionsVarItems = array =>\n    array\n      .filter(item => item.descripcion !== \"\")\n      .map(item => (\n        <ListGroupItem key={\"DLGIV\" + item.xi} className=\"text-left\">\n          <Badge>{\"X\" + item.xi}</Badge>\n          {\" \" + item.descripcion}\n          <Badge className='float-right'>{'C: '+item.coeficiente}</Badge>\n        </ListGroupItem>\n      ));\n\n  listDescriptionsResItems = array =>\n    array\n      .filter(item => item.descripcion !== \"\")\n      .map(item => (\n        <ListGroupItem key={\"DLGIR\" + item.ri} className=\"text-left\">\n          <Badge>{\"R\" + item.ri}</Badge>\n          {\" \" + item.descripcion}\n          <Badge className='float-right'>{item.coeficientes.map((co,indx) => co+' X'+indx+' ') + ' '+item.eq+' '+item.derecha}</Badge>\n        </ListGroupItem>\n      ));\n\n  render() {\n    //Obtenemos las propiedades del Super\n    let { variables } = this.props;\n    let { restricciones } = this.props;\n\n    return (\n      <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n        <CardHeader>\n          <Row>\n            <Col className=\"text-left\">\n              <CardTitle>\n                <h4>Referencias</h4>\n              </CardTitle>\n            </Col>\n            <Col>\n              <Button\n                outline\n                size=\"sm\"\n                onClick={() => this.setState({ references: !this.state.references })}\n                color={!this.state.references ? \"success\" : \"danger\"}\n              >\n                {!this.state.references ? \"Ver referencias\" : \"Ocultar referencias\"}\n              </Button>\n            </Col>\n          </Row>\n        </CardHeader>\n        <Collapse isOpen={this.state.references}>\n          <CardBody>\n            <h5 className=\"text-center\">Variables:</h5>\n            <ListGroup>{this.listDescriptionsVarItems(variables)}</ListGroup>\n            <h5 className=\"text-center mt-5\">Restricciones:</h5>\n            <ListGroup>{this.listDescriptionsResItems(restricciones)}</ListGroup>\n          </CardBody>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nexport default ReferencesList;\n","import React from \"react\";\nimport { Container, Row, Card, CardBody, CardHeader, CardTitle, Alert } from \"reactstrap\";\nimport Restriccion from \"./Restriccion\";\nimport FuncionObj from \"./FuncionObj\";\nimport ReferencesList from \"../ReferencesList\";\n\nclass Processing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { faltaCoe: \"\" };\n  }\n\n  isValidated() {\n    //Verificando si los coeficientes de las variables y las restricciones no son nulos\n    let verifQty = this.props.status.variables\n      .filter(va => va.descripcion !== \"\")\n      .every(va => va.coeficiente !== \"\");\n    let veriResQty = this.props.status.restricciones\n      .filter(re => re.descripcion !== \"\")\n      .every(re => re.coeficientes.every(co => co !== \"\") && re.derecha !== \"\");\n    if (verifQty && veriResQty) {\n      console.log(verifQty+'dff:'+veriResQty);\n      \n      this.props.lastStep(2);\n      this.setState({ faltaCoe: \"\" });\n      return true;\n    } else {\n      let faltaCoe;\n      faltaCoe = veriResQty\n        ? \"Falta algun coeficiente del Funcional\"\n        : \"Falta algun coeficiente en las Restricciones\";\n      this.setState({ faltaCoe });\n      return false;\n    }\n  }\n\n  //En el siguiente handler, se toma del input de una variable en particular el coeficiente.\n  handleCoefVar = event => {\n    let { value, name } = event.target;\n    if (value) {\n      let { variables } = this.props.status;\n      variables[name].coeficiente = parseInt(value);\n      this.props.handleVariables(variables);\n      console.log(this.props.status.variables);\n    }\n  };\n\n  handleCoefRes = (event, ri) => {\n    let { name, value } = event.target;\n    let { restricciones } = this.props.status;\n    console.log(\"En la Res:\" + ri + \", en el campo:\" + name + \",con el valor:\" + value);\n\n    switch (name) {\n      case \"derecha\":\n        restricciones[ri].derecha = Number(value);\n        break;\n      case \"eq\":\n        restricciones[ri].eq = value;\n        break;\n      default:\n        restricciones[ri].coeficientes[name] = Number(value);\n        break;\n    }\n    console.log(restricciones);\n    this.props.handleRestricciones(restricciones);\n  };\n\n  render() {\n    //Obtenemos las propiedades del Super\n    let { variables } = this.props.status;\n    let { restricciones } = this.props.status;\n    let varsOperativas = variables.filter(va => va.descripcion !== \"\").length;\n\n    //Generamos el renderizado para cada una de los elementos de los arreglos obtenidos anteriormente.\n\n    let restriccionesInput = restricciones\n      .filter(item => item.descripcion !== \"\")\n      .map((restriccion, index) => (\n        <Restriccion\n          className=\"mt-1\"\n          key={\"R\" + index}\n          handleCoefRes={this.handleCoefRes}\n          cantVariables={varsOperativas}\n          restriccion={restriccion}\n        />\n      ));\n\n    return (\n      <>\n        <h3>Cargamos los datos de nuestro modelo</h3>\n        <Container>\n          <Row>\n            <ReferencesList variables={variables} restricciones={restricciones} />\n          </Row>\n          <Row>\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Función objetivo</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody className=\"mx-auto\">\n                <FuncionObj\n                  variables={variables}\n                  handleCoefVar={this.handleCoefVar}\n                  objective={this.props.status.objective}\n                />\n              </CardBody>\n            </Card>\n          </Row>\n          <Row>\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Restricciones</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody>{restriccionesInput}</CardBody>\n            </Card>\n          </Row>\n          {this.state.faltaCoe !== \"\" && (\n            <Row className=\"mt-3\">\n              <Alert className=\"mx-auto\" color=\"danger\">\n                {this.state.faltaCoe}\n              </Alert>\n            </Row>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Processing;\n","import React from 'react';\nimport {Card,CardTitle,CardBody,CardText,CardHeader,Table,CardFooter,Row,Col,Button,Collapse} from 'reactstrap';\nimport ReferencesList from '../ReferencesList'\n\nclass SimplexPresentation extends React.Component{\n    constructor (props){\n        super(props)\n        this.state={details:false}\n    }\n\n    //Funcion que en base al uso de una variable, devuelve una tabla con los recursos utilizados\n    tablaDeRecursosFoot = (cantUsoVar,variableId) => {\n        let {restricciones} = this.props;\n        let tableBody = restricciones.filter(item => item.descripcion!== '')\n        //Realizamos calculos\n        .map( restri => \n            <tr key={'TdeV'+variableId+'R'+restri.ri}><td>{'R'+restri.ri}</td><td>{cantUsoVar*restri.coeficientes[variableId]}</td>\n            <td>{restri.derecha-(cantUsoVar*restri.coeficientes[variableId])}</td></tr>)\n        return(<Table size='sm' responsive>\n            <thead><tr><th>Recurso</th><th>Usado</th><th>Diferencia</th></tr></thead>\n            <tbody>{tableBody}</tbody>\n        </Table>)\n\n    }\n\n    mapperAnalisisTable = (result) => {\n        //El array al cucal enviamos los resultados procesados\n        let tableResult=[];\n        //Obtenemos el Set de Resultados con Formato [key,value]\n        let resultSetArray =  Object.entries(result.solutionSet);\n        //Obtenemos la matriz del simplex reducida\n        let matrix = result._tableau.matrix;\n        //Obtenemos los indices de cada columna\n        let indexByCol = result._tableau.varIndexByCol;\n        //Obtenemos la Lista de Variables Slack y Reales\n        let variablesList = result._tableau.variablesPerIndex\n        //Obtenemos la Lista de Variables Reales\n        // let variablesRealesList = result._tableau.variablesPerIndex.filter(el => !el.isSlack);\n        //Contamos la Cantidad de elementos en la fila de resultados (van a ser cero por ser simplex reducido)\n        // let itemsinCero = matrix[0].length - 1;\n        //Obtenemos cuales son las variables que no estan en el set de resultados (van a ser cero)\n        // let varsEnCero = variablesRealesList.filter( vari => !Object.keys(result.solutionSet).includes(vari.id) )\n        //La cantidad de columnas en la fila de resultados - la cantidad de variables nulas, me devuelven la cantidad de slacks\n        // let slacksEnCero = itemsinCero - varsEnCero.length;\n\n        //Procesamos INFO\n\n        //Primer elemento de la Tabla, el Optimo.\n        tableResult.push({name:'Optimo',item:'',value:result.evaluation});\n        //Procesamos todos los elementos a producir (result Set)\n        resultSetArray.forEach( ([key,value]) => tableResult.push({name:'Producir',item:'X'+key, value}) )\n        //Procesamos el uso de los recursos, es decir, los elementos extras de la Fila de Resultados(Matriz)\n        if (resultSetArray.length < matrix.length-1) {\n            console.log('hola');\n        }\n\n        //Procesamos los Costo de Oportunidad y los Valores Marginales\n        matrix[0].slice(1)\n                .forEach( (col,indCol) => {\n                    //Creamos un nuevo item.\n                    let item= {name:'',item:'',value:''};\n                    //Verificamos si es Slack o Variable Real\n                    if (variablesList[indexByCol[indCol+1]].isSlack){\n                        item.name = 'Valor Marginal';\n                        item.item = 'R'+indexByCol[indCol+1];\n                        item.value = Math.abs(col);\n                    }else{\n                        item.name = 'Costo de Oportunidad';\n                        item.item = 'X'+variablesList[indexByCol[indCol+1]].id;\n                        item.value = Math.abs(col);\n                    }\n                    \n                    //Empujamos el item a la tabla de resultados\n                    tableResult.push(item)})\n            \n        return tableResult\n    }\n\n    cardsVariablesRender = (variables,result) => variables\n                                                    .filter(vari => vari.descripcion !== '')\n                                                    .map( vari => \n                                                                <Card key={'C-V-'+vari.xi} outline color='secondary' className=\"w-100 mt-3 mx-auto\">\n                                                                    <CardHeader><CardTitle>{'Variable: X'+vari.xi}</CardTitle></CardHeader>    \n                                                                    <CardBody>\n                                                                        <Row><CardText>{\n                                                                            result.solutionSet[vari.xi] ? \n                                                                            'Se recomienda producir '+result.solutionSet[vari.xi]+' unidades':\n                                                                            'No se recomienda la produccion'}\n                                                                            {' de '+vari.descripcion}</CardText>\n                                                                        </Row>\n                                                                        <Row></Row> \n                                                            \n                                                                    </CardBody>\n                                                                    <CardFooter>\n                                                                        <CardText>Tabla de Recursos:</CardText>\n                                                                        {result.solutionSet[vari.xi] ? \n                                                                        this.tablaDeRecursosFoot(result.solutionSet[vari.xi],vari.xi):'Sin Consumo de Recursos'}\n                                                                    </CardFooter>\n\n                                                                </Card>)\n\n\n    render () {\n        //Obtenemos el resultado almacenado\n        //Obtenemos las Variables desde las props\n        let {variables, restricciones,result} = this.props;\n        \n    \n        //Obtenemos  la informacion para la tabla de Analisis\n        let itemsTabAnalisis = this.mapperAnalisisTable(result);     \n        //Renderizamos el Tablero de analisis\n        let elementosTabAnalisis = itemsTabAnalisis.map( (item, index) => <tr key={'T-A-'+index}><td>{item.name}</td><td>{item.item}</td><td>{item.value}</td></tr>);\n        // \n        let resultAnalisisCard = \n                        <Card outline color='secondary' className=\"w-100 mt-3 mx-auto\">\n                            <CardHeader><CardTitle><h4>Tablero de Analisis</h4></CardTitle></CardHeader>\n                            <CardBody>\n                                <Table>\n                                    <thead><tr><th></th><th>Elemento</th><th>Valor</th></tr></thead>\n                                    <tbody>\n                                        {elementosTabAnalisis}\n                                    </tbody>\n                                </Table>\n                            </CardBody>\n                        </Card>\n\n        let resultDetalleCard = <Card outline color='secondary' className=\"w-100 mt-3 mx-auto\">\n                                <CardHeader>\n                                    <Row>\n                                        <Col className=\"text-left\"><CardTitle><h5>Detalle de Variables Y Recursos:</h5></CardTitle></Col>\n                                        <Col><Button outline size='sm'\n                                            onClick={() => this.setState({details:!this.state.details})} \n                                            color={!this.state.details ? 'success':'danger'}>{!this.state.details ? 'Ver Detalles':'Ocultar Detalles'}</Button>\n                                        </Col>\n                                    </Row>\n                                </CardHeader>\n                                <Collapse isOpen={this.state.details}>\n                                    <CardBody>\n                                        {this.cardsVariablesRender(variables,result)}\n                                    </CardBody>\n                                </Collapse>\n                            </Card>\n        return(\n                <CardBody>\n                    <Row>{resultAnalisisCard}</Row>\n                    <Row><ReferencesList variables={variables} restricciones={restricciones}/></Row>\n                    <Row>{resultDetalleCard}</Row>\n                </CardBody>)\n    }\n}\n\nexport default SimplexPresentation;","import React from 'react';\nimport {CardBody, Card, CardHeader,CardFooter,Table,Row,Col,CardTitle,Button} from 'reactstrap';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines,LineSeries, AreaSeries, VerticalGridLines,MarkSeries,DiscreteColorLegend,Hint} from 'react-vis';\nimport {Expression, Equation,Fraction} from 'algebra.js';\nimport ReferencesList from '../ReferencesList';\nvar randomColor = require('randomcolor');\n\n\n\n\n\n\nclass GraphicPresentation extends React.Component{\n    constructor (props){\n        super(props)\n        this.state={lineFunctional:[],convexPoints:[],tableResult:'',optimMark:[],points:[],lines:[],referencias:[],value:null,areaGraph:false}\n    }\n\n    componentDidMount() {\n        if ( this.props.graph ){\n            this.updateState()\n        }\n    }\n\n    componentDidUpdate(prevProps){\n        if ( prevProps !== this.props ){\n            if ( this.props.graph ){\n                this.updateState()\n            }\n        }\n    }\n\n    updateState = () =>{\n        let {variables,restricciones,result} = this.props\n        //Filtramos las restricciones y variables que no fueron filtradas antes.\n        restricciones = restricciones.filter(elem => elem.descripcion!=='');\n        variables = variables.filter(elem => elem.descripcion!=='');\n        //Obtenemos los coeficientes a evaluar en el Z\n        let coefToValueZ = this.getCoeficientesToEv(variables)\n        //Obtenemos la paleta de colores.\n        let referencias = this.getColorList(restricciones);\n        //Obtenemos las Lineas y las Expresiones\n        let {lines,expresiones,highestValueX,highestValueY} = this.getLinesAndExpressions(restricciones);\n        //Obtenemos los Puntos de marca general\n        let {points,convexPoints} = this.getPoints(restricciones,expresiones,result,highestValueX,highestValueY)    \n        //Obtenemos el Punto Optimo\n        let optimMark = []\n        if( Object.entries(result).length ){ optimMark = [this.getOptimPoint(result)]}\n        //Obtenemos la Recta del Funcional.\n        // console.log('Maximos X:'+highestValueX+', Y:e'+highestValueY);\n        let lineFunctional = this.getObjectiveFunctionLine(variables,optimMark[0],highestValueX,highestValueY);\n        // console.log(lineFunctional);\n        //Obtenemos la Tabla de resultados.\n        let tableResult = this.getTableResult(optimMark.concat(points),coefToValueZ,restricciones)\n        //Almacenamos el Estado.\n        this.setState({referencias,lines,points,optimMark,convexPoints,lineFunctional,tableResult});\n    }\n\n    getCoeficientesToEv =  variables => {\n        let coef={x:0,y:0};\n        coef.x = variables[0].coeficiente;\n        coef.y = variables[1].coeficiente;\n        return coef\n    }\n\n\n    getLinesAndExpressions = restricciones => {\n        const getFrac = real => new Fraction(Math.pow(10,(real - real.toFixed()).toString().length - 2)*real, Math.pow(10,(real - real.toFixed()).toString().length - 2)) \n        //Tipos de Expresiones: 0: Constante en X; 1: Constante en Y; 2: Recta con pendiente.\n        let expresiones = [];\n        let arrayDeRestriccionesConLosDosCoef =  restricciones.filter(el=> ( el.coeficientes[0] > 0 && el.coeficientes[1] > 0) )\n        let highestValueY = Math.max.apply(Math,arrayDeRestriccionesConLosDosCoef.map( restri => (restri.derecha / restri.coeficientes[1])));\n        let highestValueX = Math.max.apply(Math,arrayDeRestriccionesConLosDosCoef.map( restri => (restri.derecha / restri.coeficientes[0])));\n        // console.log('Ymax: '+highestValueY+' Xmax:'+highestValueX);\n        \n        let lines = restricciones.map( restri => {\n      \n\n            let xNum = !Number.isInteger(Number(restri.coeficientes[0])) ? getFrac(Number(restri.coeficientes[0])):Number(restri.coeficientes[0]);\n\n            let yNum = !Number.isInteger(Number(restri.coeficientes[1])) ? getFrac(Number(restri.coeficientes[1])):Number(restri.coeficientes[1]);\n \n            //Si posee ambos coeficientes entoces es una recta con pendiente.\n            if ( xNum !== 0  &&  yNum!== 0) {\n                let x = new Expression('x').multiply(xNum);\n                let y = new Expression('y').multiply(yNum);\n                let expressRestri = new Expression().add(x).add(y);  \n                let restriEquation = new Equation(expressRestri,restri.derecha)\n                expresiones.push({restriEquation,tipo:2})\n                let yEqu = (new Equation(restriEquation.solveFor('x'),0)).solveFor('y');\n                let xEqu = (new Equation(restriEquation.solveFor('y'),0)).solveFor('x');\n                //Analizamos pendientes positivas y negativas\n                if (xEqu >= 0 && yEqu >= 0) {\n                    //Si es Pendiente negativa tenemos que corta en los puntos +x y +y\n                    if (restri.eq === '>=') {\n                        return([{x:0,y:yEqu,y0:highestValueY},{x:xEqu,y:0,y0:highestValueY},{x:highestValueX,y:0,y0:highestValueY}])\n                    }else{\n                        return([{x:0,y:yEqu},{x:xEqu,y:0}])\n                    }\n                    \n                }else{\n                    //Si es Pendiente positiva solo corta en +x o en +y\n                    if(yEqu >= 0){\n                        //Si corta en +y , entonces calculamos el punto para el grafico en +x\n                        let relation = Math.abs(yEqu/xEqu)\n                        let valY = yEqu+highestValueX*relation\n                        //Si el valor calculado para Y es menor al maximo, lo llevamos hasta alli y actualizamos el Xmax\n                        if (valY < highestValueY){\n                            valY = highestValueY\n                            highestValueX = (highestValueY-yEqu)/relation\n                            // console.log('NewXMAX: '+highestValueX);\n                        }else{\n                            highestValueY = valY            \n                            // console.log('NewYMAX: '+highestValueY);\n                        }\n                        return([{x:0,y:yEqu},{x:highestValueX,y:valY}])\n                    }else{\n                        if (xEqu >= 0) {\n                            //Si corta en +x , entonces calculamos el punto para el grafico en +y\n                            let relation = Math.abs(xEqu/yEqu)\n                            let valX = xEqu+highestValueY*relation\n                            //Si el valor calculado para Y es menor al maximo, lo llevamos hasta alli y actualizamos el YMax\n                            if (valX < highestValueX){\n                                valX = highestValueX\n                                highestValueY = (highestValueX-xEqu)/relation\n                                // console.log('NewYMAX: '+highestValueY);\n                            }else{\n                                highestValueX = valX\n                                // console.log('NewXMAX: '+highestValueX);\n                            }\n                            // console.log(xEqu+' '+yEqu);\n                            return([{x:xEqu,y:0},{x:valX,y:highestValueY}])\n                        }\n                    }\n                }\n            }else {\n                //Sino, es una constante.\n                if (xNum !== 0) {\n                    //Constante en X\n                    let x = new Expression('x').multiply(xNum);\n                    let restriEquation = new Equation(x,restri.derecha)\n                    expresiones.push({restriEquation,tipo:0})\n                    let xEqu = restriEquation.solveFor('x');\n                    if (xEqu >= 0 ){\n                        return([{x:xEqu,y:0},{x:xEqu,y:highestValueY}])\n                    }\n                }else {\n                    //Constante en Y\n                    let y = new Expression('y').multiply(yNum);\n                    let restriEquation = new Equation(y,restri.derecha)\n                    expresiones.push({restriEquation,tipo:1})\n                    let yEqu = restriEquation.solveFor('y')\n                    if ( yEqu >= 0) {\n                        return([{x:0,y:yEqu},{x:highestValueX,y:yEqu}])\n                    }               \n                } \n            }\n        })\n        // console.log('MAXS:'+highestValueX+'y:'+highestValueY);\n        \n        return { lines,expresiones,highestValueX,highestValueY }\n    }\n\n    getColorList = restricciones => restricciones.map( restri => Object({title: 'R'+restri.ri+' Tipo:'+restri.eq, color: randomColor({hue: 'random',luminosity: 'ligth'})}))\n\n    getOptimPoint = solSet => {\n        console.log('Generating Optim Point');\n        //Analizamos el Punto Optimo.\n        if ( solSet['0'] && solSet['1'] ) {return{x:Number(solSet['0']).toFixed(2),y:Number(solSet['1']).toFixed(2),P:'0 - OPTIMO'}\n        }else if ( solSet['0'] ) {return{x:Number(solSet['0']).toFixed(2),y:(0).toFixed(2),P:'0 - OPTIMO'}\n        }else { return{x:(0).toFixed(2),y:Number(solSet['1']).toFixed(2),P:'0 - OPTIMO'}}\n    }\n\n    getObjectiveFunctionLine = (variables,optimPoint,xMax,yMax) => {\n        console.log('Getting OF Line');\n        //Funcion que devuelve una Fraccion de Algebra.js a partir de un numero real.\n        const getFrac = real => new Fraction(Math.pow(10,(real - real.toFixed()).toString().length - 2)*real, Math.pow(10,(real - real.toFixed()).toString().length - 2)) \n        if (optimPoint){\n            try {\n                if (variables[0].coeficiente !== 0  && variables[1].coeficiente !== 0) {\n\n                    let xPoint = !Number.isInteger(Number(optimPoint.x)) ? getFrac(Number(optimPoint.x)):Number(optimPoint.x);\n\n                    let yPoint = !Number.isInteger(Number(optimPoint.y)) ? getFrac(Number(optimPoint.y)):Number(optimPoint.y);\n               \n                    let xExp = new Expression('x').subtract(xPoint).multiply(variables[0].coeficiente);\n                    let yExp = new Expression('y').subtract(yPoint).multiply(variables[1].coeficiente);\n                    \n                    let expFunObj = new Equation(new Expression().add(xExp).add(yExp),0);  \n          \n                    let xEqu = (new Equation(expFunObj.solveFor('y'),0)).solveFor('x');\n\n                    let yEqu = (new Equation(expFunObj.solveFor('x'),0)).solveFor('y');\n        \n                    //Analizamos pendientes positivas y negativas\n                    // console.log('Result Y: '+yEqu.toString());\n                    // console.log('yMax: '+yMax);\n                    // console.log('Result X: '+xEqu.toString());\n                    // console.log('xMax: '+xMax);\n                    //Analizamos los Puntos\n                    if (xEqu >= 0 && yEqu >=0){\n                        \n                            if (xEqu > xMax && yEqu > yMax) {\n                                let yRelation = (xEqu/yEqu)\n                                let xRelation = (yEqu/xEqu)\n                                let xVal = xEqu - yMax/xRelation\n                                let yVal = yEqu - xMax/yRelation\n                                return [{x:xMax,y:yVal},{x:xVal,y:yMax}]\n                            }else if (xEqu <= xMax && yEqu <= yMax) {\n                                return [{x:xEqu,y:0},{x:0,y:yEqu}]\n                            }else if (xEqu > xMax){\n                                    let yRelation = (xEqu/yEqu)\n                                    let yVal = yEqu - xMax/yRelation\n                                    return [{x:xMax,y:yVal},{x:0,y:yEqu}]\n                                }else{\n                                    let xRelation = (yEqu/xEqu)\n                                    let xVal = xEqu - yMax/xRelation\n                                    return [{x:xEqu,y:0},{x:xVal,y:yMax}]\n                                }\n                    }else if ( xEqu < 0 && yEqu < 0 ) {\n                        // console.log('Los dos Neg');\n                        return [{x:xEqu,y:0},{x:0,y:yEqu}]\n                    }else if ( xEqu >= 0 ) {\n                        // console.log('Solo xEqu pos');\n                        if (xEqu > xMax){\n                            let yRelation = (xEqu/yEqu)\n                            let yVal = yEqu - xMax/yRelation\n                            return [{x:xMax,y:yVal},{x:0,y:yEqu}]\n                        }else{\n                            let xRelation = (yEqu/xEqu)\n                            let xVal = xEqu - yMax/xRelation\n                            if (xVal > xMax){\n                                // console.log('Caso XVal > xMax');\n                                \n                                let xRelation = Math.abs(yEqu/xEqu)\n                                let yVal = xMax*xRelation + yEqu\n                                return [{x:xEqu,y:0},{x:xMax,y:yVal}]\n                            }else{\n                                // console.log('Caso Comun');            \n                                return [{x:xEqu,y:0},{x:xVal,y:yMax}]\n                            }    \n                        }\n                    }else{\n                        // console.log('Solo yEqu pos')\n                        if (yEqu > yMax){\n                            console.log('Caso pendiente de desarrollo, Que hacemos? damos mas altura para mostrar la recta?');\n                            return []\n                        }else{\n                            let yRelation = Math.abs(yEqu/xEqu)\n                            let xVal = yRelation * (yMax - yEqu)\n                            if (xVal > xMax){\n                                console.log('Caso PENDIENTE DE VERIFICACION XVal > xMAx');\n                                let xRelation = Math.abs(xEqu/yEqu)\n                                let yVal = xMax*xRelation + yEqu\n                                return [{x:xEqu,y:0},{x:xMax,y:yVal}]\n                            }else{\n                                // console.log('Caso Comun');            \n                                return [{x:0,y:yEqu},{x:xVal,y:yMax}]\n                            }    \n                        }\n                    }\n                }else if( variables[0].coeficiente !== 0) {\n                    // console.log('Sin puendiente, Constante en X'); \n                    //Constante en X\n                    \n                    let xPoint = !Number.isInteger(Number(optimPoint.x)) ? getFrac(Number(optimPoint.x)):Number(optimPoint.x);\n                    let xExp = new Expression('x').subtract(xPoint).multiply(variables[0].coeficiente);   \n                    let xEqu = (new Equation(xExp,0)).solveFor('x');\n                   \n                    if (xEqu >= 0 ){\n                        return([{x:xEqu,y:0},{x:xEqu,y:yMax}])\n                    }     \n                }else{\n\n                    // console.log('Sin pendiente, Constante en Y');\n                    //Constante en Y\n                    let yPoint = !Number.isInteger(Number(optimPoint.y)) ? getFrac(Number(optimPoint.y)):Number(optimPoint.y);\n                    let yExp = new Expression('y').subtract(yPoint).multiply(variables[1].coeficiente);\n                    let yEqu = (new Equation(yExp,0)).solveFor('y');\n                    if (yEqu >= 0 ){\n                        return([{x:0,y:yEqu},{x:xMax,y:yEqu}])\n                    }     \n                }\n                \n            } catch (error) {\n                console.log(error);\n                return [] \n            }\n\n        }else return []      \n    }\n\n    getPoints = (restricciones,expresiones,solSet,xMax,yMax) => {\n        console.log('Getting Points');\n        //Definimos las Funciones necesarias para el buen funcionamiento de esta Funcion.\n\n        const getAreaPointsForConvex = points => {\n            //Funcion que calcula el Angulo entre dos puntos.\n            const calcAng = (point,p) => Math.atan2(point.y - p.y, point.x - p.x) * 180 / Math.PI + 180;\n            //Precargamos puntos que podrian definir el convexo.\n            let possiblePoints = [{x:0,y:0},{x:xMax,y:yMax},{x:Number(points[0].x),y:0},{x:0,y:Number(points[0].y)},{x:xMax,y:Number(points[0].y)},{x:Number(points[0].x),y:xMax}]            \n            //Obtenemos la lista de puntos\n            let pointsList = [...points];\n            //Verificamos puntos que podrian definir el convexo.\n            possiblePoints.forEach( p => (verifyPoint(p,restricciones,points)) && pointsList.push(p) ) \n            //Nos aseguramos de tomar el punto que este en el extremo derecho.\n            pointsList.sort((a,b) => a.x<b.x ? 1:-1);\n            //Creamos nuestra Output\n            let orderedPoints = [];\n            let point = pointsList[0];\n            orderedPoints.push(point)\n            pointsList.splice(0,1) \n            while ( pointsList.length ) {\n                //Encuentra el punto que tiene el angulo minimo\n                let minAngle = pointsList.reduce( (min,p) => calcAng(point,p) < min ? calcAng(point,p) : min, 361);\n                if (minAngle < 361) {\n                    let indNewPoint = pointsList.findIndex(p => calcAng(point,p) === minAngle);\n                    point = pointsList[indNewPoint]\n                    orderedPoints.push(point)\n                    pointsList.splice(indNewPoint,1)           \n                } else { \n                    console.log('Cant find any Angle');\n                    break}\n            }\n            orderedPoints.push(orderedPoints[0])\n            return orderedPoints\n        }\n        \n        //Funcion que se encarga de realizar las verificaciones correspondientes para agregar un punto o no.\n        const verifyPoint = (point, restricciones, points) => {\n            if (point.x >= 0 && point.y >= 0 ){\n                if ( !verifyPointInPoints(point,points) ) {\n                    if ( verifyPointInRestrictions(point,restricciones) ) { return true } else return false\n                }else return false\n            }else return false\n        }\n\n        //Funcion que se encarga de Verificar si un punto ya se encuentra en la lista de puntos (o ya fue verificado antes).\n        const verifyPointInPoints = (point,points) => points.some( pointL => (pointL.x === point.x.toFixed(2) && pointL.y === point.y.toFixed(2)) )\n        \n        //Funcion que se encarga de verificar que un punto cumpla con todas las Restricciones.\n        const verifyPointInRestrictions = (point,restricciones) => restricciones.every( restri => {\n                    let calIzq = (restri.coeficientes[0]*point.x + restri.coeficientes[1]*point.y);\n                    if( restri.eq === '>=' ) {\n                        // console.log('P:('+point.x +','+point.y+') :'+calIzq+' >='+ restri.derecha );                        \n                        return ( calIzq >= restri.derecha ) \n                    }else { \n                        // console.log('P:('+point.x +','+point.y+') :'+calIzq+' <='+ restri.derecha );                        \n                        return ( calIzq <= restri.derecha )} \n                })\n        // Funcion que devuelve un punto verificado y que corta en un Eje.\n        const getPointAxFromExpCenX = ( exp ) => {       \n            //Obtenemos el Corte sobre el Eje-Y\n            let expResultX = Number((new Equation(exp.solveFor('y'),0)).solveFor('x'));\n            if ( expResultX >= 0 ) {\n                //Generamos el Punto en X\n                let point = {x:expResultX,y:0,P:points.length}\n                //Verificamos el punto en X con las Restricciones.\n                if (verifyPoint(point,restricciones,points)){\n                    point.x=point.x.toFixed(2)\n                    point.y=point.y.toFixed(2)\n                    return point} \n            }\n        };\n        // Funcion que devuelve un punto verificado y que corta en un Eje.\n        const getPointAxFromExpCenY = ( exp ) => {       \n            //Obtenemos el Corte sobre el Eje-Y\n            let expResultY = Number((new Equation(exp.solveFor('x'),0)).solveFor('y'));\n            if ( expResultY >= 0 ) {\n                //Generamos el Punto en Y\n                let point = {x:0,y:expResultY,P:points.length}\n                //Verificamos el punto en Y con las Restricciones.\n                if (verifyPoint(point,restricciones,points)){\n                    point.x=point.x.toFixed(2)\n                    point.y=point.y.toFixed(2)\n                    return point} \n            }   \n        };\n        const getPointAxFromExpY = ( expY ) => {\n            //Obtenemos el Corte sobre el Eje-Y\n            let expResultY = Number(expY.solveFor('y'));\n            if ( expResultY >= 0 ) {\n                //Generamos el Punto en Y\n                let point = {x:0,y:expResultY,P:points.length}\n                //Verificamos el punto en Y con las Restricciones.\n                if (verifyPoint(point,restricciones,points)){\n                    point.x=point.x.toFixed(2)\n                    point.y=point.y.toFixed(2)\n                    return point} \n            }\n            \n        };\n        const getPointAxFromExpX = (expX) => {\n            //Obtenemos Cortes sobre el Eje-X\n            let expResultX = Number(expX.solveFor('x'));\n            if ( expResultX >= 0 ) {\n                //Generamos el Punto en X\n                let point = {x:expResultX,y:0,P:points.length}\n                //Verificamos el punto en X con las Restricciones.\n                if (verifyPoint(point,restricciones,points)){\n                    point.x=point.x.toFixed(2)\n                    point.y=point.y.toFixed(2)\n                    return point} \n            } \n        }\n        //Funcion que devuelve un punto verificado con una Expresion en X y otra en Y\n        const getPointFromExpXExpY = ( expX,expY ) => {\n            let xRes = Number(expX.solveFor('x'));\n            let yRes = Number(expY.solveFor('y'));\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\n            if ( xRes >= 0  && yRes >= 0 ) {\n                //Generamos el Punto.\n                let point = {x:xRes,y:yRes,P:points.length}\n                //Verificamos el Punto.\n                if (verifyPoint(point,restricciones,points)){\n                    point.x=point.x.toFixed(2)\n                    point.y=point.y.toFixed(2)\n                    return point} \n            }\n        };\n        //Funcion que devuelve un punto verificado con una Expresion Completa y otra en Y\n        const getPointFromExpCExpY = ( expC,expY ) => {\n            // console.log('EXP C y Recta Y');\n            let expResultY = Number(expY.solveFor('y'));\n            let expResultX = Number((new Equation(expC.solveFor('y'),expY.solveFor('y'))).solveFor('x'));\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\n            if ( expResultX >= 0  && expResultY >= 0 ) {\n                //Generamos el Punto.\n                let point = {x:expResultX,y:expResultY,P:points.length}\n                //Verificamos el Punto.\n                if (verifyPoint(point,restricciones,points)){\n                    point.x=point.x.toFixed(2)\n                    point.y=point.y.toFixed(2)\n                    return point} \n            }\n        };\n        //Funcion que devuelve un punto verificado con una Expresion Completa y otra en X\n        const getPointFromExpCExpX = ( expC,expX ) => {\n            // console.log('EXP C y Recta X');\n            let expResultX = Number(expX.solveFor('x'));\n            let expResultY = Number((new Equation(expC.solveFor('x'),expX.solveFor('x'))).solveFor('y'));\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\n            if ( expResultX >= 0  && expResultY >= 0 ) {\n                //Generamos el Punto.\n                let point = {x:expResultX,y:expResultY,P:points.length}\n                //Verificamos el Punto.\n                if (verifyPoint(point,restricciones,points)){\n                    point.x=point.x.toFixed(2)\n                    point.y=point.y.toFixed(2)\n                    return point}\n            } \n        };\n        //Funcion que devuelve un punto verificado con dos Expresion Completas.\n        const getPointFromTwoExpC = (exp1,exp2) => {\n            let expResultX = Number((new Equation(exp1.restriEquation.solveFor('y'),exp2.restriEquation.solveFor('y'))).solveFor('x'));\n            let expResultY = Number((new Equation(exp1.restriEquation.solveFor('x'),exp2.restriEquation.solveFor('x'))).solveFor('y'));\n            //Verificamos que no se corten en algun otro cuadrante que no sea el de analisis.\n            if ( expResultX >= 0  && expResultY >= 0 ) {\n                //Generamos el Punto.\n                let point = {x:expResultX,y:expResultY,P:points.length}\n                //Verificamos el Punto.\n                if (verifyPoint(point,restricciones,points)){\n                    point.x=point.x.toFixed(2)\n                    point.y=point.y.toFixed(2)\n                    return point}\n                } \n        };\n        //Funcion que devuelve Un punto de Dos Expresiones\n        const getPointFromTwoExp = (exp1,exp2) => {\n            try {\n                //Verificamos los Tipos\n                if ( exp1.tipo === 2 && exp2.tipo === 2 ) {\n                    //Caso de que son dos rectas Completas\n                    return getPointFromTwoExpC(exp1,exp2)  \n                }else if( exp1.tipo === 2){\n                    //La primera es Recta completa y la otra o solo de X o solo de Y\n                    if( exp2.tipo === 0) { return getPointFromExpCExpX(exp1.restriEquation,exp2.restriEquation) \n                    }else return getPointFromExpCExpY(exp1.restriEquation,exp2.restriEquation)\n                }else if( exp2.tipo === 2 ){\n                    //La seguna es la Recta completa entonces la otra es o solo de X o solo de Y\n                    if( exp1.tipo === 0) { return getPointFromExpCExpX(exp2.restriEquation,exp1.restriEquation)\n                    }else return getPointFromExpCExpY(exp2.restriEquation,exp1.restriEquation)\n                }else if (exp1.tipo === 0){\n                    //Si la primera es una recta Solo de X y la otra puede ser de Y\n                    if( exp2.tipo === 1) { return getPointFromExpXExpY(exp1.restriEquation,exp2.restriEquation) }\n                }else{\n                    //Si la Primera es una recta solo de Y y la otra puede ser de X\n                    if( exp2.tipo === 0) { return getPointFromExpXExpY(exp2.restriEquation,exp1.restriEquation) }\n                }  \n            } catch (error) {\n                console.log(error);     \n            }\n            \n        };\n        \n        //Limpiamos nuestro array de Puntos\n        let points = [];\n        \n        //El primer punto que obtenemos es el Optimo, ya que deseamos que no se repita.\n        if ( Object.entries(solSet).length ){ points.push(this.getOptimPoint(solSet)) }\n        \n\n        //Analizamos las Rectas que cortan en los Ejes o Rectas sin pendiente.\n        expresiones.forEach( exp => {\n            if (exp.tipo === 2) {\n                //Si es Completa Corta en los dos Ejes\n                let pointX = getPointAxFromExpCenX(exp.restriEquation);\n                if (pointX) { points.push(pointX) }\n                let pointY = getPointAxFromExpCenY(exp.restriEquation)\n                if (pointY) { points.push(pointY) }\n            }else if(exp.tipo === 0){\n                //Solo Corta en X\n                let point = getPointAxFromExpX(exp.restriEquation);\n                if (point) { points.push(point) }\n\n            }else{\n                //Solo corta en Y\n                let point = getPointAxFromExpY(exp.restriEquation);\n                if (point) { points.push(point) }\n            }\n        })\n\n        //Analizamos los cortes de las Rectas de Restricciones.\n        expresiones.forEach( exp1 => {\n            //Validamos cada unas de las Rectas con las demas.\n            expresiones.forEach( exp2 => {\n                //Verificamos que no sea la misma recta.\n                if( exp1 !== exp2 ) {\n                    let point = getPointFromTwoExp(exp1,exp2);\n                    if (point) {points.push(point)}\n                } \n            })\n        });\n\n        //Obtenemos la secuencia de puntos que define nuestro Convexo.\n        let convexPoints = getAreaPointsForConvex(points);\n        // console.log('Puntos:');\n        // console.log(convexPoints);\n        //Debemos eliminar el punto optimo para que no se imprima en las marcas simples.\n        if( Object.entries(solSet).length ){ points.shift() }\n        return {points,convexPoints}\n    }\n\n    //Funcion que se encarga de devolverme la tabla.\n    getTableResult = (points,coeficientes,restricciones) =>{\n        console.log('Drawing Table Results');    \n        const calcSlacksValue = point => {\n            return restricciones.map( restri => <td key={'S-C-'+point.P+'-'+restri.ri}>{(Math.abs(restri.coeficientes[0]*point.x+restri.coeficientes[1]*point.y - restri.derecha)).toFixed(2)}</td>)\n        }\n        const calcResult = point =>{return (Math.abs(coeficientes.x*point.x + coeficientes.y*point.y)).toFixed(2)}\n        let slacksTitles = restricciones.map(restri => <th key={'S-T-'+restri.ri}>{'S'+restri.ri}</th>)\n        return( <Table>\n                    <thead><tr><th>Punto</th><th>Resultado</th><th>X0</th><th>X1</th>{slacksTitles}</tr></thead>\n                    <tbody>{points.map(point => <tr key={'T-P-'+point.P}><td>P:{point.P}</td><td>{calcResult(point)}</td><td>{point.x}</td><td>{point.y}</td>{calcSlacksValue(point)}</tr>)}</tbody>\n                </Table>)\n    }\n       \n     \n    //Funcion que encarga de ocultar la descripcion del punto.  \n    hidePoint = () => this.setState({value: null})\n\n    //Funcion que se encarga de mostrar la descripcion del punto.\n    showPoint = value => this.setState({ value })\n\n\n    mapperAreaSeries = (lines,referencias) => \n        lines.map((data,index) => <AreaSeries key={'L-S-A'+index} opacity={0.3} color={referencias.length > 0 ?referencias[index].color:'red'} data={data}/>)\n    \n    mapperLinesSeries = (lines,referencias) => \n    lines.map((data,index) => <LineSeries key={'L-S-L'+index} color={referencias.length > 0 ?referencias[index].color:'red'} data={data}/>)\n\n\n    render () {\n        let {variables,restricciones} = this.props\n        let {referencias,lines,value,points,optimMark,convexPoints,lineFunctional,areaGraph,tableResult} = this.state;\n        return( \n        <CardBody>\n            <Card outline color='secondary'>\n                <CardHeader>\n                    <Row>\n                        <Col className=\"text-left\"><CardTitle><h4>Grafico:</h4></CardTitle></Col>\n                        <Col><Button outline size='sm'\n                            onClick={() => this.setState({areaGraph:!this.state.areaGraph})} \n                            color={!this.state.areaGraph ? 'success':'danger'}>{!this.state.areaGraph ? 'Ver Sombra de Restricciones':'Ocultar Sombra de Restricciones'}</Button>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                    <Row className='mx-auto'>\n                        <XYPlot onMouseLeave={() => this.setState({pointer: null})} width={500} height={500}>\n                            <HorizontalGridLines/>\n                            <VerticalGridLines/>\n                            <XAxis title='Variable X0' />\n                            <YAxis  title='Variable X1'/>\n\n                            {areaGraph && this.mapperAreaSeries(lines,referencias)}\n                            \n                            {this.mapperLinesSeries(lines,referencias)}\n\n                            <AreaSeries fill='green' stroke='#fffff' style={{strokeWidth: 0}} opacity={0.6} data={convexPoints}/>\n\n                            <LineSeries color='red' strokeStyle='dashed' data={lineFunctional}/>\n                            \n                            <MarkSeries onValueMouseOver={this.showPoint} onValueMouseOut={this.hidePoint}\n                                        color={'blue'} opacity={0.7} data={points}/>\n                            \n                            <MarkSeries onValueMouseOver={this.showPoint} onValueMouseOut={this.hidePoint}\n                                        color={'green'} data={optimMark}/>\n                            {value && <Hint value={value} />}\n\n                        </XYPlot>\n                    </Row>\n                    <Row className='mx-auto'><DiscreteColorLegend orientation=\"horizontal\" items={referencias}/></Row>\n                    <Row><ReferencesList variables={variables} restricciones={restricciones}/></Row>\n                </CardBody>\n                <CardFooter>\n                    {tableResult}\n                </CardFooter>\n            </Card>\n        </CardBody> )\n    }\n}\n\nexport default GraphicPresentation;","import React from \"react\";\nimport { Card, CardTitle, CardHeader } from \"reactstrap\";\nimport solver from \"javascript-lp-solver\";\nimport SimplexPresentation from \"./SimplexPresentation\";\nimport GraphicPresentation from \"./GraphicPresentation\";\n\nlet convertAppToModelForSolverPrimal = datosApp => {\n  //Obtenemos los Datos de la aplicacion\n  let { restricciones, variables, objective, integer } = datosApp;\n  variables = variables.filter(item => item.descripcion !== \"\");\n  restricciones = restricciones.filter(item => item.descripcion !== \"\");\n  //Precargamos el Modelo\n  let model = { optimize: \"coeficiente\", opType: \"\", constraints: {}, variables: {}, ints: {} };\n\n  //Tratamos el objetivo\n  model.opType = objective;\n\n  //Verificamos si se desea PL Entera\n  if (integer) {\n    variables.forEach(vari => (model.ints[vari.xi] = 1));\n  }\n  //Tratamos las Variables\n  variables.forEach(vari => {\n    //Generamos una nueva Variable\n    let newVari = {};\n    newVari.coeficiente = vari.coeficiente;\n    restricciones.forEach(restri => (newVari[\"r\" + restri.ri] = restri.coeficientes[vari.xi]));\n    // console.log(newVari);\n    model.variables[vari.xi] = newVari;\n  });\n  //Tratamos las Restricciones\n  restricciones.forEach(restri => {\n    if (restri.eq === \">=\") {\n      let res = {};\n      res.min = restri.derecha;\n      model.constraints[\"r\" + restri.ri] = res;\n    } else {\n      let res = {};\n      res.max = restri.derecha;\n      model.constraints[\"r\" + restri.ri] = res;\n    }\n  });\n\n  return model;\n};\n\nclass Presentation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { result: false , details: false };\n  }\n\n  componentDidMount() {\n    let result = false ;\n    if ( this.validateCoeficientes(this.props) ){\n      console.log('Validado..');\n      result = this.calculateResults();\n    }\n    console.log(result);\n    this.setState({ result })\n  }\n\n  componentWillReceiveProps(futureProps) {\n    if (this.props !== futureProps) {\n      let result = false ;\n      if ( this.validateCoeficientes(futureProps) ){\n        console.log('Validado..');\n        result = this.calculateResults();\n      }\n      console.log(result);\n      this.setState({ result })\n    }\n  }\n\n   //Funcion que Valida si es posible operar con los datos ingresados\n   validateCoeficientes = props => {\n    console.log('Validando..');\n    let {variables, restricciones } = props.status;\n    //Verificando si los coeficientes de las variables y las restricciones no son nulos\n    let varsOperatives = variables.filter(va => va.descripcion !== \"\");\n    let verifQty = varsOperatives.length ? varsOperatives.every(va => va.coeficiente !== \"\") : false; \n    let restOperatives = restricciones.filter(re => re.descripcion !== \"\");\n    let veriResQty = restOperatives.length ? restOperatives.every(re => re.coeficientes.every(co => co !== \"\") && re.derecha !== \"\"):false;\n    return (verifQty && veriResQty) ? true : false;\n  };\n\n  //Funcion de Calculo del modelo.\n  calculateResults = () => {\n    console.log('Calculating..');  \n    //Convertimos la App en Modelo para Solver.js\n    let model = convertAppToModelForSolverPrimal(this.props.status);\n\n    //solver.js soluciona y nos devuelve\n    return solver.Solve(model, false, true);\n  };\n\n  render() {\n    //Obtenemos el resultado almacenado\n    let { result } = this.state;\n    let printResults;\n    console.log('Factible?:'+result.feasible);\n    if ( result.feasible ) {\n      //Obtenemos las Variables desde las props\n      let { variables, restricciones, method } = this.props.status;\n      if (method === \"simplex\") {\n        if (result.bounded) {\n            printResults = <SimplexPresentation variables={variables} restricciones={restricciones} result={result} />\n          } \n      }else{\n            printResults = <GraphicPresentation\n                variables={variables}\n                restricciones={restricciones}\n                graph={result.feasible}\n                result={ result.bounded ? result.solutionSet : {} }\n              />\n        }\n      }\n      \n    return (\n      <>\n        <Card outline color=\"info\" className=\"w-100 mt-3 mx-auto\">\n          <CardHeader>\n            <CardTitle>\n              <h3>\n                {result.feasible\n                  ? result.bounded ? \"El resultado óptimo de la función objetivo es: \" + result.evaluation\n                    : \"Solucion no Acotada\"\n                  : \"Solución no Factible\" }\n              </h3>\n            </CardTitle>\n          </CardHeader>\n          {result.feasible && printResults}\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Presentation;\n","import React from \"react\";\nimport { Container, Col, Row, Progress } from \"reactstrap\";\nimport ModalModels from \"../../Models\"\nimport ReactWizard from \"react-bootstrap-wizard\";\nimport Configuration from \"../Configuration\";\nimport Processing from \"../Processing\";\nimport Presentation from \"../Presentation\";\nimport logo from \"../logo.svg\";\n\nclass InSteps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model:{\n        variables: [{ xi: 0, descripcion: \"\", coeficiente: \"\" }, { xi: 1, descripcion: \"\", coeficiente: \"\" }],\n        restricciones: [{ ri: 0, descripcion: \"\", coeficientes: [], eq: \">=\", derecha: \"\" }],\n        method: \"graph\",\n        objective: \"max\",\n        integer: false\n      }, \n      result: false,\n      barProg: 33,\n      modelsOpen:false\n    };\n  }\n  //Esta función maneja el cambio en las restricciones\n  handleRestricciones = restricciones => {\n    let { model } = this.state;\n    model.restricciones = restricciones;\n    this.setState({ model, result: false });\n  };\n  //Esta función maneja el cambio en las variables\n  handleVariables = variables => {\n    let { model } = this.state;\n    model.variables = variables;\n    this.setState({ model, result: false });\n  };\n  //Esta función maneja el cambio del metodo\n  handleMethod = method => {\n    let { model } = this.state;\n    model.method = method;\n    this.setState({ model, result: false });\n  };\n  //Esta función maneja el cambio del objetivo de optimización\n  handleObjective = objective => {\n    let { model } = this.state;\n    model.objective = objective;\n    this.setState({ model, result: false });\n  };\n  toggleInteger = () => {\n    let { model } = this.state;\n    model.integer = !model.integer;\n    this.setState({ model, result: false });\n\n  }\n  //Esta función guarda el resultado (inutilizada por el momento)\n  handleResult = result => this.setState({ result });\n\n  //Esta función habilita el cálculo en el último paso\n  lastStep = step => {\n    if (step === 2) {\n      this.setState({ barProg: 100 });\n    } else {\n      this.setState({ barProg: 66 });\n    }\n  };\n\n  finishButtonClick = result => {\n    console.log(\"En algún momento va a imprimir resultados\");\n  };\n\n  showModels = () => this.setState({modelsOpen:!this.state.modelsOpen})\n\n  setModel = model => this.setState({ model })\n\n  render() {\n    let { modelsOpen,model} = this.state\n    var steps = [\n      // this step hasn't got a isValidated() function, so it will be considered to be true\n      {\n        stepName: \"Configuración del Modelo\",\n        component: Configuration,\n        stepProps: {\n          status: model,\n          loadExampleModel: this.loadExampleModel,\n          handleMethod: this.handleMethod,\n          handleVariables: this.handleVariables,\n          handleRestricciones: this.handleRestricciones,\n          lastStep: this.lastStep,\n          toggleInteger: this.toggleInteger,\n          handleObjective: this.handleObjective,\n          showModels:this.showModels\n        }\n      },\n      {\n        stepName: \"Detalles del Modelo\",\n        component: Processing,\n        stepProps: {\n          status: model,\n          handleVariables: this.handleVariables,\n          lastStep: this.lastStep,\n          handleRestricciones: this.handleRestricciones\n        }\n      },\n      {\n        stepName: \"Presentación de los Resultados\",\n        component: Presentation,\n        stepProps: {\n          status: model,\n          handleResult: this.handleResult,\n          lastStep: this.lastStep\n        }\n      }\n    ];\n    return (\n      <Container fluid className=\"App\">\n        <Row className=\"\">\n          <Col xs={12} md={6} className=\"mx-auto\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n            <Progress animated color=\"blue\" value={this.state.barProg} />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} md={6} className=\"my-4 mx-auto\">\n            <ReactWizard\n              steps={steps}\n              title=\"Programación Lineal\"\n              progressbar\n              headerTextCenter\n              validate\n              color=\"blue\"\n              previousButtonText=\"Volver\"\n              nextButtonText=\"Siguiente\"\n              nextButtonClasses=\"bg-primary\"\n              finishButtonText=\"Imprimir Resultados\"\n              finishButtonClick={this.finishButtonClick}\n            />\n          </Col>\n        </Row>\n        <Row><ModalModels open={modelsOpen} model={model} setModel={this.setModel} handleClose={this.showModels}/></Row>\n      </Container>\n    );\n  }\n}\n\nexport default InSteps;\n","import React from \"react\";\nimport { Container, Col, Row, Jumbotron} from \"reactstrap\";\nimport ModalModels from \"../../Models\"\nimport Configuration from \"../Configuration\";\nimport Processing from \"../Processing\";\nimport Presentation from \"../Presentation\";\nimport logo from \"../logo.svg\";\n\nclass SinglePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model:{\n        variables: [{ xi: 0, descripcion: \"\", coeficiente: \"\" }, { xi: 1, descripcion: \"\", coeficiente: \"\" }],\n        restricciones: [{ ri: 0, descripcion: \"\", coeficientes: [], eq: \">=\", derecha: \"\" }],\n        method: \"graph\",\n        objective: \"max\",\n        integer: false\n      },\n      result: true,\n      modelsOpen:false\n    };\n  }\n\n  //Esta función maneja el cambio en las restricciones\n  handleRestricciones = restricciones => {\n    let { model } = this.state;\n    model.restricciones = restricciones;\n    this.setState({ model, changes: true });\n  };\n  //Esta función maneja el cambio en las variables\n  handleVariables = variables => {\n    let { model } = this.state;\n    model.variables = variables;\n    this.setState({ model, changes: true });\n  };\n  //Esta función maneja el cambio del metodo\n  handleMethod = method => {\n    let { model } = this.state;\n    model.method = method;\n    this.setState({ model, changes: true });\n  };\n  //Esta función maneja el cambio del objetivo de optimización\n  handleObjective = objective => {\n    let { model } = this.state;\n    model.objective = objective;\n    this.setState({ model, changes: true });\n  };\n  toggleInteger = () => {\n    let { model } = this.state;\n    model.integer = !model.integer;\n    this.setState({ model, changes: true });\n\n  }\n  //Esta función guarda el resultado (inutilizada por el momento)\n  handleResult = result => this.setState({ result });\n  //Esta función habilita el cálculo en el último paso\n  lastStep = step => console.log('Changes')\n  \n  finishButtonClick = result => console.log(\"En algún momento va a imprimir resultados\");\n\n  showModels = () => this.setState({modelsOpen:!this.state.modelsOpen});\n\n  setModel = model => this.setState({ model, changes:true });\n\n  render() {\n    let { modelsOpen, model, result } = this.state\n    console.log('PRESENTATION:'+result);\n    \n    return (\n      <Container fluid className=\"App\">\n        <Row className=\"\">\n          <Col xs={12} md={6} className=\"mx-auto\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} md={6} className=\"my-4 mx-auto \">\n            <Row>\n                <Jumbotron className='w-100'>\n                    <Configuration   status={model}\n                    handleMethod={this.handleMethod}\n                    handleVariables={this.handleVariables}\n                    handleRestricciones={this.handleRestricciones}\n                    lastStep={this.lastStep}\n                    toggleInteger={this.toggleInteger}\n                    handleObjective={this.handleObjective}\n                    showModels={this.showModels}/>\n                </Jumbotron>  \n            </Row>\n\n            <Row>\n                <Jumbotron className='w-100'>\n                    <Processing status={model} handleVariables={this.handleVariables}\n                    handleRestricciones={this.handleRestricciones} lastStep={this.lastStep}/>\n                </Jumbotron>\n                \n            </Row>\n\n            <Row>\n                <Jumbotron className='w-100'>\n                    <Presentation status={model} handleResult={this.handleResult} lastStep={this.lastStep}/>\n                </Jumbotron>\n            </Row>\n          \n          </Col>\n        </Row>\n        <Row><ModalModels open={modelsOpen} model={model} setModel={this.setModel} handleClose={this.showModels}/></Row>\n      </Container>\n    );\n  }\n}\n\nexport default SinglePage;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Jumbotron, Container, Row, Col } from \"reactstrap\";\n\nconst NoLinealProgramming = () => {\n  useEffect(() => {\n    document.title = \"Programacion no lineal\"\n  }, []);\n  return (\n    <Container fluid className=\"App\">\n      <Row className=\"\">\n        <Col xs={12} md={6} className=\"mx-auto my-5\">\n          <Jumbotron className=\"\">\n            <Row>\n              <h2>La Programación No-Lineal aún no está disponible.</h2>\n            </Row>\n            <Row>\n              <Link to='/home'><Button className=\"fluid-left\">Volver</Button></Link>\n            </Row>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  )\n};\nexport default NoLinealProgramming;","import React from 'react';\nimport {InputGroupText,InputGroup, Input,InputGroupAddon,UncontrolledPopover,PopoverBody} from 'reactstrap';\n\nconst Restriction = props => {\n    let {ri,descripcion} = props.restriccion\n    \n    const handleChange = e => props.handleChange(ri,e.target.value)\n    return(\n        <InputGroup className=\"mt-1\" id={\"TTR\" + ri} key={\"RTD\" + ri}>\n\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText name=\"ri\" id=\"restriccion\">{\"R\" + ri}</InputGroupText>\n        </InputGroupAddon>\n\n        <Input\n          name={ri}\n          placeholder=\"Descripcion de la Restriccion\"\n          aria-label=\"Descripcion\"\n          aria-describedby=\"restriccion\"\n          onChange={handleChange}\n          value={descripcion}/>\n\n        <UncontrolledPopover flip={false} trigger=\"focus hover\" placement=\"auto\" target={\"TTR\" + ri}>\n          <PopoverBody>Aquí debes ingresar qué representa la restricción en el modelo.</PopoverBody>\n        </UncontrolledPopover>\n\n      </InputGroup>)\n    \n}\n\nexport default Restriction;","import React from 'react';\nimport Restriction from './Restriction';\n\nconst Restrictions = props => {\n    \n    let {restricciones} = props;\n    \n    const deleteRes = ri => {\n        restricciones.splice(ri, 1)\n        restricciones.forEach( (restri,index) => restri.ri = index )\n    }\n    //Función que se encarga de manejar las modificaciones de restricciones.\n    const handleChangeRes = (ri,desc) => {\n        //Si el cambio es dejarla vacia entonces eliminamos la restriccion Sino, Almacenamos el valor\n        if (desc === '') { deleteRes(ri) }else{ restricciones[ri].descripcion = desc }\n        //pedimos al padre que almacene los cambios\n        props.handleRestrictions(restricciones);\n        //Llamamos a generar si corresponde nueva restriccion\n        handleNewRes();\n    };\n    //Función que se encarga de Añadir una restriccion si es necesario.\n    const handleNewRes = () => {\n        //Agregamos Tope de Restricciones\n        if(restricciones.length < 30 ){\n        //Contador de Rescciones sin descripciones.\n        let counterWitheRes = restricciones.filter(element => element.descripcion.length === 0).length;\n        //Si el contador de restricciones vacias es igual a 0 entonces agregamos una restriccion mas.\n            if (counterWitheRes === 0) {\n            restricciones.push({\n                ri: restricciones.length,\n                descripcion: \"\",\n                coeficientes: [],\n                eq: \">=\",\n                derecha: \"\"\n            });\n            props.handleRestrictions(restricciones);\n            }\n        }\n        };\n    handleNewRes();\n    return restricciones.map( restri => <Restriction key={'RES-'+restri.ri} handleChange={handleChangeRes} restriccion={restri}/>)\n}\n\nexport default Restrictions;","import React from 'react';\nimport {InputGroupText,InputGroup, Input,InputGroupAddon,UncontrolledPopover,PopoverBody} from 'reactstrap';\n\nconst Variable = props => {\n    let {xi,descripcion} = props.variable\n    const handleChange = e => props.handleChanges(xi,e.target.value) \n    return(\n        <InputGroup className=\"mt-1\" id={\"XTT\" + xi} key={\"VTD\" + xi}>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText name=\"xi\" id=\"variable\">\n            {\"X\" + xi}\n          </InputGroupText>\n        </InputGroupAddon>\n        <Input\n          name={xi}\n          placeholder=\"Descripcion de la Variable\"\n          aria-label=\"Descripcion\"\n          aria-describedby=\"variable\"\n          onChange={handleChange}\n          value={descripcion}\n        />\n        <UncontrolledPopover flip={false} trigger=\"focus hover\" placement=\"auto\" target={\"XTT\" + xi}>\n          <PopoverBody>Aquí debes ingresar qué representa la variable en el modelo.</PopoverBody>\n        </UncontrolledPopover>\n      </InputGroup>)\n    \n}\n\nexport default Variable;","import React from 'react';\nimport Variable from './Variable';\n\nconst Variables = props => {\n    let { variables,method } = props\n        //Función que se encarga de manejar las modificaciones en las variables.\n        const deleteVar = xi => {\n            if (variables.length > 2){\n                variables.splice(xi, 1)\n                variables.forEach( (vari,index) => vari.xi = index )\n            }else{\n                variables[xi].descripcion = ''\n            }\n        }\n        //Función que se encarga de manejar las modificaciones de restricciones.\n        const handleChangesVar = (xi,desc) => {\n            //Si el cambio es dejarla vacia entonces eliminamos la restriccion Sino, Almacenamos el valor\n            if (desc === '') { deleteVar(xi) }else{ variables[xi].descripcion = desc }\n            //pedimos al padre que almacene los cambios\n            props.handleVariables(variables);\n        };\n        //Función que se encarga de Añadir una Variable si es necesario.\n    const handleNewsVar = () => {\n        if (method === \"simplex\") {\n            if( variables.length < 20 ){\n                //Si el metodo es Simplex, se permite agregar más de dos variables.\n                let counterWitheVar = variables.filter(element => element.descripcion.length === 0).length;\n                //Si la cantidad de Variables Libres es igual a 0 se agrega una más.\n                if (counterWitheVar === 0) {\n                variables.push({ xi: variables.length, descripcion: \"\", coeficiente: \"\" });\n                props.handleVariables(variables);\n                }\n            }\n        } else {\n        //Si no lo es, aseguramos que existan solo dos, entonces eliminamos lo que está de más.\n            if (variables.length > 2) {\n                variables.splice(2);\n                props.handleVariables(variables);\n            }\n        }\n    };\n    handleNewsVar();\n    return variables.map( variable => <Variable key={'VAR-'+variable.xi} handleChanges={handleChangesVar} variable={variable}/> )\n}\n\nexport default Variables;","import React from \"react\";\nimport { ButtonGroup, Button, Container, Row, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\nimport { Alert, UncontrolledPopover, PopoverBody, PopoverHeader } from \"reactstrap\";\nimport Restrictions from \"./Restrictions\";\nimport Variables from \"./Variables\";\n\nclass Configuration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { faltaDescrip: \"\" };\n  }\n\n  //Función que permite validar si se ingresaron todos los cambios correspondientes en la etapa\n  isValidated() {\n    let { variables, restricciones } = this.props.status;\n    let variablesDescriptionsMin = variables.filter(va => va.descripcion !== \"\");\n    let restriccionesDescriptionsMin = restricciones.filter(re => re.descripcion !== \"\");\n    if ((variablesDescriptionsMin.length > 1) & (restriccionesDescriptionsMin.length > 0)) {\n      this.props.lastStep(1);\n      this.setState({ faltaDescrip: \"\" });\n      return true;\n    } else if (variablesDescriptionsMin.length < 2) {\n      this.setState({ faltaDescrip: \"Se necesitan como mínimo dos variables\" });\n    } else if (restriccionesDescriptionsMin.length < 1) {\n      this.setState({ faltaDescrip: \"Se necesita como mínimo una restricción\" });\n    }\n    return false;\n  }\n\n  //Funcion que se encarga de traspasar los cambios al padre\n  handleRestrictions = restricciones => this.props.handleRestricciones(restricciones)\n\n  //Funcion que se encarga de traspasar los cambios al padre\n  handleVariables = variables => this.props.handleVariables(variables)\n\n  //Modelos\n  showModels = () => this.props.showModels()\n\n  render() {\n    //Obtenemos de las props, las varaibles y restricciones.\n    let { variables, restricciones, method } = this.props.status;\n    let buttonsOptType = (\n      <ButtonGroup>\n        <Button\n          outline\n          onClick={() => this.props.handleObjective(\"max\")}\n          active={this.props.status.objective === \"max\"}\n          color=\"primary\"\n        >\n          Maximizar\n        </Button>\n        <Button\n          outline\n          onClick={() => this.props.handleObjective(\"min\")}\n          active={this.props.status.objective === \"min\"}\n          color=\"primary\"\n        >\n          Minimizar\n        </Button>\n      </ButtonGroup>\n    );\n\n    return (\n      <>\n        <h3>Comenzamos configurando nuestro modelo</h3>\n        <Container>\n\n          <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardOpt\">\n            <PopoverBody>\n              Y aquí el tipo de optimizacion que deseas realizar: si deseas maximizar o minimizar la\n              función.\n                </PopoverBody>\n          </UncontrolledPopover>\n          <Card outline color=\"secondary\" id=\"CardOpt\" className=\"mt-3 mx-auto\">\n            <CardHeader>Tipo de optimización</CardHeader>\n            <CardBody>{buttonsOptType}</CardBody>\n          </Card>\n\n          <Row>\n            <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardVariables\">\n              <PopoverHeader>Variables</PopoverHeader>\n              <PopoverBody>\n                Aquí debes ingresar las variables que formarán parte del modelo, las mismas son de carga\n                dinámica.\n              </PopoverBody>\n            </UncontrolledPopover>\n            <Card outline color=\"secondary\" id=\"CardVariables\" className=\"w-100 mt-3 mx-auto\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Variables</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody><Variables method={method} handleVariables={this.handleVariables} variables={variables} /></CardBody>\n            </Card>\n          </Row>\n          <Row>\n            <UncontrolledPopover flip={false} trigger=\"hover\" placement=\"top\" target=\"CardRestri\">\n              <PopoverHeader>Restricciones</PopoverHeader>\n              <PopoverBody>\n                Aquí debes ingresar las restricciones que formarán parte del modelo, éstas también son de\n                carga dinámica.\n              </PopoverBody>\n            </UncontrolledPopover>\n            <Card outline color=\"secondary\" id=\"CardRestri\" className=\"w-100 mt-3 mx-auto\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Restricciones</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody><Restrictions handleRestrictions={this.handleRestrictions} restricciones={restricciones} /></CardBody>\n            </Card>\n          </Row>\n          {this.state.faltaDescrip !== \"\" && (\n            <Row className=\"mt-3\">\n              <Alert className=\"mx-auto\" color=\"danger\">\n                {this.state.faltaDescrip}\n              </Alert>\n            </Row>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Configuration;\n","import React from 'react';\nimport {Button,InputGroupText,Card,CardBody,CardHeader,CardTitle ,InputGroup, Input,InputGroupAddon, ButtonGroup,UncontrolledTooltip} from 'reactstrap';\n\nconst Restriccion = props => {\n    let {coeficientes} = props.restriccion;\n    //Verificamos la cantidad de coeficientes dependiendo de la cantidad de variables.\n    if (coeficientes.length !== props.cantVariables) {\n        //Diferencia de entre las variables y los coeficientes de las restricciones. \n        let diferencia = props.cantVariables - coeficientes.length;\n        if ( diferencia > 0 ) {\n            for (let index = 0; index < diferencia; index++) {\n                coeficientes.push('')       \n            }\n        }else {\n            coeficientes.splice(props.cantVariables)\n        }\n    }\n\n    let thisEq = props.restriccion.eq;\n    let botoneraMaxMin = (<ButtonGroup className='mx-1' key={'Eq'+props.restriccion.ri}>\n                                    <Button key={'B<s'+props.restriccion.ri} name='eq' \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='<='}} \n                                        color={thisEq === '<=' ? \"primary\":\"secondary\" } \n                                        value='<='>{'<='}</Button>\n                                    <Button key={'B='+props.restriccion.ri} name='eq' \n                                        disabled \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='='}} \n                                        color={thisEq === '=' ? \"primary\":\"secondary\"} \n                                        value='='>{'='}</Button>\n                                    <Button key={'B>'+props.restriccion.ri} name='eq' \n                                        onClick={e => {props.handleCoefRes(e,props.restriccion.ri);thisEq='>='}} \n                                        color={thisEq === '>=' ? \"primary\":\"secondary\"} \n                                        value='>='>{'>='}</Button>\n                                </ButtonGroup>);\n    let inputsRestriccions = coeficientes\n    .map((coeficiente,indx) => \n        <React.Fragment key={'divCi'+indx}>\n            <Input key={'Ci'+props.restriccion.ri+'r'+indx}\n                type=\"number\"\n                name={indx}\n                placeholder=\"Coefiente\"\n                className=\"InputCoeficiente\"\n                onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\n                value={coeficiente}\n                />\n            <InputGroupAddon key={'IADD'+props.restriccion.ri+'r'+indx} addonType='append'>\n                <InputGroupText key={'r'+props.restriccion.ri+'r'+indx}>{'X'+indx}</InputGroupText>\n            </InputGroupAddon>\n            {indx < coeficientes.length-1 && <InputGroupText key={'+'+props.restriccion.ri+'r'+indx}>+</InputGroupText>}\n        </React.Fragment>\n            \n    )\n\n    return(\n        <Card key={'CR'+props.restriccion.ri} id={'CR'+props.restriccion.ri}>\n            <UncontrolledTooltip flip={false} key={'TTCR'+props.restriccion.ri} placement='auto' target={'CR'+props.restriccion.ri}>\n            {'Aqui debes ingresar los coeficiente de '+props.restriccion.descripcion}\n            </UncontrolledTooltip>\n            <CardHeader className=\"p-0 m-0\"><CardTitle>{'R'+props.restriccion.ri+':'+props.restriccion.descripcion}</CardTitle></CardHeader>\n            <CardBody className=\"p-0 my-1 mx-auto\">\n                <InputGroup key={'RT'+props.restriccion.ri}>\n                    {inputsRestriccions}\n                    {botoneraMaxMin}\n                    <Input key={'C'+props.restriccion.ri+'r'+coeficientes.length}\n                            type=\"number\"\n                            name={'derecha'}\n                            placeholder=\"Coe\"\n                            className=\"InputCoeficiente\"\n                            aria-label=\"Coe\"\n                            aria-describedby=\"restriccion\"\n                            onChange={e => {props.handleCoefRes(e,props.restriccion.ri)}}\n                            value={props.restriccion.derecha}/>\n                </InputGroup>\n            </CardBody>\n        </Card>)\n    \n}\n\nexport default Restriccion;","import React from 'react';\nimport {InputGroup, InputGroupText, Input } from 'reactstrap'\n\n\nconst FuncionObj = props => {\n    return(\n            <InputGroup className=\"mt-1\">\n    \n            <InputGroupText className='mx-1'> Z = </InputGroupText>\n            <Input\n              placeholder=\"Funcion objetivo\"\n              aria-label=\"Descripcion\"\n              aria-describedby=\"funcion\"\n              onChange={ e => props.handleObjectiveFunction(e)}\n              />\n            <InputGroupText className='mx-1'>{' => '+props.objective.toUpperCase()}</InputGroupText>\n    \n          </InputGroup>\n    ) \n}\n\nexport default FuncionObj;","import React from \"react\";\nimport { Container, Row, Card, CardBody, CardHeader, CardTitle, Alert } from \"reactstrap\";\nimport Restriccion from \"./Restriccion\";\nimport FuncionObj from \"./FuncionObj\";\n\nclass Processing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { faltaCoe: \"\" };\n  }\n\n  isValidated() {\n    //Verificando si los coeficientes de las variables y las restricciones no son nulos\n    let verifQty = this.props.status.variables\n      .filter(va => va.descripcion !== \"\")\n      .every(va => va.coeficiente !== \"\");\n    let veriResQty = this.props.status.restricciones\n      .filter(re => re.descripcion !== \"\")\n      .every(re => re.coeficientes.every(co => co !== \"\") && re.derecha !== \"\");\n    if (verifQty && veriResQty) {\n      console.log(verifQty+'dff:'+veriResQty);\n      \n      this.props.lastStep(2);\n      this.setState({ faltaCoe: \"\" });\n      return true;\n    } else {\n      let faltaCoe;\n      faltaCoe = veriResQty\n        ? \"Falta algun coeficiente del Funcional\"\n        : \"Falta algun coeficiente en las Restricciones\";\n      this.setState({ faltaCoe });\n      return false;\n    }\n  }\n  \n  handleObjectiveFunction = event => {\n    let { value } = event.target;\n    if (value) {\n      console.log('Cambiando Objetivo');\n      this.props.status.objetivo = value;\n    }\n  }\n\n  //En el siguiente handler, se toma del input de una variable en particular el coeficiente.\n  handleCoefVar = event => {\n    let { value, name } = event.target;\n    if (value) {\n      let { variables } = this.props.status;\n      variables[name].coeficiente = parseInt(value);\n      this.props.handleVariables(variables);\n      console.log(this.props.status.variables);\n    }\n  };\n\n  handleCoefRes = (event, ri) => {\n    let { name, value } = event.target;\n    let { restricciones } = this.props.status;\n    console.log(\"En la Res:\" + ri + \", en el campo:\" + name + \",con el valor:\" + value);\n\n    switch (name) {\n      case \"derecha\":\n        restricciones[ri].derecha = Number(value);\n        break;\n      case \"eq\":\n        restricciones[ri].eq = value;\n        break;\n      default:\n        restricciones[ri].coeficientes[name] = Number(value);\n        break;\n    }\n    console.log(restricciones);\n    this.props.handleRestricciones(restricciones);\n  };\n\n  render() {\n    //Obtenemos las propiedades del Super\n    let { variables } = this.props.status;\n    let { restricciones } = this.props.status;\n    let varsOperativas = variables.filter(va => va.descripcion !== \"\").length;\n\n    //Generamos el renderizado para cada una de los elementos de los arreglos obtenidos anteriormente.\n\n    let restriccionesInput = restricciones\n      .filter(item => item.descripcion !== \"\")\n      .map((restriccion, index) => (\n        <Restriccion\n          className=\"mt-1\"\n          key={\"R\" + index}\n          handleCoefRes={this.handleCoefRes}\n          cantVariables={varsOperativas}\n          restriccion={restriccion}\n        />\n      ));\n\n    return (\n      <>\n        <h3>Cargamos los datos de nuestro modelo</h3>\n        <Container>\n          <Row>\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Función objetivo</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody className=\"mx-auto\">\n                <FuncionObj\n                  handleObjectiveFunction={this.handleObjectiveFunction}\n                  objective={this.props.status.objective}\n                />\n              </CardBody>\n            </Card>\n          </Row>\n          <Row>\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Restricciones</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody>{restriccionesInput}</CardBody>\n            </Card>\n          </Row>\n          {this.state.faltaCoe !== \"\" && (\n            <Row className=\"mt-3\">\n              <Alert className=\"mx-auto\" color=\"danger\">\n                {this.state.faltaCoe}\n              </Alert>\n            </Row>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Processing;\n","import React from \"react\";\nimport { Container, Col, Row, Jumbotron } from \"reactstrap\";\nimport Configuration from \"../Configuration\";\nimport Processing from \"../Processing\";\nimport logo from \"../logo.svg\";\n\nclass SinglePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: {\n        variables: [{ xi: 0, descripcion: \"\", coeficiente: \"\" }, { xi: 1, descripcion: \"\", coeficiente: \"\" }],\n        restricciones: [{ ri: 0, descripcion: \"\", coeficientes: [], eq: \">=\", derecha: \"\" }],\n        method: \"graph\",\n        objective: \"max\",\n        integer: false\n      },\n      result: true\n    };\n  }\n\n  //Esta función maneja el cambio en las restricciones\n  handleRestricciones = restricciones => {\n    let { model } = this.state;\n    model.restricciones = restricciones;\n    this.setState({ model, changes: true });\n  };\n  //Esta función maneja el cambio en las variables\n  handleVariables = variables => {\n    let { model } = this.state;\n    model.variables = variables;\n    this.setState({ model, changes: true });\n  };\n  //Esta función maneja el cambio del metodo\n  handleMethod = method => {\n    let { model } = this.state;\n    model.method = method;\n    this.setState({ model, changes: true });\n  };\n  //Esta función maneja el cambio del objetivo de optimización\n  handleObjective = objective => {\n    let { model } = this.state;\n    model.objective = objective;\n    this.setState({ model, changes: true });\n  };\n  toggleInteger = () => {\n    let { model } = this.state;\n    model.integer = !model.integer;\n    this.setState({ model, changes: true });\n\n  }\n  //Esta función guarda el resultado (inutilizada por el momento)\n  handleResult = result => this.setState({ result });\n  //Esta función habilita el cálculo en el último paso\n  lastStep = step => console.log('Changes')\n\n  finishButtonClick = result => console.log(\"En algún momento va a imprimir resultados\");\n\n  showModels = () => this.setState({ modelsOpen: !this.state.modelsOpen });\n\n  setModel = model => this.setState({ model, changes: true });\n\n  render() {\n    let { model, result } = this.state\n    console.log('PRESENTATION:' + result);\n\n    return (\n      <Container fluid className=\"App\">\n        <Row className=\"\">\n          <Col xs={12} md={6} className=\"mx-auto\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} md={6} className=\"my-4 mx-auto \">\n            <Row>\n              <Jumbotron className='w-100'>\n                <Configuration status={model}\n                  handleMethod={this.handleMethod}\n                  handleVariables={this.handleVariables}\n                  handleRestricciones={this.handleRestricciones}\n                  lastStep={this.lastStep}\n                  toggleInteger={this.toggleInteger}\n                  handleObjective={this.handleObjective}\n                  showModels={this.showModels} />\n              </Jumbotron>\n            </Row>\n\n            <Row>\n              <Jumbotron className='w-100'>\n                <Processing status={model} handleVariables={this.handleVariables}\n                  handleRestricciones={this.handleRestricciones} lastStep={this.lastStep} />\n              </Jumbotron>\n\n            </Row>\n\n\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default SinglePage;\n","import React, { useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport { Button, Jumbotron, Container, Row, Col } from \"reactstrap\";\n\nconst ModeloRedes = () =>{\n    useEffect(() => {\n        document.title = \"Modelos de redes\"\n      }, []);\n    return(\n        <Container fluid className=\"App\">\n        <Row className=\"\">\n            <Col xs={12} md={6} className=\"mx-auto my-5\">\n                <Jumbotron>\n                    <Row>\n                        <h2 className=\"mx-auto\">¡Bien!, Ahora Seleccione un Modelo.</h2>\n                    </Row>\n                    <Row className=\"mt-3 mx-auto\">\n                        <Col>\n                            <Link to={\"/ModeloRedes/ArbolMinimaExpansion\"}>\n                                <Button size='lg' outline color=\"success\">Árbol de mínima expansión</Button>\n                            </Link>\n                                \n                        </Col>\n                    </Row>\n                    <Row className=\"mt-3 mx-auto\">\n                        <Col>\n                            <Link to={\"/ModeloRedes/RutaMasCorta\"} >\n                                <Button size='lg' outline color=\"success\">Ruta más corta</Button>\n\n                            </Link>\n                        </Col>\n                    </Row>\n                </Jumbotron>\n            </Col>\n        </Row>\n    </Container>\n  )\n};\n\nexport default ModeloRedes;","import React from 'react';\nimport { InputGroupText, InputGroup, Input, InputGroupAddon } from 'reactstrap';\n\nconst Arista = props => {\n  let { xi } = props.arista;\n  // const handleChange = e => props.handleChanges(e);\n  return (\n    <InputGroup className=\"mt-1\">\n      <InputGroupAddon addonType=\"prepend\">\n        <InputGroupText>\n          {\"A\" + xi}\n        </InputGroupText>\n      </InputGroupAddon>\n      <Input\n        name={[xi, \"nodoInicial\"]}\n        placeholder=\"Nodo inicial\"\n        aria-label=\"Nodo inicial\"\n        aria-describedby=\"arista\"\n        onChange={props.handleChanges}\n      />\n      <Input\n        name={[xi, \"nodoFinal\"]}\n        placeholder=\"Nodo final\"\n        aria-label=\"Nodo final\"\n        aria-describedby=\"arista\"\n        onChange={props.handleChanges}\n      />\n      <Input\n        name={[xi, \"peso\"]}\n        placeholder=\"Peso\"\n        aria-label=\"Peso\"\n        aria-describedby=\"arista\"\n        onChange={props.handleChanges}\n      />\n\n    </InputGroup>)\n\n}\n\nexport default Arista;","import React from 'react';\nimport Arista from './Arista';\n\nconst Aristas = props => {\n    let { aristas } = props;\n\n    //Función que se encarga de manejar las modificaciones en las aristas.\n    const deleteArista = xi => {\n        if (aristas.length > 2) {\n            aristas.splice(xi, 1)\n            aristas.forEach((vari, index) => vari.xi = index)\n        } /*else {\n            aristas[xi].values = { nodoInicial: \"\", nodoFinal: \"\", peso: \"0\" };\n        }*/\n    };\n    //Función que se encarga de manejar las modificaciones de aristas.\n    const handleChangesArista = (e) => {\n        const { name, value } = e.target;\n        const xi = name.split(',')[0];;\n        const variable = name.split(',')[1];\n        (aristas[xi]).values[variable] = value;\n        //pedimos al padre que almacene los cambios\n        props.handleAristas(aristas);\n    };\n    //Función que se encarga de Añadir una arista si es necesario.\n    const handleNewsVar = () => {\n        if (aristas.length < 20) {\n\n            var aristasSinValores = 0;\n            aristas.forEach(arista => {\n                if (arista.values['nodoInicial'].length === 0 || arista.values['nodoFinal'].length === 0 || arista.values['peso'].length === 0)\n                    aristasSinValores++;\n            })\n\n            //Si la cantidad de aristas Libres es igual a 0 se agrega una más.\n            if (aristasSinValores === 0) {\n                aristas.push({ xi: aristas.length, values: { nodoInicial: \"\", nodoFinal: \"\", peso: \"0\" } });\n                props.handleAristas(aristas);\n            }\n\n            if(aristasSinValores > 1) {\n                deleteArista(aristas.length - 1);\n            }\n        }\n    };\n    handleNewsVar();\n    return aristas.map(arista => <Arista key={'VAR-' + arista.xi} handleChanges={handleChangesArista} arista={arista} />)\n}\n\nexport default Aristas;","import React from 'react';\nimport { Input } from 'reactstrap'\n\n\nconst CantidadNodos = props => {\n    return (\n            <Input\n                placeholder=\"Cantidad de nodos\"\n                aria-label=\"Descripcion\"\n                aria-describedby=\"cantidad\"\n                onChange={e => props.handleCantidadNodos(e)}\n            />\n    )\n}\n\nexport default CantidadNodos;","import React from 'react';\nimport { Input, } from 'reactstrap'\n\n\nconst NodoInicial = props => {\n    return (\n        <Input\n            placeholder=\"Nodo inicial del camino\"\n            aria-label=\"Descripcion\"\n            aria-describedby=\"cantidad\"\n            onChange={props.handleNodoInicial}\n        />\n    )\n}\n\nexport default NodoInicial;","import React from \"react\";\nimport { Container, Row, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\nimport Aristas from \"./Aristas\";\nimport CantidadNodos from \"./CantidadNodos\";\nimport NodoInicial from \"./NodoInicial\";\n\nclass Processing extends React.Component {\n\n  handleCantidadNodos = event => {\n    let { value } = event.target;\n    if (value) {\n      console.log('Cambiando Objetivo');\n      this.props.status.cantidadNodos = value;\n      this.props.setModel(this.props.status);\n    }\n  }\n\n  handleNodoInicial = event => {\n    let { value } = event.target;\n    if (value) {\n      console.log('Cambiando Nodo Inicial');\n      this.props.status.nodoInicial = value;\n      this.props.setModel(this.props.status);\n    }\n  }\n\n  handleAristas = aristas => {\n    this.props.status.aristas = aristas;\n    this.props.setModel(this.props.status);\n  };\n\n  rutaMasCorta() {\n    if (this.props.rutaMasCorta){\n    return <Row>\n    <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n      <CardHeader>\n        <CardTitle className=\"text-left\">\n          <h4>Nodo Inicial</h4>\n        </CardTitle>\n      </CardHeader>\n      <CardBody className=\"mx-auto\">\n        <NodoInicial\n          handleNodoInicial={this.handleNodoInicial}\n        />\n      </CardBody>\n    </Card>\n  </Row>\n        \n  }\n  }\n\n  render() {\n    //Generamos el renderizado para cada una de los elementos de los arreglos obtenidos anteriormente.\n\n    return (\n      <>\n        <h3>Cargamos los datos de nuestro modelo</h3>\n        <Container>\n          <Row>\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Cantidad de nodos</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody className=\"mx-auto\">\n                <CantidadNodos\n                  handleCantidadNodos={this.handleCantidadNodos}\n                />\n              </CardBody>\n            </Card>\n          </Row>\n          {this.rutaMasCorta()}\n          <Row>\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Aristas</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Aristas\n                  aristas={this.props.status.aristas}\n                  handleAristas = {this.handleAristas}\n                /></CardBody>\n            </Card>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Processing;\n","import React from \"react\";\nimport { Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\nimport arbolExpansionMinima from \"../Functions/ArbolMinimaExpansion\";\n\nclass Presentation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n    this.resultado = null;\n  }\n\n  mostrarResultados = () => {\n    let { aristas, cantidadNodos } = this.model;\n    cantidadNodos = parseInt(cantidadNodos);\n    var errorDatos;\n    var error = false;\n    var numeroArista;\n\n    if (cantidadNodos <= 1) {\n      return <h3>Deben existir al menos 2 nodos</h3>\n    }\n\n    let aristasConverted = [];\n    aristas.forEach(function callback(arista, index, array) {\n\n      if (arista.values['nodoInicial'].length > 0 && arista.values['nodoFinal'].length > 0 && arista.values['peso'] > 0) {\n        const nodoInicial = Number(arista.values['nodoInicial']);\n        const nodoFinal = Number(arista.values['nodoFinal']);\n        const peso = Number(arista.values['peso']);\n\n        console.log(nodoFinal, nodoInicial, peso);\n        if (nodoInicial >= cantidadNodos || nodoInicial < 0 || nodoFinal >= cantidadNodos || nodoFinal < 0 || Number.isNaN(nodoInicial) || Number.isNaN(nodoFinal) || Number.isNaN(peso)) {\n          error = true;\n          errorDatos = 'Los valores de los nodos pueden ir desde 0 hasta ' + (cantidadNodos - 1);\n          numeroArista = index;\n          console.log(errorDatos)\n        }\n        if (nodoInicial === nodoFinal) {\n          error = true;\n          errorDatos = 'Un nodo no puede apuntarse a sí mismo';\n        }\n        console.log(errorDatos)\n        const aristaConverted = [nodoInicial, nodoFinal, peso];\n\n        aristasConverted.push(aristaConverted);\n      }\n    });\n\n    if (error) return <Card> <h3>Error en arista A{numeroArista}:</h3><p>{errorDatos}</p></Card>\n\n    console.log('Aristas del modelo: ', aristasConverted);\n    console.log('Cantidad de nodos: ', cantidadNodos);\n\n    let resultados;\n    if (cantidadNodos > 0 && aristasConverted.length > 0) {\n      resultados = arbolExpansionMinima(cantidadNodos, aristasConverted);\n    } else {\n      return <h3>Modelo incompleto</h3>\n    }\n\n    let mostrar = [];\n\n    if (resultados !== 0) {\n      resultados.forEach(e => {\n        const v = e.either();\n        const w = e.other(v);\n\n        mostrar.push(<h4>{`(${v}, ${w}): ${e.weight}`}</h4>);\n      })\n    }\n\n    if (mostrar.length > 0) {\n      return<Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n        <CardHeader>\n          <CardTitle className=\"text-left\">\n            <h4>Resultados</h4>\n          </CardTitle>\n        </CardHeader>\n        <CardBody className=\"mx-auto\">\n          {mostrar}\n        </CardBody>\n      </Card>\n    }\n  }\n\n  render() {\n\n    return (\n      <>\n        <Card outline color=\"info\" className=\"w-100 mt-3 mx-auto\">\n          <CardHeader>\n            <CardTitle>\n              {this.mostrarResultados()}\n            </CardTitle>\n          </CardHeader>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Presentation;\n","import React from \"react\";\nimport { Container, Col, Row, Jumbotron } from \"reactstrap\";\nimport Processing from \"../Processing\";\nimport Presentation from \"./presentacion\";\nimport logo from \"../logo.svg\";\n\nclass ArbolMinimaExpansion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: {\n        aristas: [{ xi: 0, values: { nodoInicial: \"\", nodoFinal: \"\", peso: \"\" } }, { xi: 1, values: { nodoInicial: \"\", nodoFinal: \"\", peso: \"0\" } }],\n        cantidadNodos: \"0\",\n        integer: false\n      },\n      result: true\n    };\n  }\n\n  handleAristas = aristas => {\n    let { model } = this.state;\n    model.aristas = aristas;\n    this.setState({ model, changes: true });\n  };\n\n  setModel = model => this.setState({ model, changes: true });\n\n  render() {\n    let { model } = this.state\n\n    return (\n      <Container fluid className=\"App\">\n        <Row className=\"\">\n          <Col xs={12} md={6} className=\"mx-auto\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} md={6} className=\"my-4 mx-auto \">\n            <Row>\n              <Jumbotron className='w-100'>\n                <h2>Modelos de redes:</h2>\n                <h2>Arbol de minima expansion</h2>\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <Processing status={model} handleAristas={this.handleAristas}\n                  handleRestricciones={this.handleRestricciones} setModel={this.setModel} />\n              </Jumbotron>\n\n            </Row>\n            <Row>\n              <Presentation model={model} />\n            </Row>\n\n          </Col>\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default ArbolMinimaExpansion;\n","import React from \"react\";\nimport { Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\nimport rutaMasCorta from \"../Functions/RutaMasCorta\";\n\nclass Presentation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n    this.resultado = null;\n  }\n\n  mostrarResultados = () => {\n    let { aristas, cantidadNodos, nodoInicial } = this.model;\n    cantidadNodos = parseInt(cantidadNodos);\n    nodoInicial = parseInt(nodoInicial);\n    var errorDatos;\n    var error = false;\n    var numeroArista;\n\n    if (cantidadNodos <= 1) {\n      return <h3>Deben existir al menos 2 nodos</h3>\n    }\n\n    if (nodoInicial < 0 || nodoInicial >= cantidadNodos) {\n      return <h3>El nodo inicial debe tener valores entre 0 y {cantidadNodos - 1}</h3>\n    }\n\n\n    let aristasConverted = [];\n    aristas.forEach(function callback(arista, index, array) {\n\n      if (arista.values['nodoInicial'].length > 0 && arista.values['nodoFinal'].length > 0 && arista.values['peso'] > 0) {\n        const nodoInicial = Number(arista.values['nodoInicial']);\n        const nodoFinal = Number(arista.values['nodoFinal']);\n        const peso = Number(arista.values['peso']);\n\n        console.log(nodoFinal, nodoInicial, peso);\n        if (nodoInicial >= cantidadNodos || nodoInicial < 0 || nodoFinal >= cantidadNodos || nodoFinal < 0 || Number.isNaN(nodoInicial) || Number.isNaN(nodoFinal) || Number.isNaN(peso)) {\n          error = true;\n          errorDatos = 'Los valores de los nodos pueden ir desde 0 hasta ' + (cantidadNodos - 1);\n          numeroArista = index;\n          console.log(errorDatos)\n        }\n        if (nodoInicial === nodoFinal) {\n          error = true;\n          errorDatos = 'Un nodo no puede apuntarse a sí mismo';\n        }\n        console.log(errorDatos)\n        const aristaConverted = [nodoInicial, nodoFinal, peso];\n\n        aristasConverted.push(aristaConverted);\n      }\n    });\n\n    if (error) return <Card> <h3>Error en arista A{numeroArista}:</h3><p>{errorDatos}</p></Card>\n\n    console.log('Aristas del modelo: ', aristasConverted);\n    console.log('Cantidad de nodos: ', cantidadNodos);\n\n    if (cantidadNodos > 0 && aristasConverted.length > 0 && nodoInicial >= 0) {\n      var { g, dijkstra } = rutaMasCorta(cantidadNodos, aristasConverted, nodoInicial);\n    } else {\n      return <h3>Modelo incompleto</h3>\n    }\n\n    let mostrar = [];\n    let flagNoHayCamino = true;\n\n    for (var v = 0; v < g.V; ++v) {\n      if (dijkstra.hasPathTo(v)) {\n        const path = dijkstra.pathTo(v);\n\n        if (v !== nodoInicial) {\n          mostrar.push(<h4>{`Ruta mas corta desde ${nodoInicial} a ${v}`}</h4>);\n\n          for (var i = 0; i < path.length; ++i) {\n            const e = path[i];\n            console.log(e.from() + ' => ' + e.to() + ': ' + e.weight);\n            mostrar.push(<p>{`(${e.from()} => ${e.to()}): Distancia de ${e.weight}`}</p>);\n          }\n\n          mostrar.push(<p>{`Distancia Total del Camino: ${dijkstra.distanceTo(v)}`}</p>);\n          mostrar.push(<br></br>);\n\n          flagNoHayCamino = false;\n        }\n      }\n    }\n\n    if (flagNoHayCamino) {\n      return <h3>El nodo no tiene caminos posibles</h3>\n    }\n\n    if (mostrar.length > 0) {\n      return <Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n        <CardHeader>\n          <CardTitle className=\"text-left\">\n            <h4>Resultados</h4>\n          </CardTitle>\n        </CardHeader>\n        <CardBody className=\"mx-auto\">\n          {mostrar}\n        </CardBody>\n      </Card>\n    }\n  }\n\n  render() {\n\n    return (\n      <>\n        <Card outline color=\"info\" className=\"w-100 mt-3 mx-auto\">\n          <CardHeader>\n            <CardTitle>\n              {this.mostrarResultados()}\n            </CardTitle>\n          </CardHeader>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Presentation;\n","import React from \"react\";\nimport { Container, Col, Row, Jumbotron } from \"reactstrap\";\nimport Processing from \"../Processing\";\nimport Presentation from \"./presentacion\";\nimport logo from \"../logo.svg\";\n\nclass RutaMasCorta extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: {\n        aristas: [{ xi: 0, values: { nodoInicial: \"\", nodoFinal: \"\", peso: \"\" } }, { xi: 1, values: { nodoInicial: \"\", nodoFinal: \"\", peso: \"\" } }],\n        cantidadNodos: \"0\",\n        nodoInicial: \"\"\n      }\n    };\n  }\n\n  setModel = model => this.setState({ model, changes: true });\n\n  render() {\n    let { model } = this.state;\n\n    return (\n      <Container fluid className=\"App\">\n        <Row className=\"\">\n          <Col xs={12} md={6} className=\"mx-auto\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} md={6} className=\"my-4 mx-auto \">\n            <Row>\n              <Jumbotron className='w-100'>\n                <h2>Modelos de redes:</h2>\n                <h2>Ruta Mas Corta</h2>\n              </Jumbotron>\n\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <Processing status={model} handleAristas={this.handleAristas}\n                  setModel={this.setModel} rutaMasCorta={true} />\n              </Jumbotron>\n\n            </Row>\n            <Row>\n              <Presentation model={model} />\n            </Row>\n\n          </Col>\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default RutaMasCorta;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Jumbotron, Container, Row, Col, UncontrolledPopover, PopoverBody, PopoverHeader } from \"reactstrap\";\n\n\n\nconst ModelosStock = () => {\n  useEffect(() => {\n    document.title = \"Modelos de stock\"\n  }, []);\n  return (\n    <Container fluid className=\"App\">\n      <Row className=\"\">\n        <Col xs={12} md={6} className=\"mx-auto my-5\">\n          <Jumbotron>\n            <Row>\n              <h2 className=\"mx-auto\">Modelos de stock / Modelos de inventario</h2>\n            </Row>\n            <Row >\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <Link to={\"/ModeloStock/Teoria\"}>\n                  <Button id=\"Popover\" size='lg' outline color=\"primary\">Teoría</Button>\n                </Link>\n              </Col>\n            </Row>\n            <Row className=\"mt-3 mx-auto\">\n              <Col>\n                <Link to={\"/ModeloStock/ModeloWilson\"}>\n                  <Button id=\"Popover1\" size='lg' outline color=\"success\">Modelo de Wilson</Button>\n                  <UncontrolledPopover placement=\"right\" target=\"Popover1\" trigger=\"hover\">\n                    <PopoverHeader>Otras denominaciones:</PopoverHeader>\n                    <PopoverBody>\n                      <p>Modelo simple sin agotamiento con demanda determinística y constante.</p>\n                      <p>Modelo EOQ clásico.</p>\n                      <p>Modelo EOQ básico.</p>\n                    </PopoverBody>\n                  </UncontrolledPopover>\n                </Link>\n\n              </Col>\n            </Row>\n            <Row className=\"mt-3 mx-auto\">\n              <Col>\n                <Link to={\"/ModeloStock/Modelo2\"} >\n                  <Button id=\"Popover2\" size='lg' outline color=\"success\">Modelo simple sin agotamiento y con stock de protección</Button>\n                  <UncontrolledPopover placement=\"right\" target=\"Popover2\" trigger=\"hover\">\n                    <PopoverHeader>Otras denominaciones:</PopoverHeader>\n                    <PopoverBody>\n                      <p>Modelo simple sin agotamiento con demanda determinística y constante con stock de protección.</p>\n                      <p>Modelo de demanda constante con inventario de contingencia.</p>\n                      <p>Modelo EOQ clásico con stock de protección.</p>\n                    </PopoverBody>\n                  </UncontrolledPopover>\n                </Link>\n              </Col>\n            </Row>\n\n            <Row className=\"mt-3 mx-auto\">\n              <Col>\n                <Link to={\"/ModeloStock/ModeloSimpleConAgotamiento\"} >\n                  <Button id=\"Popover3\" size='lg' outline color=\"success\">Modelo simple con agotamiento</Button>\n                  <UncontrolledPopover placement=\"right\" target=\"Popover3\" trigger=\"hover\">\n                    <PopoverHeader>Otras denominaciones:</PopoverHeader>\n                    <PopoverBody>\n                      <p>Modelo de demanda constante con agotamiento.</p>\n                      <p>Modelo simple con escasez.</p>\n                      <p>Modelo EOQ con faltantes planeados.</p>\n                    </PopoverBody>\n                  </UncontrolledPopover>\n                </Link>\n              </Col>\n            </Row>\n\n            <Row className=\"mt-3 mx-auto\">\n              <Col>\n                <Link to={\"/ModeloStock/ModeloTriangular\"} >\n                  <Button id=\"Popover4\" size='lg' outline color=\"success\">Modelo triangular</Button>\n                  <UncontrolledPopover placement=\"right\" target=\"Popover4\" trigger=\"hover\">\n                    <PopoverHeader>Otras denominaciones:</PopoverHeader>\n                    <PopoverBody>\n                      <p>Modelo de stock con producción y demanda conjunta.</p>\n                    </PopoverBody>\n                  </UncontrolledPopover>\n                </Link>\n              </Col>\n            </Row>\n\n            <Row className=\"mt-3 mx-auto\">\n              <Col>\n                <Link to={\"/ModeloStock/ModeloSimpleSinAgotamientoPorLote\"} >\n                  <Button id=\"Popover5\" size='lg' outline color=\"success\">Modelo simple sin agotamiento por lote</Button>\n                  <UncontrolledPopover placement=\"right\" target=\"Popover5\" trigger=\"hover\">\n                    <PopoverHeader>Otras denominaciones:</PopoverHeader>\n                    <PopoverBody>\n                      <p>Modelo de stock sin agotamiento con costos de compra variables de acuerdo al tamaño del lote ordenado.</p>\n                      <p>Modelo de stock sin agotamiento con Descuento por cantidad.</p>\n                      <p>Modelo EOQ con reducciones de precios.</p>\n                      <p>Modelo EOQ con descuento por cantidad.</p>\n                    </PopoverBody>\n                  </UncontrolledPopover>\n                </Link>\n              </Col>\n            </Row>\n\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  )\n};\n\nexport default ModelosStock;","import React from 'react';\nimport { InputGroupText, InputGroup, Input, InputGroupAddon } from 'reactstrap';\n\nconst Arista = props => {\n  const numero = props.d;\n  // const handleChange = e => props.handleChanges(e);\n  return (\n    <InputGroup className=\"mt-1\">\n      <InputGroupAddon addonType=\"prepend\">\n        <InputGroupText>\n          {\"b\" + numero}\n        </InputGroupText>\n      </InputGroupAddon>\n      <Input\n        name={numero}\n        placeholder=\"b\"\n        aria-label=\"b\"\n        aria-describedby=\"b\"\n        onChange={props.handleChanges}\n      />\n\n    </InputGroup>)\n\n}\n\nexport default Arista;","import React from 'react';\nimport ComponentD from './d';\n\nconst ds = props => {\n    let { ds } = props;\n\n    //Función que se encarga de manejar las modificaciones en las ds.\n    const deleteD = xi => {\n        if (ds.length > 2) {\n            ds.splice(xi, 1)\n        }\n    };\n    //Función que se encarga de manejar las modificaciones de ds.\n    const handleChangesD = (e) => {\n        const { name, value } = e.target;\n        ds[name] = value;\n        //pedimos al padre que almacene los cambios\n        props.handleDs(ds);\n    };\n    //Función que se encarga de Añadir una d si es necesario.\n    const handleNewsVar = () => {\n        if (ds.length < 20) {\n\n            var dsSinValores = 0;\n            ds.forEach(d => {\n                if (d.length === 0)\n                    dsSinValores++;\n            })\n\n            //Si la cantidad de ds Libres es igual a 0 se agrega una más.\n            if (dsSinValores === 0) {\n                ds.push('');\n                props.handleDs(ds);\n            }\n\n            if (dsSinValores > 1) {\n                deleteD(ds.length - 1);\n            }\n        }\n    };\n    handleNewsVar();\n    return ds.map(function callback(currentValue, index, array) { return <ComponentD handleChanges={handleChangesD} d={index} /> })\n}\n\nexport default ds;","import React from 'react';\nimport { InputGroupText, InputGroup, Input, InputGroupAddon } from 'reactstrap';\n\nconst Q = props => {\n  const numero = props.q;\n  // const handleChange = e => props.handleChanges(e);\n  return (\n    <InputGroup className=\"mt-1\">\n      <InputGroupAddon addonType=\"prepend\">\n        <InputGroupText>\n          {\"q\" + numero}\n        </InputGroupText>\n      </InputGroupAddon>\n      <Input\n        name={numero}\n        placeholder=\"q\"\n        aria-label=\"q\"\n        aria-describedby=\"q\"\n        onChange={props.handleChanges}\n      />\n\n    </InputGroup>)\n\n}\n\nexport default Q;","import React from 'react';\nimport ComponentQ from './q';\n\nconst qs = props => {\n    let { qs } = props;\n\n    //Función que se encarga de manejar las modificaciones en las qs.\n    const deleteD = xi => {\n        if (qs.length > 2) {\n            qs.splice(xi, 1)\n        } /*else {\n            qs[xi].values = { nodoInicial: \"\", nodoFinal: \"\", peso: \"0\" };\n        }*/\n    };\n    //Función que se encarga de manejar las modificaciones de qs.\n    const handleChangesQ = (e) => {\n        const { name, value } = e.target;\n        qs[name] = value;\n        //pedimos al padre que almacene los cambios\n        props.handleQs(qs);\n    };\n    //Función que se encarga de Añadir una d si es necesario.\n    const handleNewsVar = () => {\n        if (qs.length < 20) {\n\n            var qsSinValores = 0;\n            qs.forEach(q => {\n                if (q.length === 0)\n                    qsSinValores++;\n            })\n\n            //Si la cantidad de qs Libres es igual a 0 se agrega una más.\n            if (qsSinValores === 0) {\n                qs.push('');\n                props.handleQs(qs);\n            }\n\n            if (qsSinValores > 1) {\n                deleteD(qs.length - 1);\n            }\n        }\n    };\n    handleNewsVar();\n    return qs.map(function callback(currentValue, index, array) { return <ComponentQ handleChanges={handleChangesQ} q={index} /> })\n}\n\nexport default qs;","import React from 'react';\nimport { Input } from 'reactstrap'\n\n\nconst CampoUnitario = props => {\n    return (\n        <Input\n            placeholder={props.nombre}\n            onChange={props.handleChange}\n        />\n    )\n}\n\nexport default CampoUnitario;","import React from 'react';\nimport { Input, UncontrolledDropdown, Dropdown, DropdownMenu, DropdownItem, InputGroup, DropdownToggle, FormGroup, Label } from 'reactstrap'\n\n\nconst TiempoTotal = props => {\n    var isOpen = false;\n\n    return (\n        <InputGroup>\n            <Input\n                placeholder=\"Tiempo Total\"\n                onChange={props.handleChange}\n            />\n            <FormGroup>\n                <Input type=\"select\" name=\"select\" onChange={props.handleChangeUnit}>\n                    <option>Meses</option>\n                    <option>Años</option>\n                </Input>\n            </FormGroup>\n        </InputGroup>\n    )\n}\n\nexport default TiempoTotal;","import React from \"react\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardTitle, UncontrolledPopover, PopoverBody } from \"reactstrap\";\nimport ComponentsD from \"./Ds\";\nimport ComponentsQ from \"./Qs\";\nimport CampoUnitario from './CampoUnitarioBase';\nimport TiempoTotal from './TiempoTotal';\n\nclass Configuration extends React.Component {\n\n  handleGeneral(e, atributo) {\n    const model = this.props.status;\n    model[atributo] = e.target.value;\n    this.props.setModel(model);\n  }\n\n  handleDemanda = e => this.handleGeneral(e, 'demanda');\n\n  handleTiempoTotal = e => this.handleGeneral(e, 'tiempoTotal');\n\n  handleCostoAlm = e => this.handleGeneral(e, 'costoAlm');\n\n  handleCostoPrep = e => this.handleGeneral(e, 'costoPrep');\n\n  handleCostoProd = e => this.handleGeneral(e, 'costoProd');\n\n  handleStockProteccion = e => this.handleGeneral(e, 'stockProt');\n\n  handleDemandaUnitaria = e => this.handleGeneral(e, 'demandaUnit');\n\n  handleVelocidadProduccion = e => this.handleGeneral(e, 'velocidadProd');\n\n  handleCostoAgotamiento = e => this.handleGeneral(e, 'costoAgotamiento');\n\n  handlePorcAplicaCostoProd = e => this.handleGeneral(e, 'porcAplicaCostoProd');\n\n  handlePorcInteres = e => this.handleGeneral(e, 'porcInteres');\n\n  handleCostoPropioMercaderia = e => this.handleGeneral(e, 'costoPropioMercaderia');\n\n  handleUnidadTiempoTotal = e => this.handleGeneral(e, 'unidadTiempo');\n\n  handleDs = ds => {\n    const model = this.props.status;\n    model.d = ds;\n    this.props.setModel(model);\n  }\n\n  handleQs = qs => {\n    const model = this.props.status;\n    model.q = qs;\n    this.props.setModel(model);\n  }\n\n  columnaGenerica(titulo, nombre, handle) {\n    return (\n      <Col xs={12} md={6} className=\"my-4 mx-auto \">\n        <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n          <CardHeader>\n            <CardTitle className=\"text-left\">\n              <h4>{titulo}</h4>\n            </CardTitle>\n          </CardHeader>\n          <CardBody className=\"mx-auto\">\n            <CampoUnitario\n              nombre={nombre}\n              handleChange={handle}\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    )\n  }\n\n  sp() {\n    if (this.props.modelo2) {\n      return this.columnaGenerica('Stock de protección (sp)', 'Stock de protección', this.handleStockProteccion)\n    }\n  }\n\n  demandaUnit() {\n    if (this.props.modeloTriangular) {\n      return this.columnaGenerica('Demanda Unitaria (d) [días]', 'Demanda Unitaria', this.handleDemandaUnitaria)\n    }\n  }\n\n  costoAgotamiento() {\n    if (this.props.agotamientoSimple) {\n      return this.columnaGenerica('Costo de Agotamiento (C2)', 'Costo de Agotamiento', this.handleCostoAgotamiento)\n    }\n  }\n\n  qsyds() {\n    if (this.props.simpleSinAgot) {\n      return (\n        <Col>\n          <Row>\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\" id=\"B\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Costo de producto</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <ComponentsD\n                  ds={this.props.status.ds}\n                  handleDs={this.handleDs}\n                /></CardBody>\n            </Card>\n            <UncontrolledPopover placement=\"right\" target=\"B\" trigger=\"hover\">\n              <PopoverBody>\n                <p>Los valores de los costos de producto deben estar ordenados ascendentemente.</p>\n              </PopoverBody>\n            </UncontrolledPopover>\n          </Row>\n          <Row>\n            <Card outline color=\"secondary\" className=\"w-100 mt-3\" id=\"Q\">\n              <CardHeader>\n                <CardTitle className=\"text-left\">\n                  <h4>Limite de lotes</h4>\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <ComponentsQ\n                  qs={this.props.status.qs}\n                  handleQs={this.handleQs}\n                /></CardBody>\n            </Card>\n            <UncontrolledPopover placement=\"right\" target=\"Q\" trigger=\"hover\">\n              <PopoverBody>\n                <p>Los valores de los limites de lotes deben estar ordenados descendentemente.</p>\n              </PopoverBody>\n            </UncontrolledPopover>\n          </Row>\n        </Col>\n      )\n    }\n  }\n\n\n  velocidadProd() {\n    if (this.props.modeloTriangular) {\n      return this.columnaGenerica('Velocidad de Producción (p) [días]', 'Velocidad de Producción', this.handleVelocidadProduccion)\n    }\n  }\n\n  costoAlm() {\n    if (!this.props.simpleSinAgot) {\n      return this.columnaGenerica('Costo de Almacenamiento (C1)', 'Costo de Almacenamiento', this.handleCostoAlm)\n    }\n  }\n\n  porcInteres() {\n    if (this.props.simpleSinAgot) {\n      return this.columnaGenerica('Porcentaje de interés que se produciría con el dinero inmovilizado (p)', 'Porcentaje de interés', this.handlePorcInteres)\n    }\n  }\n\n  porcAplicaCostoProd() {\n    if (this.props.simpleSinAgot) {\n      return this.columnaGenerica('Porcentaje Aplicado a Costo de Producto', 'Porcentaje Aplicado a Costo de Producto', this.handlePorcAplicaCostoProd)\n    }\n  }\n\n  costoPropioMercaderia() {\n    if (this.props.simpleSinAgot) {\n      return this.columnaGenerica(\"Costo propio de la mercadería (C1')\", 'Costo propio de la mercadería', this.handleCostoPropioMercaderia)\n    }\n  }\n\n  costoDeProducto() {\n    if (!this.props.simpleSinAgot) {\n      return this.columnaGenerica(\"Costo de Producto (b)\", 'Costo de Producto', this.handleCostoProd)\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h3>Cargamos los datos de nuestro modelo</h3>\n        <Container>\n          <Row>\n            {this.columnaGenerica(\"Demanda (D)\", 'Demanda', this.handleDemanda)}\n\n            <Col xs={12} md={6} className=\"my-4 mx-auto \">\n              <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                <CardHeader>\n                  <CardTitle className=\"text-left\">\n                    <h4>Tiempo Total (T)</h4>\n                  </CardTitle>\n                </CardHeader>\n                <CardBody className=\"mx-auto\">\n                  <TiempoTotal\n                    nombre=\"Tiempo Total (T)\"\n                    handleChange={this.handleTiempoTotal}\n                    handleChangeUnit={this.handleUnidadTiempoTotal}\n                    selected={this.props.status.unidadTiempo}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            {this.costoAlm()}\n\n            {this.columnaGenerica(\"Costo de Preparación (K)\", 'Costo de Preparación', this.handleCostoPrep)}\n          </Row>\n\n          <Row>\n            {this.costoDeProducto()}\n\n            {this.sp()}\n            {this.demandaUnit()}\n            {this.velocidadProd()}\n            {this.costoAgotamiento()}\n\n            {this.porcInteres()}\n            {this.porcAplicaCostoProd()}\n            {this.costoPropioMercaderia()}\n\n          </Row>\n          <Row>\n            {this.qsyds()}\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Configuration;\n","import React from \"react\";\n\nfunction validar(variables) {\n    for (const prop in variables) {\n      if (variables[prop].length === 0) return <h3>Modelo incompleto</h3>;\n\n      if (prop === 'costoAlm' || prop === 'costoPrep' || prop === 'costoProd' || prop === 'costoPropioMercaderia' || prop === 'costoAgotamiento' || prop === 'tiempoTotal') {\n        variables[prop] = Number(variables[prop]);\n      } else {\n        variables[prop] = parseInt(variables[prop]);\n      }\n\n      if (Number.isNaN(variables[prop])) return <h3>No pueden existir valores no numéricos</h3>;\n      if (variables[prop] < 0) return <h3>No pueden existir números negativos</h3>;\n    }\n\n    return true;\n  }\n\nexport default validar;","import React from \"react\";\nimport { Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\nimport {\n  makeVisFlexible, LabelSeries,\n  LineSeriesCanvas, XYPlot, XAxis, YAxis,\n  HorizontalGridLines, LineSeries, AreaSeries,\n  VerticalGridLines, MarkSeries, DiscreteColorLegend\n} from 'react-vis';\nimport modelo1 from \"../Functions/modelo1\";\nimport validar from \"../Functions/Validar\";\n\nclass Presentation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n  }\n  state = {\n    useCanvas: false\n  };\n\n  plotearGrafico = () => {\n    if (this.resultado) {\n      const FlexibleGraph = makeVisFlexible(XYPlot);\n      const { useCanvas } = this.state;\n      const Line = useCanvas ? LineSeriesCanvas : LineSeries;\n      let unidad;\n      if (this.model.unidadTiempo === \"Meses\") {\n        unidad = 30;\n      } else {\n        unidad = 360;\n      }\n      const T = this.model.tiempoTotal * unidad;\n      const To = this.resultado.To * unidad;\n      const items = [];\n      const incremento = To;\n      let topey = this.resultado.qo;\n      let iniciox = 0;\n      let finx = To;\n      let finy = 0;\n      while (finx <= T) {\n        items.push(<Line\n          className=\"primera reposicion\"\n          color=\"#12939A\"\n          data={[{ x: iniciox, y: topey }, { x: finx, y: finy }]}\n        />);\n        items.push(<AreaSeries\n          className=\"area-series-example\"\n          opacity={0.25}\n          color=\"orange\"\n          data={[{ x: iniciox, y: topey }, { x: finx, y: finy }]}\n        />);\n        items.push(<Line\n          className=\"se repone\"\n          color=\"#7bc96f\"\n          data={[{ x: finx, y: 0 }, { x: finx, y: topey }]}\n        />);\n        iniciox = finx;\n        finx = finx + incremento;\n      }\n      if (finx !== T) {\n        const delta = T - (finx - incremento);\n        finx = T;\n        finy = (-this.resultado.qo / To) * delta + this.resultado.qo;\n        items.push(<Line\n          className=\"primera reposicion\"\n          color=\"#12939A\"\n          data={[{ x: iniciox, y: topey }, { x: finx, y: finy }]}\n        />);\n        items.push(<AreaSeries\n          className=\"area-series-example\"\n          opacity={0.25}\n          color=\"orange\"\n          data={[{ x: iniciox, y: topey }, { x: finx, y: finy }]}\n        />);\n      }\n      items.push(<Line\n        className=\"Tiempo total\"\n        color=\"Red\"\n        data={[{ x: T, y: 0 }, { x: T, y: topey }]}\n      />);\n      return (\n        <Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n          <CardHeader>\n            <CardTitle className=\"text-left\">\n              <h4>Cantidad de stock en función del tiempo</h4>\n            </CardTitle>\n          </CardHeader>\n          <FlexibleGraph\n            height={500}\n            margin={{ bottom: 80, left: 50, right: 10, top: 75 }}>\n            <VerticalGridLines />\n            <HorizontalGridLines />\n            <Line\n              className=\"To\"\n              color=\"blue\"\n              style={{\n                strokeLinejoin: 'round',\n                strokeWidth: 4\n              }}\n              strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n              data={[{ x: 0, y: 0 }, { x: To, y: 0 }]}\n            />\n            <MarkSeries\n              className=\"mark-series-example\"\n              strokeWidth={2}\n              sizeRange={[5, 15]}\n              data={[{ x: 0, y: this.resultado.qo, size: 5 }, { x: To, y: 0, size: 5 }]} />\n            <LabelSeries animation allowOffsetToBeReversed data={[{ x: 0, y: this.resultado.qo, label: 'qo=' + this.resultado.qo, size: 10 },\n            { x: To, y: 0, label: 'To=' + To, size: 10 }]} />\n            <XAxis title=\"tiempo\" />\n            <YAxis />\n            {items}\n            <DiscreteColorLegend style={{ position: 'absolute', left: '50px', top: '10px' }}\n              orientation=\"horizontal\"\n              items={[{ title: 'reposiciones', color: '#7bc96f' },\n              { title: 'Tiempo total', color: 'Red' },\n              { title: 'Stock', color: '#12939A' },\n              { title: 'To', color: 'blue', strokeStyle: \"dashed\" }]} />\n          </FlexibleGraph>\n        </Card>\n      );\n    }\n  }\n\n  mostrarResultados = () => {\n\n    this.resultado = null;\n\n    var { demanda, tiempoTotal, costoAlm, costoPrep, costoProd } = this.model;\n\n    const variables = { demanda, tiempoTotal, costoAlm, costoPrep, costoProd };\n\n    let valido = validar(variables);\n\n    if (valido !== true) return valido;\n\n    var { demanda, tiempoTotal, costoAlm, costoPrep, costoProd } = variables;\n\n    this.resultado = modelo1(demanda, costoPrep, costoAlm, tiempoTotal, costoProd);\n\n    const { qo, n, CTPre, CTProd, CTAlm, CTE, To, CTEo } = this.resultado;\n\n    return (\n      <Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n        <CardHeader>\n          <CardTitle className=\"text-left\">\n            <h4>Resultados</h4>\n          </CardTitle>\n        </CardHeader>\n        <CardBody className=\"mx-auto\">\n          <p>qo = {qo}</p>\n          <p>n = {n}</p>\n          <p>CTPre = {CTPre}</p>\n          <p>CTProd = {CTProd}</p>\n          <p>CTAlm = {CTAlm}</p>\n          <p>CTE = {CTE}</p>\n          <p>To = {To}</p>\n          <p>CTEo = {CTEo}</p>\n        </CardBody>\n      </Card>\n\n    )\n  }\n\n  render() {\n\n    return (\n      <>\n        {this.mostrarResultados()}\n        {this.plotearGrafico()}\n      </>\n    );\n  }\n}\n\nexport default Presentation;\n","import React from \"react\";\nimport { Container, Col, Row, Jumbotron } from \"reactstrap\";\nimport Configuration from \"../Configuration\";\nimport Presentation from \"./presentacion\";\nimport logo from \"../logo.svg\";\n\nclass ModeloWilson extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: {\n        demanda: \"\",\n        tiempoTotal: '',\n        costoAlm: '',\n        costoPrep: '',\n        costoProd: '',\n        unidadTiempo: 'Meses'\n      },\n      result: true,\n      modelsOpen: false\n    };\n  }\n\n  setModel = model => this.setState({ model, changes: true });\n\n  render() {\n    let { model } = this.state\n\n    return (\n      <Container fluid className=\"App\">\n        <Row className=\"\">\n          <Col xs={12} md={6} className=\"mx-auto\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} md={6} className=\"my-4 mx-auto \">\n            <Row>\n              <Jumbotron className='w-100'>\n                <h2>Modelos de stock:</h2>\n                <h2>Modelo de Wilson</h2>\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <Configuration status={model}\n                  handleRestricciones={this.handleRestricciones} setModel={this.setModel} />\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <Presentation model={model} />\n              </Jumbotron>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default ModeloWilson;\n","import React from \"react\";\nimport { Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\nimport {\n  makeVisFlexible, GradientDefs, LabelSeries,\n  LineSeriesCanvas, Borders, XYPlot, XAxis, YAxis,\n  HorizontalGridLines, LineSeries, AreaSeries,\n  VerticalGridLines, MarkSeries, DiscreteColorLegend, Hint\n} from 'react-vis';\nimport modelo2 from \"../Functions/modelo2\";\nimport validar from \"../Functions/Validar\";\n\nclass Presentation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n    this.modeloTransformado = null;\n    this.resultado = null;\n  }\n  state = {\n    useCanvas: false\n  };\n\n  plotearGrafico = () => {\n    if (this.resultado) {\n      const FlexibleGraph = makeVisFlexible(XYPlot);\n      const { useCanvas } = this.state;\n      const content = useCanvas ? 'TOGGLE TO SVG' : 'TOGGLE TO CANVAS';\n      const Line = useCanvas ? LineSeriesCanvas : LineSeries;\n      let unidad;\n      if (this.model.unidadTiempo === \"Meses\") {\n        unidad = 30;\n      } else {\n        unidad = 360;\n      }\n      const T = this.modeloTransformado.tiempoTotal * unidad;\n      const To = this.resultado.To * unidad;\n      const items = [];\n      const incremento = To;\n\n      let topey = this.resultado.qo + this.modeloTransformado.stockProt;\n      let iniciox = 0;\n      let finx = To;\n      let finy = this.modeloTransformado.stockProt;\n      while (finx <= T) {\n        items.push(<Line\n          className=\"primera reposicion\"\n          color=\"#12939A\"\n          data={[{ x: iniciox, y: topey }, { x: finx, y: finy }]}\n        />);\n        items.push(<AreaSeries\n          className=\"area-series-example\"\n          opacity={0.25}\n          color=\"orange\"\n          data={[{ x: iniciox, y: topey }, { x: finx, y: finy }]}\n        />);\n        items.push(<Line\n          className=\"se repone\"\n          color=\"#7bc96f\"\n          data={[{ x: finx, y: finy }, { x: finx, y: topey }]}\n        />);\n        iniciox = finx;\n        finx = finx + incremento;\n      }\n      if (finx !== T) {\n        const delta = T - (finx - incremento);\n        finx = T;\n        finy = (-this.resultado.qo / To) * delta + (this.resultado.qo + this.modeloTransformado.stockProt);\n        items.push(<Line\n          className=\"primera reposicion\"\n          color=\"#12939A\"\n          data={[{ x: iniciox, y: topey }, { x: finx, y: finy }]}\n        />);\n        items.push(<AreaSeries\n          className=\"area-series-example\"\n          opacity={0.25}\n          color=\"orange\"\n          data={[{ x: iniciox, y: topey }, { x: finx, y: finy }]}\n        />);\n      }\n      items.push(<Line\n        className=\"Tiempo total\"\n        color=\"Red\"\n        data={[{ x: finx, y: 0 }, { x: finx, y: topey }]}\n      />);\n      return (\n        <Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n          <CardHeader>\n            <CardTitle className=\"text-left\">\n              <h4>Cantidad de stock en función del tiempo</h4>\n            </CardTitle>\n          </CardHeader>\n          <FlexibleGraph\n            height={500}\n            margin={{ bottom: 80, left: 50, right: 10, top: 75 }}>\n            <VerticalGridLines />\n            <HorizontalGridLines />\n            <Line\n              className=\"To\"\n              color=\"blue\"\n              style={{\n                strokeLinejoin: 'round',\n                strokeWidth: 4\n              }}\n              strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n              data={[{ x: 0, y: 0 }, { x: To, y: 0 }]}\n            />\n            <MarkSeries\n              className=\"mark-series-example\"\n              strokeWidth={2}\n              sizeRange={[5, 15]}\n              data={[{ x: 0, y: (this.resultado.qo + this.modeloTransformado.stockProt), size: 5 }, { x: To, y: 0, size: 5 }]} />\n            <LabelSeries animation allowOffsetToBeReversed data={[{ x: 0, y: (this.resultado.qo + this.modeloTransformado.stockProt), label: 'qo=' + this.resultado.qo, size: 10 },\n            { x: To, y: 0, label: 'To=' + To, size: 10 },\n            { x: 0, y: this.modeloTransformado.stockProt, label: 'sp=' + this.modeloTransformado.stockProt, size: 10 }]} />\n            <Line\n              className=\"qo\"\n              color=\"red\"\n              strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n              style={{\n                strokeLinejoin: 'round',\n                strokeWidth: 4\n              }}\n              data={[{ x: 0, y: this.modeloTransformado.stockProt }, { x: 0, y: (this.resultado.qo + this.modeloTransformado.stockProt) }]}\n            />\n            <Line\n              className=\"sp\"\n              color=\"green\"\n              style={{\n                strokeLinejoin: 'round',\n                strokeWidth: 4\n              }}\n              strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n              data={[{ x: 0, y: this.modeloTransformado.stockProt }, { x: T, y: this.modeloTransformado.stockProt }]}\n            />\n            <XAxis title=\"tiempo\" />\n            <YAxis />\n            {items}\n            <DiscreteColorLegend style={{ position: 'absolute', left: '50px', top: '10px' }}\n              orientation=\"horizontal\"\n              items={[{ title: 'reposiciones', color: '#7bc96f' },\n              { title: 'Tiempo total', color: 'Red' },\n              { title: 'Stock', color: '#12939A' },\n              { title: 'To', color: 'blue', strokeStyle: \"dashed\" },\n              { title: 'Stock de Proteccion', color: 'green', strokeStyle: \"dashed\" },\n              { title: 'qo', color: 'red', strokeStyle: \"dashed\" }]} />\n          </FlexibleGraph>\n        </Card>\n      );\n    }\n  }\n\n  mostrarResultados = () => {\n\n    this.resultado = null;\n\n    var { demanda, tiempoTotal, costoAlm, costoPrep, costoProd, stockProt } = this.model;\n\n    const variables = { demanda, tiempoTotal, costoAlm, costoPrep, costoProd, stockProt }\n\n    let valido = validar(variables);\n\n    if (valido !== true) return valido;\n\n    var { demanda, tiempoTotal, costoAlm, costoPrep, costoProd, stockProt } = variables;\n\n    this.modeloTransformado = variables;\n\n    this.resultado = modelo2(demanda, costoPrep, costoProd, costoAlm, tiempoTotal, stockProt);\n\n    const { qo, n, ctprep, ctprod, ctalm, casp, cmsp, cte, To, cteo } = this.resultado;\n    return (\n      <Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n        <CardHeader>\n          <CardTitle className=\"text-left\">\n            <h4>Resultados</h4>\n          </CardTitle>\n        </CardHeader>\n        <CardBody className=\"mx-auto\">\n          <p>qo = {qo}</p>\n          <p>n = {n}</p>\n          <p>ctprep = {ctprep}</p>\n          <p>ctprod = {ctprod}</p>\n          <p>ctalm = {ctalm}</p>\n          <p>casp = {casp}</p>\n          <p>cmsp = {cmsp}</p>\n          <p>cte = {cte}</p>\n          <p>To = {To}</p>\n          <p>cteo = {cteo}</p>\n        </CardBody>\n      </Card>)\n  }\n\n  render() {\n    return (\n      <>\n        {this.mostrarResultados()}\n        {this.plotearGrafico()}\n      </>\n    );\n  }\n}\n\nexport default Presentation;\n","import React from \"react\";\nimport { Container, Col, Row, Jumbotron } from \"reactstrap\";\nimport Configuration from \"../Configuration\";\nimport Presentation from \"./presentacion\";\nimport logo from \"../logo.svg\";\n\nclass Modelo2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: {\n        demanda: \"\",\n        tiempoTotal: '',\n        costoAlm: '',\n        costoPrep: '',\n        costoProd: '',\n        stockProt: '',\n        unidadTiempo: 'Meses'\n      },\n      result: true,\n      modelsOpen: false\n    };\n  }\n\n  setModel = model => this.setState({ model, changes: true });\n\n  render() {\n    let { model } = this.state\n\n    return (\n      <Container fluid className=\"App\">\n        <Row className=\"\">\n          <Col xs={12} md={6} className=\"mx-auto\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} md={6} className=\"my-4 mx-auto \">\n            <Row>\n              <Jumbotron className='w-100'>\n                <h2>Modelos de stock:</h2>\n                <h2>Modelo simple sin agotamiento y con stock de protección</h2>\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <Configuration status={model}\n                  handleRestricciones={this.handleRestricciones} setModel={this.setModel}\n                  modelo2={true} />\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <Presentation model={model} />\n              </Jumbotron>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Modelo2;\n","import React from \"react\";\nimport { Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\nimport modeloTriangular from \"../Functions/ModeloTriangular\";\nimport {\n  makeVisFlexible, LabelSeries,\n  LineSeriesCanvas, XYPlot, XAxis, YAxis,\n  HorizontalGridLines, LineSeries, AreaSeries,\n  VerticalGridLines, MarkSeries, DiscreteColorLegend\n} from 'react-vis';\nimport validar from \"../Functions/Validar\";\n\nclass Presentation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n    this.resultado = null;\n  }\n  state = {\n    useCanvas: false\n  };\n\n  plotearGrafico = () => {\n    if (this.resultado) {\n      const FlexibleGraph = makeVisFlexible(XYPlot);\n      const { useCanvas } = this.state;\n      const Line = useCanvas ? LineSeriesCanvas : LineSeries;\n      //ver lo de tiempo\n      let unidad;\n      if (this.model.unidadTiempo === \"Meses\") {\n        unidad = 30;\n      } else {\n        unidad = 360;\n      }\n      const T = this.model.tiempoTotal * unidad;\n      const To = this.resultado.To * unidad;\n      const items = [];\n      const incremento = To;\n      let topey = this.resultado.sm;\n      let iniciox = 0;\n      let finx = To;\n      let middlex = this.resultado.Tp;\n      let finy = 0;\n      while (finx <= T) {\n        items.push(<Line\n          className=\"utilizacionyFabricacion\"\n          color=\"#12939A\"\n          data={[{ x: iniciox, y: 0 }, { x: middlex, y: topey }]}\n        />);\n        items.push(<Line\n          className=\"utilizacion\"\n          color=\"#7bc96f\"\n          data={[{ x: middlex, y: topey }, { x: finx, y: 0 }]}\n        />);\n        items.push(<AreaSeries\n          className=\"area-series-example\"\n          opacity={0.25}\n          color=\"orange\"\n          data={[{ x: iniciox, y: 0 }, { x: middlex, y: topey }, { x: finx, y: 0 }, { x: iniciox, y: 0 }]}\n        />);\n        items.push(<Line\n          className=\"maximoStock\"\n          color=\"brown\"\n          strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n          data={[{ x: middlex, y: finy }, { x: middlex, y: topey }]}\n        />);\n        iniciox = finx;\n        middlex = middlex + incremento;\n        finx = finx + incremento;\n      }\n      if (finx !== T) {\n        let delta = T - (finx - incremento);\n        if (delta > this.resultado.Tp) {\n          delta = delta - this.resultado.Tp;\n          finx = T;\n          finy = (-this.resultado.sm / (To - this.resultado.Tp)) * delta + this.resultado.sm;\n          items.push(<Line\n            className=\"utilizacionyFabricacion\"\n            color=\"#12939A\"\n            data={[{ x: iniciox, y: 0 }, { x: middlex, y: topey }]}\n          />);\n          items.push(<AreaSeries\n            className=\"area-series-example\"\n            opacity={0.25}\n            color=\"orange\"\n            data={[{ x: iniciox, y: 0 }, { x: middlex, y: topey }, { x: finx, y: finy },{ x: finx, y: 0 }, { x: iniciox, y: 0 }]}\n          />);\n          items.push(<Line\n            className=\"maximoStock\"\n            color=\"brown\"\n            strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n            data={[{ x: middlex, y: 0 }, { x: middlex, y: topey }]}\n          />);\n          items.push(<Line\n            className=\"utilizacion\"\n            color=\"#7bc96f\"\n            data={[{ x: middlex, y: topey }, { x: finx, y: finy }]}\n          />);\n        } else {\n          if (delta < this.resultado.Tp) {\n            finx = T;\n            finy = (this.resultado.sm / this.resultado.Tp) * delta;\n          }\n          items.push(<Line\n            className=\"utilizacionyFabricacion\"\n            color=\"#12939A\"\n            data={[{ x: iniciox, y: 0 }, { x: finx, y: finy }]}\n          />);\n          items.push(<AreaSeries\n            className=\"area-series-example\"\n            opacity={0.25}\n            color=\"orange\"\n            data={[{ x: iniciox, y: 0 }, { x: finx, y: finy }, { x: finx, y: 0 },{ x: iniciox, y: 0 }]}\n          />);\n        }\n      }\n      items.push(<Line\n        className=\"Tiempo total\"\n        color=\"Red\"\n        data={[{ x: T, y: 0 }, { x: T, y: topey }]}\n      />);\n      return (\n        <Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n          <CardHeader>\n            <CardTitle className=\"text-left\">\n              <h4>Cantidad de stock en función del tiempo</h4>\n            </CardTitle>\n          </CardHeader>\n          <FlexibleGraph\n            height={500}\n            margin={{ bottom: 80, left: 50, right: 10, top: 75 }}>\n            <VerticalGridLines />\n            <HorizontalGridLines />\n            <Line\n              className=\"qo\"\n              color=\"black\"\n              strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n              style={{\n                strokeLinejoin: 'round',\n                strokeWidth: 4\n              }}\n              data={[{ x: 0, y: 0 }, { x: 0, y: this.resultado.qo }]}\n            />\n            <Line\n              className=\"To\"\n              color=\"blue\"\n              style={{\n                strokeLinejoin: 'round',\n                strokeWidth: 4\n              }}\n              strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n              data={[{ x: 0, y: -50 }, { x: To, y: -50 }]}\n            />\n            <Line\n              className=\"T1\"\n              color=\"green\"\n              style={{\n                strokeLinejoin: 'round',\n                strokeWidth: 4\n              }}\n              strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n              data={[{ x: 0, y: 0 }, { x: this.resultado.Tp, y: 0 }]}\n            />\n            <MarkSeries\n              className=\"mark-series-example\"\n              strokeWidth={2}\n              sizeRange={[5, 15]}\n              data={[{ x: 0, y: this.resultado.qo, size: 5 }, { x: this.resultado.Tp, y: topey, size: 5 }, { x: To, y: 0, size: 5 }, { x: this.resultado.Tp, y: 0, size: 5 }]} />\n            <LabelSeries animation allowOffsetToBeReversed\n              data={[{ x: 0, y: this.resultado.qo, label: 'qo=' + this.resultado.qo, size: 10 },\n              { x: this.resultado.Tp, y: topey, label: 'sm=' + this.resultado.sm, size: 10 },\n              { x: To, y: -50, label: 'To=' + To, size: 10 },\n              { x: this.resultado.Tp, y: 0, label: 'Tp=' + this.resultado.Tp, size: 10 }]}\n              labelAnchorX=\"start\" />\n            <XAxis title=\"tiempo\" />\n            <YAxis />\n            {items}\n            <DiscreteColorLegend style={{ position: 'absolute', left: '50px', top: '10px' }}\n              orientation=\"horizontal\"\n              items={[{ title: 'Utilizacion', color: '#7bc96f' },\n              { title: 'Tiempo total', color: 'Red' },\n              { title: 'Utilizacion y fabricacion', color: '#12939A' },\n              { title: 'sm', color: 'brown', strokeStyle: \"dashed\" },\n              { title: 'To', color: 'blue', strokeStyle: \"dashed\" },\n              { title: 'Tp', color: 'green', strokeStyle: \"dashed\" },\n              { title: 'qo', color: 'black', strokeStyle: \"dashed\" }]} />\n          </FlexibleGraph>\n        </Card>\n      );\n    }\n  }\n\n  mostrarResultados = () => {\n\n    this.resultado = null;\n\n    var { demanda, tiempoTotal, costoAlm, costoPrep, costoProd, demandaUnit, velocidadProd } = this.model;\n\n    const variables = { demanda, tiempoTotal, costoAlm, costoPrep, costoProd, demandaUnit, velocidadProd };\n\n    let valido = validar(variables);\n\n    if (valido !== true) return valido;\n\n    var { demanda, tiempoTotal, costoAlm, costoPrep, costoProd, demandaUnit, velocidadProd } = variables;\n\n    this.resultado = modeloTriangular(demanda, costoPrep, costoProd, velocidadProd, tiempoTotal, costoAlm, demandaUnit);\n\n    const { qo, n, ctprep, ctprod, ctalm, cte, To, Tp, sm } = this.resultado;\n\n    return (\n      <Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n        <CardHeader>\n          <CardTitle className=\"text-left\">\n            <h4>Resultados</h4>\n          </CardTitle>\n        </CardHeader>\n        <CardBody className=\"mx-auto\">\n          <p>qo = {qo}</p>\n          <p>n = {n}</p>\n          <p>ctprep = {ctprep}</p>\n          <p>ctprod = {ctprod}</p>\n          <p>ctalm = {ctalm}</p>\n          <p>cte = {cte}</p>\n          <p>To = {To}</p>\n          <p>Tp = {Tp}</p>\n          <p>sm = {sm}</p>\n        </CardBody>\n      </Card>)\n  }\n\n  render() {\n\n    return (\n      <>\n        {this.mostrarResultados()}\n        {this.plotearGrafico()}\n      </>\n    );\n  }\n}\n\nexport default Presentation;\n","import React from \"react\";\nimport { Container, Col, Row, Jumbotron } from \"reactstrap\";\nimport Configuration from \"../Configuration\";\nimport Presentation from \"./presentacion\";\nimport logo from \"../logo.svg\";\n\nclass ArbolMinimaExpansion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: {\n        demanda: \"\",\n        tiempoTotal: '',\n        costoAlm: '',\n        costoPrep: '',\n        costoProd: '',\n        demandaUnit: '',\n        velocidadProd: '',\n        unidadTiempo: 'Meses'\n      },\n      result: true,\n      modelsOpen: false\n    };\n  }\n\n  setModel = model => this.setState({ model, changes: true });\n\n  render() {\n    let { model } = this.state\n\n    return (\n      <Container fluid className=\"App\">\n        <Row className=\"\">\n          <Col xs={12} md={6} className=\"mx-auto\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} md={6} className=\"my-4 mx-auto \">\n            <Row>\n              <Jumbotron className='w-100'>\n                <h2>Modelos de stock:</h2>\n                <h2>Modelo Triangular</h2>\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <Configuration status={model}\n                  setModel={this.setModel}\n                  modeloTriangular={true} />\n              </Jumbotron>\n\n            </Row>\n\n            <Row>\n              <Jumbotron className='w-100'>\n                <Presentation model={model} />\n              </Jumbotron>\n\n            </Row>\n\n          </Col>\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default ArbolMinimaExpansion;\n","import React from \"react\";\nimport { Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\nimport {\n  makeVisFlexible, LabelSeries,\n  LineSeriesCanvas, XYPlot, XAxis, YAxis,\n  HorizontalGridLines, LineSeries, AreaSeries,\n  VerticalGridLines, MarkSeries, DiscreteColorLegend\n} from 'react-vis';\nimport modeloSconAgotamiento from \"../Functions/ModeloSimpleConAgotamiento\";\nimport validar from \"../Functions/Validar\";\n\nclass Presentation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n  }\n  state = {\n    useCanvas: false\n  };\n\n  plotearGrafico = () => {\n    if (this.resultado) {\n      const FlexibleGraph = makeVisFlexible(XYPlot);\n      const { useCanvas } = this.state;\n      const Line = useCanvas ? LineSeriesCanvas : LineSeries;\n      //ver lo de tiempo\n      let unidad;\n      if (this.model.unidadTiempo === \"Meses\") {\n        unidad = 30;\n      } else {\n        unidad = 360;\n      }\n      const T = this.model.tiempoTotal * unidad;\n      const To = this.resultado.To * unidad;\n      const T1 = this.resultado.T1 * unidad;\n      const T2 = this.resultado.T2 * unidad;\n      const items = [];\n      const incremento = To;\n      let middlex = T1;\n      let topey = this.resultado.so;\n      let iniciox = 0;\n      let finx = To;\n      const bottomy = this.resultado.so - this.resultado.qo;\n      let finy = bottomy;\n      while (finx <= T) {\n        items.push(<Line\n          className=\"primera reposicion\"\n          color=\"#12939A\"\n          data={[{ x: iniciox, y: topey }, { x: finx, y: finy }]}\n        />);\n        items.push(<AreaSeries\n          className=\"area-series-example\"\n          opacity={0.25}\n          color=\"orange\"\n          data={[{ x: iniciox, y: 0 },{ x: iniciox, y: topey }, { x: middlex, y: 0 }, { x: iniciox, y: 0 }]}\n        />);\n        items.push(<AreaSeries\n          className=\"area-series-example\"\n          opacity={0.25}\n          color=\"red\"\n          data={[{ x: middlex, y: 0 },{ x: finx, y: finy }, { x: finx, y: 0 }, { x: middlex, y: 0 }]}\n        />);\n        items.push(<Line\n          className=\"se repone\"\n          color=\"#7bc96f\"\n          data={[{ x: finx, y: finy }, { x: finx, y: topey }]}\n        />);\n        iniciox = finx;\n        finx = finx + incremento;\n        middlex = middlex + incremento;\n      }\n      if (finx !== T) {\n        const delta = T - (finx - incremento);\n        finx = T;\n        finy = (-this.resultado.so / T1) * delta + this.resultado.so;\n        if (delta > T1){\n          items.push(<Line\n          className=\"primera reposicion\"\n          color=\"#12939A\"\n          data={[{ x: iniciox, y: topey }, { x: finx, y: finy }]}\n          />);\n          items.push(<AreaSeries\n            className=\"area-series-example\"\n            opacity={0.25}\n            color=\"orange\"\n            data={[{ x: iniciox, y: 0 },{ x: iniciox, y: topey }, { x: middlex, y: 0 }, { x: iniciox, y: 0 }]}\n          />);\n          items.push(<AreaSeries\n            className=\"area-series-example\"\n            opacity={0.25}\n            color=\"red\"\n            data={[{ x: middlex, y: 0 },{ x: finx, y: finy }, { x: finx, y: 0 }, { x: middlex, y: 0 }]}\n          />);\n        } else {\n          middlex = T;\n          items.push(<Line\n          className=\"primera reposicion\"\n          color=\"#12939A\"\n          data={[{ x: iniciox, y: topey }, { x: finx, y: finy }]}\n          />);\n          items.push(<AreaSeries\n            className=\"area-series-example\"\n            opacity={0.25}\n            color=\"orange\"\n            data={[{ x: iniciox, y: 0 },{ x: iniciox, y: topey }, { x: middlex, y: finy }, { x: middlex, y: 0 },{ x: iniciox, y: 0 }]}\n          />);\n        }\n        \n      }\n      items.push(<Line\n        className=\"Tiempo total\"\n        color=\"Red\"\n        data={[{ x: T, y: 0 }, { x: T, y: topey }]}\n      />);\n      return (\n        <Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n          <CardHeader>\n            <CardTitle className=\"text-left\">\n              <h4>Cantidad de stock en función del tiempo</h4>\n            </CardTitle>\n          </CardHeader>\n          <FlexibleGraph\n            height={500}\n            margin={{ bottom: 80, left: 50, right: 10, top: 75 }}>\n            <VerticalGridLines />\n            <HorizontalGridLines />\n            <Line\n              className=\"qo\"\n              color=\"red\"\n              style={{\n                strokeLinejoin: 'round',\n                strokeWidth: 4\n              }}\n              strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n              data={[{ x: 0, y: bottomy }, { x: 0, y: this.resultado.so }]}\n            />\n            <Line\n              className=\"To\"\n              color=\"blue\"\n              style={{\n                strokeLinejoin: 'round',\n                strokeWidth: 4\n              }}\n              strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n              data={[{ x: 0, y: bottomy }, { x: To, y: bottomy }]}\n            />\n            <Line\n              className=\"T1\"\n              color=\"yellow\"\n              style={{\n                strokeLinejoin: 'round',\n                strokeWidth: 4\n              }}\n              strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n              data={[{ x: 0, y: 0 }, { x: T1, y: 0 }]}\n            />\n            <Line\n              className=\"T2\"\n              color=\"green\"\n              style={{\n                strokeLinejoin: 'round',\n                strokeWidth: 4\n              }}\n              strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n              data={[{ x: T1, y: 0 }, { x: T1 + T2, y: 0 }]}\n            />\n            <MarkSeries\n              className=\"mark-series-example\"\n              strokeWidth={2}\n              sizeRange={[5, 15]}\n              data={[{ x: 0, y: this.resultado.so, size: 5 }, { x: To, y: bottomy, size: 5 }, { x: T1, y: 0, size: 5 }, { x: T1 + T2, y: 0, size: 5 }]} />\n            <LabelSeries animation allowOffsetToBeReversed\n              data={[{ x: 0, y: this.resultado.so, label: 'so=' + this.resultado.so, size: 10 },\n              { x: To, y: bottomy, label: 'To=' + To, size: 10 },\n              { x: T1, y: 0, label: 'T1=' + T1, size: 10 },\n              { x: T1 + T2, y: -15, label: 'T2=' + T2, size: 10 }]}\n              labelAnchorX=\"start\" />\n            <XAxis title=\"tiempo\" />\n            <YAxis />\n            {items}\n            <DiscreteColorLegend style={{ position: 'absolute', left: '50px', top: '10px' }}\n              orientation=\"horizontal\"\n              items={[{ title: 'reposiciones', color: '#7bc96f' },\n              { title: 'Tiempo total', color: 'Red' },\n              { title: 'Stock', color: '#12939A' },\n              { title: 'To', color: 'blue', strokeStyle: \"dashed\" },\n              { title: 'T1', color: 'yellow', strokeStyle: \"dashed\" },\n              { title: 'T2', color: 'green', strokeStyle: \"dashed\" },\n              { title: 'qo', color: 'red', strokeStyle: \"dashed\" }]} />\n          </FlexibleGraph>\n        </Card>\n      );\n    }\n  }\n\n  mostrarResultados = () => {\n\n    this.resultado = null;\n\n    var { demanda, tiempoTotal, costoAlm, costoPrep, costoProd, costoAgotamiento } = this.model;\n\n    const variables = { demanda, tiempoTotal, costoAlm, costoPrep, costoProd, costoAgotamiento }\n\n    let valido = validar(variables);\n\n    if (valido !== true) return valido;\n\n    var { demanda, tiempoTotal, costoAlm, costoPrep, costoProd, costoAgotamiento } = variables;\n\n    this.resultado = modeloSconAgotamiento(demanda, costoPrep, costoProd, tiempoTotal, costoAlm, costoAgotamiento);\n\n    const { qo, n, ctprep, ctprod, ctalm, ca, cte, so, To, T1, T2, cteo } = this.resultado\n\n    return <Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"text-left\">\n          <h4>Resultados</h4>\n        </CardTitle>\n      </CardHeader>\n      <CardBody className=\"mx-auto\">\n        <p>qo = {qo}</p>\n        <p>n = {n}</p>\n        <p>ctprep = {ctprep}</p>\n        <p>ctprod = {ctprod}</p>\n        <p>ctalm = {ctalm}</p>\n        <p>ca = {ca}</p>\n        <p>cte = {cte}</p>\n        <p>so = {so}</p>\n        <p>To = {To}</p>\n        <p>cteo = {cteo}</p>\n      </CardBody>\n    </Card>\n  }\n\n  render() {\n\n    return (\n      <>\n        {this.mostrarResultados()}\n        {this.plotearGrafico()}\n      </>\n    );\n  }\n}\n\nexport default Presentation;\n","import React from \"react\";\nimport { Container, Col, Row, Jumbotron } from \"reactstrap\";\nimport Configuration from \"../Configuration\";\nimport Presentation from \"./presentacion\";\nimport logo from \"../logo.svg\";\n\nclass ModeloAgotamientoSimple extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: {\n        demanda: \"\",\n        tiempoTotal: '',\n        costoAlm: '',\n        costoPrep: '',\n        costoProd: '',\n        costoAgotamiento: '',\n        unidadTiempo: 'Meses'\n      },\n      result: true,\n      modelsOpen: false\n    };\n  }\n\n  setModel = model => this.setState({ model, changes: true });\n\n  render() {\n    let { model } = this.state\n\n    return (\n      <Container fluid className=\"App\">\n        <Row className=\"\">\n          <Col xs={12} md={6} className=\"mx-auto\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} md={6} className=\"my-4 mx-auto \">\n            <Row>\n              <Jumbotron className='w-100'>\n                <h2>Modelos de stock:</h2>\n                <h2>Modelo Agotamiento Simple</h2>\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <Configuration status={model}\n                  setModel={this.setModel}\n                  agotamientoSimple={true} />\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <Presentation model={model} />\n              </Jumbotron>\n            </Row>\n          </Col>\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default ModeloAgotamientoSimple;\n","import React from \"react\";\nimport { Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\nimport modelo5 from \"../Functions/ModeloSimpleSinAgotamientoPorLote\";\nimport validar from \"../Functions/Validar\";\nimport {\n  makeVisFlexible, LabelSeries,\n  LineSeriesCanvas, XYPlot, XAxis, YAxis,\n  HorizontalGridLines, LineSeries, AreaSeries,\n  VerticalGridLines, MarkSeries, DiscreteColorLegend\n} from 'react-vis';\n\nclass Presentation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n    /*this.model.demanda=25000;\n    this.model.tiempoTotal=1;\n    this.model.porcAplicaCostoProd=45;\n    this.model.costoPrep=18000;\n    this.model.ds=[5.7,5.8,6];\n    this.model.qs=[30000,10000,0];\n    this.model.costoPropioMercaderia=0;\n    this.model.porcInteres=3;\n    this.model.unidadTiempo = \"Años\";*/\n  }\n  state = {\n    useCanvas: false\n  };\n  plotearGraficoCostoPorLimite = () => {\n    if (this.resultado) {\n      const FlexibleGraph = makeVisFlexible(XYPlot);\n      const { useCanvas } = this.state;\n      const Line = useCanvas ? LineSeriesCanvas : LineSeries;\n      //ver lo de tiempo\n      let unidad;\n      if (this.model.unidadTiempo === \"Meses\") {\n        unidad = 30;\n      } else {\n        unidad = 360;\n      }\n      const items = [];\n      let iniciox;\n      let finx;\n      const bi = this.resultado.bTransformado;\n      const qi = this.resultado.qTransformado;\n      for (var i = (this.resultado.bTransformado.length) - 1; i >= 0; i--) {\n        iniciox = qi[i];\n        if (i - 1 >= 0) {\n          finx = qi[i - 1];\n        } else {\n          finx = qi[i] * 2;\n        }\n        items.push(<Line\n          className=\"costoproducto\"\n          color=\"#12939A\"\n          data={[{ x: iniciox, y: bi[i] }, { x: finx, y: bi[i] }]}\n        />);\n        items.push(<Line\n          className=\"linea\"\n          color=\"#7bc96f\"\n          strokeDasharray={useCanvas ? [7, 3] : '7, 3'}\n          data={[{ x: finx, y: 0 }, { x: finx, y: bi[i] }]}\n        />);\n        items.push(<AreaSeries\n          className=\"area-series-example\"\n          opacity={0.25}\n          color=\"orange\"\n          data={[{ x: iniciox, y: bi[i] }, { x: finx, y: bi[i] }]}\n        />);\n        items.push(<MarkSeries\n          className=\"mark-series-example\"\n          strokeWidth={2}\n          sizeRange={[5, 15]}\n          data={[{ x: iniciox, y: 0, size: 5 }]} />);\n        items.push(<LabelSeries animation allowOffsetToBeReversed\n          data={[{ x: iniciox, y: 0, label: 'qi=' + iniciox, size: 10 }]}\n          labelAnchorX=\"start\" />);\n      }\n      return (\n        <Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n          <CardHeader>\n            <CardTitle className=\"text-left\">\n              <h4>Precio en función a la cantidad a provisionar</h4>\n            </CardTitle>\n          </CardHeader>\n          <FlexibleGraph\n            height={500}\n            margin={{ bottom: 80, left: 50, right: 10, top: 75 }}>\n            <VerticalGridLines />\n            <HorizontalGridLines />\n            <XAxis title=\"q\" />\n            <YAxis />\n            <MarkSeries\n              className=\"mark-series-example\"\n              strokeWidth={2}\n              sizeRange={[5, 15]}\n              data={[{ x: this.resultado.qo, y: this.resultado.cprod, size: 5 }]} />\n            <LabelSeries animation allowOffsetToBeReversed\n              data={[{ x: this.resultado.qo, y: this.resultado.cprod, label: 'qo=' + this.resultado.qo+' b='+this.resultado.cprod, size: 10 }]}\n              labelAnchorX=\"start\" />\n            {items}\n            <DiscreteColorLegend style={{ position: 'absolute', left: '50px', top: '10px' }}\n              orientation=\"horizontal\"\n              items={[{ title: 'limite', color: '#7bc96f' },\n              { title: 'Costo del producto', color: '#12939A' }]} />\n          </FlexibleGraph>\n        </Card>\n      );\n    }\n  }\n  mostrarResultados = () => {\n\n    this.resultado = null;\n\n    var { demanda, tiempoTotal, porcAplicaCostoProd, costoPrep, ds, qs, costoPropioMercaderia, porcInteres } = this.model;\n\n    const variables = { demanda, tiempoTotal, porcAplicaCostoProd, costoPrep, costoPropioMercaderia, porcInteres };\n\n    let valido = validar(variables);\n\n    if (valido !== true) return valido;\n\n    var { demanda, tiempoTotal, porcAplicaCostoProd, costoPrep, costoPropioMercaderia, porcInteres } = variables;\n\n    console.log(variables);\n\n    porcAplicaCostoProd = porcAplicaCostoProd / 100;\n    porcInteres = porcInteres / 100;\n\n    ds = ds.filter(d => {\n      if (d.length === 0) {\n        return false;\n      }\n      return true;\n    });\n\n    qs = qs.filter(q => {\n      if (q.length === 0) {\n        return false;\n      }\n      return true;\n    });\n\n    if (ds.length !== qs.length) {\n      return <h3>La cantidad de b's debe ser igual a la cantidad de q's</h3>\n    }\n\n    if (ds.length === 0 || qs.length === 0) return <h3>Modelo incompleto</h3>\n\n    const bTransformado = ds.map(d => Number(d));\n    const qTransformado = qs.map(q => parseInt(q));\n\n    if (ds.length !== bTransformado.filter(b => {\n      if (Number.isNaN(b)) {\n        return false;\n      }\n      return true;\n    }).length) {\n      return <h3>Valores no numericos</h3>\n    };\n\n    if (qs.length !== qTransformado.filter(q => {\n      if (Number.isNaN(q)) {\n        return false;\n      }\n      return true;\n    }).length) {\n      return <h3>Valores no numericos</h3>\n    };\n    this.resultado = modelo5(demanda, qTransformado, costoPrep, porcAplicaCostoProd, tiempoTotal, porcInteres, bTransformado, costoPropioMercaderia);\n    this.resultado[\"bTransformado\"] = bTransformado;\n    this.resultado[\"qTransformado\"] = qTransformado;\n    const { n, To, ctprep, ctprod, ctalm, cte, qo, liminf, cprod } = this.resultado;\n\n    return (\n      <Card outline color=\"secondary\" className=\"w-100 mt-3 mx-auto\">\n        <CardHeader>\n          <CardTitle className=\"text-left\">\n            <h4>Resultados</h4>\n          </CardTitle>\n        </CardHeader>\n        <CardBody className=\"mx-auto\">\n          <p>n = {n}</p>\n          <p>To = {To}</p>\n          <p>ctprep = {ctprep}</p>\n          <p>ctprod = {ctprod}</p>\n          <p>ctalm = {ctalm}</p>\n          <p>cte = {cte}</p>\n          <p>qo = {qo}</p>\n          <p>liminf = {liminf}</p>\n          <p>cprod = {cprod}</p>\n        </CardBody>\n      </Card>)\n  }\n\n  render() {\n\n    return (\n      <>\n        {this.mostrarResultados()}\n        {this.plotearGraficoCostoPorLimite()}\n      </>\n    );\n  }\n}\n\nexport default Presentation;\n","import React from \"react\";\nimport { Container, Col, Row, Jumbotron } from \"reactstrap\";\nimport Configuration from \"../Configuration\";\nimport Presentation from \"./presentacion\";\nimport logo from \"../logo.svg\";\n\nclass ArbolMinimaExpansion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: {\n        demanda: \"\",\n        tiempoTotal: '',\n        costoPrep: '',\n        ds: ['', ''],\n        qs: ['', ''],\n        porcAplicaCostoProd: '',\n        porcInteres: '',\n        costoPropioMercaderia: '',\n        unidadTiempo: 'Meses'\n      },\n      result: true,\n      modelsOpen: false\n    };\n  }\n\n  setModel = model => this.setState({ model, changes: true });\n\n  render() {\n    let { model } = this.state\n\n    return (\n      <Container fluid className=\"App\">\n        <Row className=\"\">\n          <Col xs={12} md={6} className=\"mx-auto\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"200\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} md={6} className=\"my-4 mx-auto \">\n            <Row>\n              <Jumbotron className='w-100'>\n                <h2>Modelos de stock:</h2>\n                <h2>Modelo Simple Sin Agotamiento Por Lote</h2>\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <Configuration status={model}\n                  setModel={this.setModel}\n                  simpleSinAgot={true} />\n              </Jumbotron>\n            </Row>\n\n            <Row>\n              <Jumbotron className='w-100'>\n                <Presentation model={model} />\n              </Jumbotron>\n\n            </Row>\n\n          </Col>\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default ArbolMinimaExpansion;\n","import React from \"react\";\nimport { Container, Col, Row, Jumbotron, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\n\nclass StockTeoria extends React.Component {\n  render() {\n    return (\n      <Container fluid className=\"App\">\n\n        <Row>\n          <Col xs={12} md={6} className=\"my-4 mx-auto \">\n            <Row>\n              <Jumbotron className='w-100'>\n                <h2 className=\"mx-auto\">Modelos de stock / Modelos de inventario</h2>\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>Objetivos</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                  <ul>\n                    <li>Determinar el lote óptimo de compra de una materia prima o producto a mantener para permitir un adecuado abastecimiento de los mismos para atender su demanda futura.</li>\n                    <li>Determinar la cantidad de reaprovicionamiento requerido en un período determinado.</li>\n                    <li>Determinar el costo total esperado del lote.</li>\n                    <li>Determinar la duración del lote.</li>\n                  </ul>\n                  </CardBody>\n                </Card>\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <h4>Definición de variables de entrada a los modelos</h4>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>K</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo de preparación, de lanzamiento o de emisión de la orden de compra. <hr></hr>\n                    Es un costo que podemos considerar independiente de la cantidad ordenada. Son los costos de papelería, telefónicos, etc., así como de la mano de obra interviniente. También incluyen la parte de los costos de recepción e inspección que son independientes del tamaño del lote ordenado.<p></p>\n                    Si el sistema de inventario controla la planta donde se fabrica el ítem en cuestión, y si suponemos que el ítem se fabrica por lotes, los costos de preparar todo para fabricar ese conjunto también caerán en esta categoría.<p></p>\n                    Estos costos no dependen de la cantidad ordenada. Se incurre en ellos cada vez que se coloca una orden y se los puede considerar costos \"fijos\". Son los costos fijos de colocar una orden de compra.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>b</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo del producto, de adquisición o de producción. <hr></hr>\n                    Supondremos que es el costo unitario, independiente (salvo para un modelo en especial) de la cantidad comprada.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>C1</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo de almacenamiento. <hr></hr>\n                    Es el costo de mantener en el almacén una unidad del ítem en la unidad de tiempo. Comprende costos fijos y variables.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>C2</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo de escasez o agotamiento. <hr></hr>\n                    Aparecerá en los modelos que admitan ruptura del stock. \n                    La ruptura del stock tiene dos perjuicios:<p></p>\n                    - inmediato: ingresos retrasados, llevar registros extra.<p></p>\n                    - mediato: pérdida del prestigio comercial.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>T</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Tiempo total o período total. Se debe ingresar con la unidad de tiempo máximo que se presenta en el enunciado.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>p</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Velocidad de producción.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>d</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Demanda unitaria\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>D</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Demanda total de un periodo dado (T).\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>sp</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Stock de protección, stock mínimo de reposición, inventario de contingencia.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>s</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Stock real almacenado.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>P</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Porcentaje de interés que se produciría con el dinero inmovilizado o porcentaje aplicado al capital invertido.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>C'i</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo propio de la mercadería. Costo efectivo de almacenamiento.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>Porcentaje aplicado a costo de producto</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Forma parte del costo propio de la mercadería pero se solicita ingresar a parte para poder calcularlo segun el precio del producto.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>bi - Costo de producto</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Precios unitario del producto que varían segun la cantidad del producto que comprende el lote.\n                    Costo del i-esimo producto.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>Límite de lotes</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Límite inferior de los intervalos de los diferentes tamaños de lotes que se presentan en el modelo.\n                  </CardBody>\n                </Card>\n              </Jumbotron>\n            </Row>\n            <Row>\n              <Jumbotron className='w-100'>\n                <h4>Definición de variables de salida o resultado de los modelos</h4>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>qo</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Tamaño de lote óptimo\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>so</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Stock óptimo\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>sm</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Stock máximo\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>n</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Es el número de veces que se emite una orden de compra o se solicita un reaprovisionamiento en el período T.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>To</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Duración del lote, o tiempo óptimo para la siguiente reaprovicionamiento, o duración del ciclo de reaprovicionamiento.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>T1</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Duración del lote, tiempo donde no existe agotamiento.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>T2</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Tiempo donde existe agotamiento.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>Tp</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Duración de la produccion, tiempo de producción.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>CTAlm</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo total de almacenamiento.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>CTProd</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo total de producto.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>CTPre</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo total de preparación.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>CTE</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo Total Esperado.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>CTEo</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo Total Esperado Óptimo.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>cmsp</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo de mantenimiento del stock de protección (sp).\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>casp</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo de adquisición del stock de protección (sp).\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>ca</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo total del agotamiento.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>liminf</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Límite inferior del intervalo del lote que se opto al final como óptimo, produciendo el menor costo total esperado.\n                  </CardBody>\n                </Card>\n                <Card outline color=\"secondary\" className=\"w-100 mt-3\">\n                  <CardHeader>\n                    <CardTitle className=\"text-left\">\n                      <h4>cprod</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"mx-auto text-justify\">\n                    Costo del producto por el que se optó al final con el tamaño del lote considerado como óptimo, produciendo el menor costo total esperado.\n                  </CardBody>\n                </Card>\n              </Jumbotron>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default StockTeoria;","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Inicio from \"./components/Inicio\";\n\nimport LinealProgramming from './components/LinealProgramming';\nimport InSteps from \"./components/LinealProgramming/InSteps\";\nimport SinglePage from \"./components/LinealProgramming/SinglePage\";\n\nimport NoLinealProgramming from \"./components/NoLinealProgramming/indexNoImplementado\";\nimport KuhnyTucker from \"./components/NoLinealProgramming/KuhnyTucker\";\n\nimport ModeloRedes from \"./components/ModeloRedes\";\nimport ArbolMinimaExpansion from \"./components/ModeloRedes/ArbolMinimaExpansion\";\nimport RutaMasCorta from \"./components/ModeloRedes/RutaMasCorta\";\n\nimport ModeloStock from \"./components/ModeloStock\";\nimport ModeloWilson from \"./components/ModeloStock/ModeloWilson\";\nimport Modelo2 from \"./components/ModeloStock/Modelo2\";\nimport ModeloTriangular from \"./components/ModeloStock/ModeloTriangular\";\nimport ModeloSimpleConAgotamiento from \"./components/ModeloStock/ModeloAgotamientoSimple\";\nimport ModeloSimpleSinAgotamientoPorLote from \"./components/ModeloStock/ModeloSimpleSinAgotamientoPorLote\";\nimport ModeloStockTeoria from \"./components/ModeloStock/Teoria\"\n\nconst NoLinealProgrammingPage = () => <NoLinealProgramming />;\n\nconst Index = () => <Inicio/>;\n\nconst App = () => \n    <Switch>\n      <Route exact path=\"/\" component={Index} />\n      <Route exact path=\"/optimizer-pl-io\" component={Index} />\n\n      <Route exact path=\"/LinealProgramming\" component={LinealProgramming} />\n      <Route exact path=\"/LinealProgramming/InSteps\" component={InSteps} />\n      <Route exact path=\"/LinealProgramming/SinglePage\" component={SinglePage} />\n\n      <Route exact path=\"/NoLinealProgramming\" component={NoLinealProgrammingPage} />\n      <Route exact path=\"/NoLinealProgramming/Lagrange\" component={NoLinealProgrammingPage} />\n      <Route exact path=\"/NoLinealProgramming/Kuhn-Tucker\" component={KuhnyTucker} />\n\n\n      <Route exact path=\"/ModeloRedes\" component={ModeloRedes} />\n      <Route exact path=\"/ModeloRedes/ArbolMinimaExpansion\" component={ArbolMinimaExpansion} />\n      <Route exact path=\"/ModeloRedes/RutaMasCorta\" component={RutaMasCorta} />\n\n\n      <Route exact path=\"/ModeloStock\" component={ModeloStock} />\n      <Route exact path=\"/ModeloStock/ModeloWilson\" component={ModeloWilson} /> \n      <Route exact path=\"/ModeloStock/Modelo2\" component={Modelo2} />\n      <Route exact path=\"/ModeloStock/ModeloTriangular\" component={ModeloTriangular} /> \n      <Route exact path=\"/ModeloStock/ModeloSimpleConAgotamiento\" component={ModeloSimpleConAgotamiento} /> \n      <Route exact path=\"/ModeloStock/ModeloSimpleSinAgotamientoPorLote\" component={ModeloSimpleSinAgotamientoPorLote} /> \n      <Route exact path=\"/ModeloStock/Teoria\" component={ModeloStockTeoria} />\n      <Redirect to=\"/\" />\n    </Switch>;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from \"react-router-dom\";\nimport './App.css';\nimport './index.css';\nimport 'react-vis/dist/style.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const math = require(\"mathjs\");\n\nfunction CalcularqoComun(K,D,T,C1){\n    let qo = math.sqrt(2 * K * D/(T * C1));\n    return qo;\n}\n\nfunction CalcularN(qo,D){\n    let n = D / qo;\n    return n;\n}\n\nfunction CalcularToComun(K,T,D,C1){\n    let To = math.sqrt(2 * K * T/(D * C1));\n    return To;\n}\n\nfunction CalcularCTEoComun(ctprod,T,D,K,C1){\n    let CTEo = ctprod + math.sqrt(2 * T * D * K * C1);\n    return CTEo;\n}\n\nfunction CostoTotalPreparacionComun(D,q,K){\n    let ctprep = D/q * K;\n    return ctprep;\n}\n\nfunction CostoTotalProductoComun(b, D){\n    let ctprod = b * D;\n    return ctprod\n}\n\nmodule.exports = {CalcularqoComun,CalcularN,CalcularToComun,CalcularCTEoComun,CostoTotalPreparacionComun,CostoTotalProductoComun};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}